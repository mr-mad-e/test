{
    "version": 3,
    "file": "387.js",
    "mappings": "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",
    "sources": [
        "webpack://@app/reports/./src/index.css?a05c",
        "webpack://@app/reports/../../packages/api/build/index.es.js",
        "webpack://@app/reports/./src/pages/Reports.scss?8f06",
        "webpack://@app/reports/./src/pages/Reports.tsx",
        "webpack://@app/reports/./src/AppRouter.tsx",
        "webpack://@app/reports/./src/App.tsx",
        "webpack://@app/reports/./src/index.css",
        "webpack://@app/reports/./src/pages/Reports.scss"
    ],
    "sourcesContent": [
        "\n      import API from \"!../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/cjs.js!../../../../node_modules/.pnpm/postcss-loader@4.3.0_postcss@8.4.49_webpack@5.96.1_@swc+core@1.9.2_/node_modules/postcss-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/cjs.js!../../../../node_modules/.pnpm/postcss-loader@4.3.0_postcss@8.4.49_webpack@5.96.1_@swc+core@1.9.2_/node_modules/postcss-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n",
        "import { useMutation, useQuery, useQueryClient, onlineManager, notifyManager } from '@tanstack/react-query';\nexport * from '@tanstack/react-query';\nimport * as React from 'react';\nimport React__default, { useEffect, useMemo, useReducer, useContext, useState, createContext, useCallback, useRef } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar secureLs = {exports: {}};\n\n/*!\n * secure-ls - v1.2.6\n * URL - https://github.com/softvar/secure-ls\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2024 Varun Malhotra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n *\n * Dependencies used -\n *  1. crypto-js - ^4.2.0\n *  2. lz-string - ^1.5.0\n */\n\n(function (module, exports) {\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t  // CommonJS2\n\t  module.exports = factory();\n\t})(commonjsGlobal, () => {\n\t  return /******/ (() => {\n\t    // webpackBootstrap\n\t    /******/ var __webpack_modules__ = {\n\t      /***/ './src/Base64.js':\n\t        /*!***********************!*\\\n\t  !*** ./src/Base64.js ***!\n\t  \\***********************/\n\t        /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\t          __webpack_require__.r(__webpack_exports__);\n\t          /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t            /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,\n\t            /* harmony export */\n\t          });\n\t          const Base64 = {\n\t            _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t            encode: function (e) {\n\t              let t = '';\n\t              let n, r, i, s, o, u, a;\n\t              let f = 0;\n\t              e = Base64._utf8Encode(e);\n\t              while (f < e.length) {\n\t                n = e.charCodeAt(f++);\n\t                r = e.charCodeAt(f++);\n\t                i = e.charCodeAt(f++);\n\t                s = n >> 2;\n\t                o = ((n & 3) << 4) | (r >> 4);\n\t                u = ((r & 15) << 2) | (i >> 6);\n\t                a = i & 63;\n\t                if (isNaN(r)) {\n\t                  u = a = 64;\n\t                } else if (isNaN(i)) {\n\t                  a = 64;\n\t                }\n\t                t =\n\t                  t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a);\n\t              }\n\t              return t;\n\t            },\n\t            decode: function (e) {\n\t              let t = '';\n\t              let n, r, i;\n\t              let s, o, u, a;\n\t              let f = 0;\n\t              e = e.replace(/[^A-Za-z0-9+/=]/g, '');\n\t              while (f < e.length) {\n\t                s = this._keyStr.indexOf(e.charAt(f++));\n\t                o = this._keyStr.indexOf(e.charAt(f++));\n\t                u = this._keyStr.indexOf(e.charAt(f++));\n\t                a = this._keyStr.indexOf(e.charAt(f++));\n\t                n = (s << 2) | (o >> 4);\n\t                r = ((o & 15) << 4) | (u >> 2);\n\t                i = ((u & 3) << 6) | a;\n\t                t = t + String.fromCharCode(n);\n\t                if (u !== 64) {\n\t                  t = t + String.fromCharCode(r);\n\t                }\n\t                if (a !== 64) {\n\t                  t = t + String.fromCharCode(i);\n\t                }\n\t              }\n\t              t = Base64._utf8Decode(t);\n\t              return t;\n\t            },\n\t            _utf8Encode: function (e) {\n\t              e = e.replace(/\\r\\n/g, '\\n');\n\t              let t = '';\n\t              for (let n = 0; n < e.length; n++) {\n\t                let r = e.charCodeAt(n);\n\t                if (r < 128) {\n\t                  t += String.fromCharCode(r);\n\t                } else if (r > 127 && r < 2048) {\n\t                  t += String.fromCharCode((r >> 6) | 192);\n\t                  t += String.fromCharCode((r & 63) | 128);\n\t                } else {\n\t                  t += String.fromCharCode((r >> 12) | 224);\n\t                  t += String.fromCharCode(((r >> 6) & 63) | 128);\n\t                  t += String.fromCharCode((r & 63) | 128);\n\t                }\n\t              }\n\t              return t;\n\t            },\n\t            _utf8Decode: function (e) {\n\t              let t = '';\n\t              let n = 0;\n\t              let r, c2, c3;\n\t              r = c2 = 0;\n\t              while (n < e.length) {\n\t                r = e.charCodeAt(n);\n\t                if (r < 128) {\n\t                  t += String.fromCharCode(r);\n\t                  n++;\n\t                } else if (r > 191 && r < 224) {\n\t                  c2 = e.charCodeAt(n + 1);\n\t                  t += String.fromCharCode(((r & 31) << 6) | (c2 & 63));\n\t                  n += 2;\n\t                } else {\n\t                  c2 = e.charCodeAt(n + 1);\n\t                  c3 = e.charCodeAt(n + 2);\n\t                  t += String.fromCharCode(((r & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t                  n += 3;\n\t                }\n\t              }\n\t              return t;\n\t            },\n\t          };\n\t          /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = Base64;\n\n\t          /***/\n\t        },\n\n\t      /***/ './src/SecureLS.js':\n\t        /*!*************************!*\\\n\t  !*** ./src/SecureLS.js ***!\n\t  \\*************************/\n\t        /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\t          __webpack_require__.r(__webpack_exports__);\n\t          /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t            /* harmony export */ SecureLS: () => /* binding */ SecureLS,\n\t            /* harmony export */\n\t          });\n\t          /* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\n\t            /*! ./constants */ './src/constants.js',\n\t          );\n\t          /* harmony import */ var _enc_utf8__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\n\t            /*! ./enc-utf8 */ './src/enc-utf8.js',\n\t          );\n\t          /* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\n\t            /*! ./utils */ './src/utils.js',\n\t          );\n\t          /* harmony import */ var crypto_js_aes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\n\t            /*! crypto-js/aes */ './node_modules/crypto-js/aes.js',\n\t          );\n\t          /* harmony import */ var crypto_js_aes__WEBPACK_IMPORTED_MODULE_3___default =\n\t            /*#__PURE__*/ __webpack_require__.n(crypto_js_aes__WEBPACK_IMPORTED_MODULE_3__);\n\t          /* harmony import */ var crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\n\t            /*! crypto-js/rabbit */ './node_modules/crypto-js/rabbit.js',\n\t          );\n\t          /* harmony import */ var crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4___default =\n\t            /*#__PURE__*/ __webpack_require__.n(crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4__);\n\t          /* harmony import */ var crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\n\t            /*! crypto-js/rc4 */ './node_modules/crypto-js/rc4.js',\n\t          );\n\t          /* harmony import */ var crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5___default =\n\t            /*#__PURE__*/ __webpack_require__.n(crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5__);\n\t          /* harmony import */ var crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\n\t            /*! crypto-js/tripledes */ './node_modules/crypto-js/tripledes.js',\n\t          );\n\t          /* harmony import */ var crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6___default =\n\t            /*#__PURE__*/ __webpack_require__.n(crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6__);\n\t          /* harmony import */ var lz_string_libs_lz_string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\n\t            /*! lz-string/libs/lz-string */ './node_modules/lz-string/libs/lz-string.js',\n\t          );\n\t          /* harmony import */ var _Base64__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\n\t            /*! ./Base64 */ './src/Base64.js',\n\t          );\n\n\t          const encryptors = {\n\t            [_constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.AES]:\n\t              crypto_js_aes__WEBPACK_IMPORTED_MODULE_3___default(),\n\t            [_constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.DES]:\n\t              crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6___default(),\n\t            [_constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.RABBIT]:\n\t              crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4___default(),\n\t            [_constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.RC4]:\n\t              crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5___default(),\n\t          };\n\t          class SecureLS {\n\t            constructor({\n\t              encryptionSecret = '',\n\t              encryptionNamespace = '',\n\t              isCompression = true,\n\t              encodingType = _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.BASE64,\n\t              storage = localStorage,\n\t              metaKey = _constants__WEBPACK_IMPORTED_MODULE_0__['default'].metaKey,\n\t            } = {}) {\n\t              // Assign libraries and utilities\n\t              Object.assign(this, {\n\t                _name: 'secure-ls',\n\t                Base64: _Base64__WEBPACK_IMPORTED_MODULE_8__['default'],\n\t                LZString: {\n\t                  compressToUTF16: lz_string_libs_lz_string__WEBPACK_IMPORTED_MODULE_7__.compressToUTF16,\n\t                  decompressFromUTF16: lz_string_libs_lz_string__WEBPACK_IMPORTED_MODULE_7__.decompressFromUTF16,\n\t                },\n\t                AES: crypto_js_aes__WEBPACK_IMPORTED_MODULE_3___default(),\n\t                DES: crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6___default(),\n\t                RABBIT: crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4___default(),\n\t                RC4: crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5___default(),\n\t                enc: _enc_utf8__WEBPACK_IMPORTED_MODULE_1__['default'],\n\t              });\n\n\t              // Configuration and property assignment\n\t              this.config = {\n\t                encryptionSecret,\n\t                encryptionNamespace,\n\t                isCompression,\n\t                encodingType: encodingType.toLowerCase(),\n\t                storage,\n\t                metaKey,\n\t              };\n\t              this.encryptionSecret = encryptionSecret;\n\t              this.storage = storage;\n\t              this.metaKey = metaKey;\n\n\t              // Initialize the class\n\t              this.init();\n\t            }\n\t            init() {\n\t              let metaData = this.getMetaData();\n\t              this._isBase64 = this._isBase64EncryptionType();\n\t              this._isAES = this._isAESEncryptionType();\n\t              this._isDES = this._isDESEncryptionType();\n\t              this._isRabbit = this._isRabbitEncryptionType();\n\t              this._isRC4 = this._isRC4EncryptionType();\n\t              this._isCompression = this._isDataCompressionEnabled();\n\n\t              // fill the already present keys to the list of keys being used by secure-ls\n\t              this.allKeys = metaData.keys || this.resetAllKeys();\n\t            }\n\t            _isBase64EncryptionType() {\n\t              return (\n\t                _Base64__WEBPACK_IMPORTED_MODULE_8__['default'] &&\n\t                (typeof this.config.encodingType === 'undefined' ||\n\t                  this.config.encodingType === _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.BASE64)\n\t              );\n\t            }\n\t            _isAESEncryptionType() {\n\t              return (\n\t                crypto_js_aes__WEBPACK_IMPORTED_MODULE_3___default() &&\n\t                this.config.encodingType === _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.AES\n\t              );\n\t            }\n\t            _isDESEncryptionType() {\n\t              return (\n\t                crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6___default() &&\n\t                this.config.encodingType === _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.DES\n\t              );\n\t            }\n\t            _isRabbitEncryptionType() {\n\t              return (\n\t                crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4___default() &&\n\t                this.config.encodingType === _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.RABBIT\n\t              );\n\t            }\n\t            _isRC4EncryptionType() {\n\t              return (\n\t                crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5___default() &&\n\t                this.config.encodingType === _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.RC4\n\t              );\n\t            }\n\t            _isDataCompressionEnabled() {\n\t              return this.config.isCompression;\n\t            }\n\t            getEncryptionSecret(key) {\n\t              let metaData = this.getMetaData();\n\t              let obj = _utils__WEBPACK_IMPORTED_MODULE_2__['default'].getObjectFromKey(metaData.keys, key);\n\t              if (!obj) {\n\t                return;\n\t              }\n\t              if (this._isAES || this._isDES || this._isRabbit || this._isRC4) {\n\t                if (typeof this.config.encryptionSecret === 'undefined') {\n\t                  this.encryptionSecret = obj.s;\n\t                  if (!this.encryptionSecret) {\n\t                    this.encryptionSecret = _utils__WEBPACK_IMPORTED_MODULE_2__['default'].generateSecretKey();\n\t                    this.setMetaData();\n\t                  }\n\t                } else {\n\t                  this.encryptionSecret = this.config.encryptionSecret || obj.s || '';\n\t                }\n\t              }\n\t            }\n\t            getEncryptionType() {\n\t              const encodingType = this.config.encodingType;\n\t              return encodingType\n\t                ? encodingType.toLowerCase()\n\t                : _constants__WEBPACK_IMPORTED_MODULE_0__['default'].EncrytionTypes.BASE64;\n\t            }\n\t            getDataFromLocalStorage(key) {\n\t              return this.storage.getItem(key, true);\n\t            }\n\t            setDataToLocalStorage(key, data) {\n\t              this.storage.setItem(key, data);\n\t            }\n\t            setMetaData() {\n\t              let dataToStore = this.processData(\n\t                {\n\t                  keys: this.allKeys,\n\t                },\n\t                true,\n\t              );\n\n\t              // Store the data to localStorage\n\t              this.setDataToLocalStorage(this.getMetaKey(), dataToStore);\n\t            }\n\t            getMetaData() {\n\t              return this.get(this.getMetaKey(), true) || {};\n\t            }\n\t            getMetaKey() {\n\t              return this.metaKey + (this.config.encryptionNamespace ? '__' + this.config.encryptionNamespace : '');\n\t            }\n\t            resetAllKeys() {\n\t              this.allKeys = [];\n\t              return [];\n\t            }\n\t            processData(data, isAllKeysData) {\n\t              if (data === null || data === undefined || data === '') {\n\t                return '';\n\t              }\n\t              let jsonData;\n\t              try {\n\t                jsonData = JSON.stringify(data);\n\t              } catch (err) {\n\t                throw new Error('Could not stringify data', err);\n\t              }\n\n\t              // Encode Based on encoding type\n\t              // If not set, default to Base64 for securing data\n\t              let encodedData = jsonData;\n\t              if (this._isBase64 || isAllKeysData) {\n\t                encodedData = _Base64__WEBPACK_IMPORTED_MODULE_8__['default'].encode(jsonData);\n\t              } else {\n\t                const encryptor = encryptors[this.getEncryptionType()];\n\t                if (encryptor) {\n\t                  encodedData = encryptor.encrypt(jsonData, this.encryptionSecret);\n\t                }\n\t                encodedData = encodedData && encodedData.toString();\n\t              }\n\n\t              // Compress data if set to true\n\t              let compressedData = encodedData;\n\t              if (this._isCompression || isAllKeysData) {\n\t                compressedData = this.LZString.compressToUTF16(encodedData);\n\t              }\n\t              return compressedData;\n\t            }\n\n\t            // PUBLIC APIs\n\t            getAllKeys() {\n\t              let data = this.getMetaData();\n\t              return _utils__WEBPACK_IMPORTED_MODULE_2__['default'].extractKeyNames(data) || [];\n\t            }\n\t            get(key, isAllKeysData) {\n\t              let decodedData = '';\n\t              let jsonData = '';\n\t              if (!_utils__WEBPACK_IMPORTED_MODULE_2__['default'].is(key)) {\n\t                _utils__WEBPACK_IMPORTED_MODULE_2__['default'].warn(\n\t                  _constants__WEBPACK_IMPORTED_MODULE_0__['default'].WarningEnum.KEY_NOT_PROVIDED,\n\t                );\n\t                return jsonData;\n\t              }\n\t              let data = this.getDataFromLocalStorage(key);\n\t              if (!data) {\n\t                return jsonData;\n\t              }\n\t              let deCompressedData = data; // saves else\n\t              if (this._isCompression || isAllKeysData) {\n\t                // meta data always compressed\n\t                deCompressedData = this.LZString.decompressFromUTF16(data);\n\t              }\n\t              decodedData = deCompressedData; // saves else\n\t              if (this._isBase64 || isAllKeysData) {\n\t                // meta data always Base64\n\t                decodedData = _Base64__WEBPACK_IMPORTED_MODULE_8__['default'].decode(deCompressedData);\n\t              } else {\n\t                this.getEncryptionSecret(key);\n\t                const encryptor = encryptors[this.getEncryptionType()];\n\t                if (encryptor) {\n\t                  const bytes = encryptor.decrypt(deCompressedData.toString(), this.encryptionSecret);\n\t                  if (bytes) {\n\t                    decodedData = bytes.toString(_enc_utf8__WEBPACK_IMPORTED_MODULE_1__['default']._Utf8);\n\t                  }\n\t                }\n\t              }\n\t              try {\n\t                jsonData = JSON.parse(decodedData);\n\t              } catch (err) {\n\t                throw new Error('Could not parse JSON', err);\n\t              }\n\t              return jsonData;\n\t            }\n\t            set(key, data) {\n\t              let dataToStore = '';\n\t              if (!_utils__WEBPACK_IMPORTED_MODULE_2__['default'].is(key)) {\n\t                _utils__WEBPACK_IMPORTED_MODULE_2__['default'].warn(\n\t                  _constants__WEBPACK_IMPORTED_MODULE_0__['default'].WarningEnum.KEY_NOT_PROVIDED,\n\t                );\n\t                return;\n\t              }\n\t              this.getEncryptionSecret(key);\n\n\t              // add key(s) to Array if not already added, only for keys other than meta key\n\t              if (!(String(key) === String(this.metaKey))) {\n\t                if (!_utils__WEBPACK_IMPORTED_MODULE_2__['default'].isKeyPresent(this.allKeys, key)) {\n\t                  this.allKeys.push({\n\t                    k: key,\n\t                    s: this.encryptionSecret,\n\t                  });\n\t                  this.setMetaData();\n\t                }\n\t              }\n\t              dataToStore = this.processData(data);\n\t              // Store the data to localStorage\n\t              this.setDataToLocalStorage(key, dataToStore);\n\t            }\n\t            remove(key) {\n\t              if (!_utils__WEBPACK_IMPORTED_MODULE_2__['default'].is(key)) {\n\t                _utils__WEBPACK_IMPORTED_MODULE_2__['default'].warn(\n\t                  _constants__WEBPACK_IMPORTED_MODULE_0__['default'].WarningEnum.KEY_NOT_PROVIDED,\n\t                );\n\t                return;\n\t              }\n\t              if (key === this.metaKey && this.getAllKeys().length) {\n\t                _utils__WEBPACK_IMPORTED_MODULE_2__['default'].warn(\n\t                  _constants__WEBPACK_IMPORTED_MODULE_0__['default'].WarningEnum.META_KEY_REMOVE,\n\t                );\n\t                return;\n\t              }\n\t              if (_utils__WEBPACK_IMPORTED_MODULE_2__['default'].isKeyPresent(this.allKeys, key)) {\n\t                _utils__WEBPACK_IMPORTED_MODULE_2__['default'].removeFromKeysList(this.allKeys, key);\n\t                this.setMetaData();\n\t              }\n\t              this.storage.removeItem(key);\n\t            }\n\t            removeAll() {\n\t              let keys = this.getAllKeys();\n\t              for (let i = 0; i < keys.length; i++) {\n\t                this.storage.removeItem(keys[i]);\n\t              }\n\t              this.storage.removeItem(this.metaKey);\n\t              this.resetAllKeys();\n\t            }\n\t            clear() {\n\t              this.storage.clear();\n\t              this.resetAllKeys();\n\t            }\n\t          }\n\n\t          /***/\n\t        },\n\n\t      /***/ './src/WordArray.js':\n\t        /*!**************************!*\\\n\t  !*** ./src/WordArray.js ***!\n\t  \\**************************/\n\t        /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\t          __webpack_require__.r(__webpack_exports__);\n\t          /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t            /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,\n\t            /* harmony export */\n\t          });\n\t          /*\n\t ES6 compatible port of CryptoJS - WordArray for PBKDF2 password key generation\n\n\t Source: https://github.com/brix/crypto-js\n\t LICENSE: MIT\n\t */\n\n\t          let CryptoJSWordArray = {\n\t            random: function (nBytes) {\n\t              let words = [];\n\t              let r = function (mw) {\n\t                let mz = 0x3ade68b1;\n\t                let mask = 0xffffffff;\n\t                return function () {\n\t                  mz = (0x9069 * (mz & 0xffff) + (mz >> 0x10)) & mask;\n\t                  mw = (0x4650 * (mw & 0xffff) + (mw >> 0x10)) & mask;\n\t                  let result = ((mz << 0x10) + mw) & mask;\n\t                  result /= 0x100000000;\n\t                  result += 0.5;\n\t                  return result * (Math.random() > 0.5 ? 1 : -1);\n\t                };\n\t              };\n\t              for (let i = 0, rcache; i < nBytes; i += 4) {\n\t                let _r = r((rcache || Math.random()) * 0x100000000);\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t              }\n\t              return new CryptoJSWordArray.Set(words, nBytes);\n\t            },\n\t            Set: function (words, sigBytes) {\n\t              words = this.words = words || [];\n\t              if (sigBytes !== undefined) {\n\t                this.sigBytes = sigBytes;\n\t              } else {\n\t                this.sigBytes = words.length * 8;\n\t              }\n\t            },\n\t          };\n\t          /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = CryptoJSWordArray;\n\n\t          /***/\n\t        },\n\n\t      /***/ './src/constants.js':\n\t        /*!**************************!*\\\n\t  !*** ./src/constants.js ***!\n\t  \\**************************/\n\t        /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\t          __webpack_require__.r(__webpack_exports__);\n\t          /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t            /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,\n\t            /* harmony export */\n\t          });\n\t          const WarningEnum = {\n\t            KEY_NOT_PROVIDED: 'keyNotProvided',\n\t            META_KEY_REMOVE: 'metaKeyRemove',\n\t            DEFAULT_TEXT: 'defaultText',\n\t          };\n\t          const WarningTypes = {};\n\t          WarningTypes[WarningEnum.KEY_NOT_PROVIDED] = 'Secure LS: Key not provided. Aborting operation!';\n\t          WarningTypes[WarningEnum.META_KEY_REMOVE] = `Secure LS: Meta key can not be removed\nunless all keys created by Secure LS are removed!`;\n\t          WarningTypes[WarningEnum.DEFAULT_TEXT] = `Unexpected output`;\n\t          const constants = {\n\t            WarningEnum: WarningEnum,\n\t            WarningTypes: WarningTypes,\n\t            EncrytionTypes: {\n\t              BASE64: 'base64',\n\t              AES: 'aes',\n\t              DES: 'des',\n\t              RABBIT: 'rabbit',\n\t              RC4: 'rc4',\n\t            },\n\t            metaKey: '_secure__ls__metadata',\n\t            secretPhrase: 's3cr3t$#@135^&*246',\n\t          };\n\t          /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = constants;\n\n\t          /***/\n\t        },\n\n\t      /***/ './src/enc-utf8.js':\n\t        /*!*************************!*\\\n\t  !*** ./src/enc-utf8.js ***!\n\t  \\*************************/\n\t        /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\t          __webpack_require__.r(__webpack_exports__);\n\t          /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t            /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,\n\t            /* harmony export */\n\t          });\n\t          /*\n\t ES6 compatible port of CryptoJS - encoding\n\n\t Source: https://github.com/brix/crypto-js\n\t LICENSE: MIT\n\t */\n\t          const enc = {\n\t            Latin1: {\n\t              stringify: (wordArray) => {\n\t                // Shortcuts\n\t                let words = wordArray.words;\n\t                let sigBytes = wordArray.sigBytes;\n\t                let latin1Chars = [],\n\t                  i,\n\t                  bite;\n\n\t                // Convert\n\t                for (i = 0; i < sigBytes; i++) {\n\t                  bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                  latin1Chars.push(String.fromCharCode(bite));\n\t                }\n\t                return latin1Chars.join('');\n\t              },\n\t            },\n\t            _Utf8: {\n\t              stringify: (wordArray) => {\n\t                try {\n\t                  return decodeURIComponent(escape(enc.Latin1.stringify(wordArray)));\n\t                } catch (err) {\n\t                  throw new Error('Malformed UTF-8 data', err);\n\t                }\n\t              },\n\t            },\n\t          };\n\t          /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = enc;\n\n\t          /***/\n\t        },\n\n\t      /***/ './src/utils.js':\n\t        /*!**********************!*\\\n\t  !*** ./src/utils.js ***!\n\t  \\**********************/\n\t        /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\t          __webpack_require__.r(__webpack_exports__);\n\t          /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t            /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,\n\t            /* harmony export */\n\t          });\n\t          /* harmony import */ var crypto_js_pbkdf2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\n\t            /*! crypto-js/pbkdf2 */ './node_modules/crypto-js/pbkdf2.js',\n\t          );\n\t          /* harmony import */ var crypto_js_pbkdf2__WEBPACK_IMPORTED_MODULE_0___default =\n\t            /*#__PURE__*/ __webpack_require__.n(crypto_js_pbkdf2__WEBPACK_IMPORTED_MODULE_0__);\n\t          /* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\n\t            /*! ./constants */ './src/constants.js',\n\t          );\n\t          /* harmony import */ var _WordArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\n\t            /*! ./WordArray */ './src/WordArray.js',\n\t          );\n\n\t          const utils = {\n\t            is: (key) => !!key,\n\t            warn: (reason = _constants__WEBPACK_IMPORTED_MODULE_1__['default'].WarningEnum.DEFAULT_TEXT) => {\n\t              console.warn(_constants__WEBPACK_IMPORTED_MODULE_1__['default'].WarningTypes[reason]);\n\t            },\n\t            generateSecretKey: () => {\n\t              const salt = _WordArray__WEBPACK_IMPORTED_MODULE_2__['default'].random(128 / 8);\n\t              const key128Bits = crypto_js_pbkdf2__WEBPACK_IMPORTED_MODULE_0___default()(\n\t                _constants__WEBPACK_IMPORTED_MODULE_1__['default'].secretPhrase,\n\t                salt,\n\t                {\n\t                  keySize: 128 / 32,\n\t                },\n\t              );\n\t              return key128Bits.toString();\n\t            },\n\t            getObjectFromKey: (data = [], key) => {\n\t              return data.find((item) => item.k === key) || {};\n\t            },\n\t            extractKeyNames: ({ keys = [] } = {}) => {\n\t              return keys.map(({ k }) => k);\n\t            },\n\t            isKeyPresent: (allKeys = [], key) => {\n\t              return allKeys.some((item) => String(item.k) === String(key));\n\t            },\n\t            removeFromKeysList: (allKeys = [], key) => {\n\t              const index = allKeys.findIndex((item) => item.k === key);\n\t              if (index !== -1) {\n\t                allKeys.splice(index, 1);\n\t              }\n\t              return index;\n\t            },\n\t          };\n\t          /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = utils;\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/aes.js':\n\t        /*!***************************************!*\\\n\t  !*** ./node_modules/crypto-js/aes.js ***!\n\t  \\***************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./enc-base64 */ './node_modules/crypto-js/enc-base64.js'),\n\t                __webpack_require__(/*! ./md5 */ './node_modules/crypto-js/md5.js'),\n\t                __webpack_require__(/*! ./evpkdf */ './node_modules/crypto-js/evpkdf.js'),\n\t                __webpack_require__(/*! ./cipher-core */ './node_modules/crypto-js/cipher-core.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var BlockCipher = C_lib.BlockCipher;\n\t              var C_algo = C.algo;\n\n\t              // Lookup tables\n\t              var SBOX = [];\n\t              var INV_SBOX = [];\n\t              var SUB_MIX_0 = [];\n\t              var SUB_MIX_1 = [];\n\t              var SUB_MIX_2 = [];\n\t              var SUB_MIX_3 = [];\n\t              var INV_SUB_MIX_0 = [];\n\t              var INV_SUB_MIX_1 = [];\n\t              var INV_SUB_MIX_2 = [];\n\t              var INV_SUB_MIX_3 = [];\n\n\t              // Compute lookup tables\n\t              (function () {\n\t                // Compute double table\n\t                var d = [];\n\t                for (var i = 0; i < 256; i++) {\n\t                  if (i < 128) {\n\t                    d[i] = i << 1;\n\t                  } else {\n\t                    d[i] = (i << 1) ^ 0x11b;\n\t                  }\n\t                }\n\n\t                // Walk GF(2^8)\n\t                var x = 0;\n\t                var xi = 0;\n\t                for (var i = 0; i < 256; i++) {\n\t                  // Compute sbox\n\t                  var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t                  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t                  SBOX[x] = sx;\n\t                  INV_SBOX[sx] = x;\n\n\t                  // Compute multiplication\n\t                  var x2 = d[x];\n\t                  var x4 = d[x2];\n\t                  var x8 = d[x4];\n\n\t                  // Compute sub bytes, mix columns tables\n\t                  var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t                  SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t                  SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t                  SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n\t                  SUB_MIX_3[x] = t;\n\n\t                  // Compute inv sub bytes, inv mix columns tables\n\t                  var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t                  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t                  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t                  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n\t                  INV_SUB_MIX_3[sx] = t;\n\n\t                  // Compute next counter\n\t                  if (!x) {\n\t                    x = xi = 1;\n\t                  } else {\n\t                    x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                    xi ^= d[d[xi]];\n\t                  }\n\t                }\n\t              })();\n\n\t              // Precomputed Rcon lookup\n\t              var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t              /**\n\t               * AES block cipher algorithm.\n\t               */\n\t              var AES = (C_algo.AES = BlockCipher.extend({\n\t                _doReset: function () {\n\t                  var t;\n\n\t                  // Skip reset of nRounds has been set before and key did not change\n\t                  if (this._nRounds && this._keyPriorReset === this._key) {\n\t                    return;\n\t                  }\n\n\t                  // Shortcuts\n\t                  var key = (this._keyPriorReset = this._key);\n\t                  var keyWords = key.words;\n\t                  var keySize = key.sigBytes / 4;\n\n\t                  // Compute number of rounds\n\t                  var nRounds = (this._nRounds = keySize + 6);\n\n\t                  // Compute number of key schedule rows\n\t                  var ksRows = (nRounds + 1) * 4;\n\n\t                  // Compute key schedule\n\t                  var keySchedule = (this._keySchedule = []);\n\t                  for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                    if (ksRow < keySize) {\n\t                      keySchedule[ksRow] = keyWords[ksRow];\n\t                    } else {\n\t                      t = keySchedule[ksRow - 1];\n\n\t                      if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t =\n\t                          (SBOX[t >>> 24] << 24) |\n\t                          (SBOX[(t >>> 16) & 0xff] << 16) |\n\t                          (SBOX[(t >>> 8) & 0xff] << 8) |\n\t                          SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                      } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t =\n\t                          (SBOX[t >>> 24] << 24) |\n\t                          (SBOX[(t >>> 16) & 0xff] << 16) |\n\t                          (SBOX[(t >>> 8) & 0xff] << 8) |\n\t                          SBOX[t & 0xff];\n\t                      }\n\n\t                      keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                    }\n\t                  }\n\n\t                  // Compute inv key schedule\n\t                  var invKeySchedule = (this._invKeySchedule = []);\n\t                  for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                    var ksRow = ksRows - invKsRow;\n\n\t                    if (invKsRow % 4) {\n\t                      var t = keySchedule[ksRow];\n\t                    } else {\n\t                      var t = keySchedule[ksRow - 4];\n\t                    }\n\n\t                    if (invKsRow < 4 || ksRow <= 4) {\n\t                      invKeySchedule[invKsRow] = t;\n\t                    } else {\n\t                      invKeySchedule[invKsRow] =\n\t                        INV_SUB_MIX_0[SBOX[t >>> 24]] ^\n\t                        INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                        INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^\n\t                        INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                    }\n\t                  }\n\t                },\n\n\t                encryptBlock: function (M, offset) {\n\t                  this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t                },\n\n\t                decryptBlock: function (M, offset) {\n\t                  // Swap 2nd and 4th rows\n\t                  var t = M[offset + 1];\n\t                  M[offset + 1] = M[offset + 3];\n\t                  M[offset + 3] = t;\n\n\t                  this._doCryptBlock(\n\t                    M,\n\t                    offset,\n\t                    this._invKeySchedule,\n\t                    INV_SUB_MIX_0,\n\t                    INV_SUB_MIX_1,\n\t                    INV_SUB_MIX_2,\n\t                    INV_SUB_MIX_3,\n\t                    INV_SBOX,\n\t                  );\n\n\t                  // Inv swap 2nd and 4th rows\n\t                  var t = M[offset + 1];\n\t                  M[offset + 1] = M[offset + 3];\n\t                  M[offset + 3] = t;\n\t                },\n\n\t                _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t                  // Shortcut\n\t                  var nRounds = this._nRounds;\n\n\t                  // Get input, add round key\n\t                  var s0 = M[offset] ^ keySchedule[0];\n\t                  var s1 = M[offset + 1] ^ keySchedule[1];\n\t                  var s2 = M[offset + 2] ^ keySchedule[2];\n\t                  var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t                  // Key schedule row counter\n\t                  var ksRow = 4;\n\n\t                  // Rounds\n\t                  for (var round = 1; round < nRounds; round++) {\n\t                    // Shift rows, sub bytes, mix columns, add round key\n\t                    var t0 =\n\t                      SUB_MIX_0[s0 >>> 24] ^\n\t                      SUB_MIX_1[(s1 >>> 16) & 0xff] ^\n\t                      SUB_MIX_2[(s2 >>> 8) & 0xff] ^\n\t                      SUB_MIX_3[s3 & 0xff] ^\n\t                      keySchedule[ksRow++];\n\t                    var t1 =\n\t                      SUB_MIX_0[s1 >>> 24] ^\n\t                      SUB_MIX_1[(s2 >>> 16) & 0xff] ^\n\t                      SUB_MIX_2[(s3 >>> 8) & 0xff] ^\n\t                      SUB_MIX_3[s0 & 0xff] ^\n\t                      keySchedule[ksRow++];\n\t                    var t2 =\n\t                      SUB_MIX_0[s2 >>> 24] ^\n\t                      SUB_MIX_1[(s3 >>> 16) & 0xff] ^\n\t                      SUB_MIX_2[(s0 >>> 8) & 0xff] ^\n\t                      SUB_MIX_3[s1 & 0xff] ^\n\t                      keySchedule[ksRow++];\n\t                    var t3 =\n\t                      SUB_MIX_0[s3 >>> 24] ^\n\t                      SUB_MIX_1[(s0 >>> 16) & 0xff] ^\n\t                      SUB_MIX_2[(s1 >>> 8) & 0xff] ^\n\t                      SUB_MIX_3[s2 & 0xff] ^\n\t                      keySchedule[ksRow++];\n\n\t                    // Update state\n\t                    s0 = t0;\n\t                    s1 = t1;\n\t                    s2 = t2;\n\t                    s3 = t3;\n\t                  }\n\n\t                  // Shift rows, sub bytes, add round key\n\t                  var t0 =\n\t                    ((SBOX[s0 >>> 24] << 24) |\n\t                      (SBOX[(s1 >>> 16) & 0xff] << 16) |\n\t                      (SBOX[(s2 >>> 8) & 0xff] << 8) |\n\t                      SBOX[s3 & 0xff]) ^\n\t                    keySchedule[ksRow++];\n\t                  var t1 =\n\t                    ((SBOX[s1 >>> 24] << 24) |\n\t                      (SBOX[(s2 >>> 16) & 0xff] << 16) |\n\t                      (SBOX[(s3 >>> 8) & 0xff] << 8) |\n\t                      SBOX[s0 & 0xff]) ^\n\t                    keySchedule[ksRow++];\n\t                  var t2 =\n\t                    ((SBOX[s2 >>> 24] << 24) |\n\t                      (SBOX[(s3 >>> 16) & 0xff] << 16) |\n\t                      (SBOX[(s0 >>> 8) & 0xff] << 8) |\n\t                      SBOX[s1 & 0xff]) ^\n\t                    keySchedule[ksRow++];\n\t                  var t3 =\n\t                    ((SBOX[s3 >>> 24] << 24) |\n\t                      (SBOX[(s0 >>> 16) & 0xff] << 16) |\n\t                      (SBOX[(s1 >>> 8) & 0xff] << 8) |\n\t                      SBOX[s2 & 0xff]) ^\n\t                    keySchedule[ksRow++];\n\n\t                  // Set output\n\t                  M[offset] = t0;\n\t                  M[offset + 1] = t1;\n\t                  M[offset + 2] = t2;\n\t                  M[offset + 3] = t3;\n\t                },\n\n\t                keySize: 256 / 32,\n\t              }));\n\n\t              /**\n\t               * Shortcut functions to the cipher's object interface.\n\t               *\n\t               * @example\n\t               *\n\t               *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t               *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t               */\n\t              C.AES = BlockCipher._createHelper(AES);\n\t            })();\n\n\t            return CryptoJS.AES;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/cipher-core.js':\n\t        /*!***********************************************!*\\\n\t  !*** ./node_modules/crypto-js/cipher-core.js ***!\n\t  \\***********************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./evpkdf */ './node_modules/crypto-js/evpkdf.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            /**\n\t             * Cipher core components.\n\t             */\n\t            CryptoJS.lib.Cipher ||\n\t              (function (undefined$1) {\n\t                // Shortcuts\n\t                var C = CryptoJS;\n\t                var C_lib = C.lib;\n\t                var Base = C_lib.Base;\n\t                var WordArray = C_lib.WordArray;\n\t                var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t                var C_enc = C.enc;\n\t                C_enc.Utf8;\n\t                var Base64 = C_enc.Base64;\n\t                var C_algo = C.algo;\n\t                var EvpKDF = C_algo.EvpKDF;\n\n\t                /**\n\t                 * Abstract base cipher template.\n\t                 *\n\t                 * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t                 * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t                 * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t                 * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t                 */\n\t                var Cipher = (C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t                  /**\n\t                   * Configuration options.\n\t                   *\n\t                   * @property {WordArray} iv The IV to use for this operation.\n\t                   */\n\t                  cfg: Base.extend(),\n\n\t                  /**\n\t                   * Creates this cipher in encryption mode.\n\t                   *\n\t                   * @param {WordArray} key The key.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @return {Cipher} A cipher instance.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t                   */\n\t                  createEncryptor: function (key, cfg) {\n\t                    return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t                  },\n\n\t                  /**\n\t                   * Creates this cipher in decryption mode.\n\t                   *\n\t                   * @param {WordArray} key The key.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @return {Cipher} A cipher instance.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t                   */\n\t                  createDecryptor: function (key, cfg) {\n\t                    return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t                  },\n\n\t                  /**\n\t                   * Initializes a newly created cipher.\n\t                   *\n\t                   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t                   * @param {WordArray} key The key.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t                   */\n\t                  init: function (xformMode, key, cfg) {\n\t                    // Apply config defaults\n\t                    this.cfg = this.cfg.extend(cfg);\n\n\t                    // Store transform mode and key\n\t                    this._xformMode = xformMode;\n\t                    this._key = key;\n\n\t                    // Set initial values\n\t                    this.reset();\n\t                  },\n\n\t                  /**\n\t                   * Resets this cipher to its initial state.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     cipher.reset();\n\t                   */\n\t                  reset: function () {\n\t                    // Reset data buffer\n\t                    BufferedBlockAlgorithm.reset.call(this);\n\n\t                    // Perform concrete-cipher logic\n\t                    this._doReset();\n\t                  },\n\n\t                  /**\n\t                   * Adds data to be encrypted or decrypted.\n\t                   *\n\t                   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t                   *\n\t                   * @return {WordArray} The data after processing.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var encrypted = cipher.process('data');\n\t                   *     var encrypted = cipher.process(wordArray);\n\t                   */\n\t                  process: function (dataUpdate) {\n\t                    // Append\n\t                    this._append(dataUpdate);\n\n\t                    // Process available blocks\n\t                    return this._process();\n\t                  },\n\n\t                  /**\n\t                   * Finalizes the encryption or decryption process.\n\t                   * Note that the finalize operation is effectively a destructive, read-once operation.\n\t                   *\n\t                   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t                   *\n\t                   * @return {WordArray} The data after final processing.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var encrypted = cipher.finalize();\n\t                   *     var encrypted = cipher.finalize('data');\n\t                   *     var encrypted = cipher.finalize(wordArray);\n\t                   */\n\t                  finalize: function (dataUpdate) {\n\t                    // Final data update\n\t                    if (dataUpdate) {\n\t                      this._append(dataUpdate);\n\t                    }\n\n\t                    // Perform concrete-cipher logic\n\t                    var finalProcessedData = this._doFinalize();\n\n\t                    return finalProcessedData;\n\t                  },\n\n\t                  keySize: 128 / 32,\n\n\t                  ivSize: 128 / 32,\n\n\t                  _ENC_XFORM_MODE: 1,\n\n\t                  _DEC_XFORM_MODE: 2,\n\n\t                  /**\n\t                   * Creates shortcut functions to a cipher's object interface.\n\t                   *\n\t                   * @param {Cipher} cipher The cipher to create a helper for.\n\t                   *\n\t                   * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t                   */\n\t                  _createHelper: (function () {\n\t                    function selectCipherStrategy(key) {\n\t                      if (typeof key == 'string') {\n\t                        return PasswordBasedCipher;\n\t                      } else {\n\t                        return SerializableCipher;\n\t                      }\n\t                    }\n\n\t                    return function (cipher) {\n\t                      return {\n\t                        encrypt: function (message, key, cfg) {\n\t                          return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                        },\n\n\t                        decrypt: function (ciphertext, key, cfg) {\n\t                          return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                        },\n\t                      };\n\t                    };\n\t                  })(),\n\t                }));\n\n\t                /**\n\t                 * Abstract base stream cipher template.\n\t                 *\n\t                 * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t                 */\n\t                (C_lib.StreamCipher = Cipher.extend({\n\t                  _doFinalize: function () {\n\t                    // Process partial blocks\n\t                    var finalProcessedBlocks = this._process(!!'flush');\n\n\t                    return finalProcessedBlocks;\n\t                  },\n\n\t                  blockSize: 1,\n\t                }));\n\n\t                /**\n\t                 * Mode namespace.\n\t                 */\n\t                var C_mode = (C.mode = {});\n\n\t                /**\n\t                 * Abstract base block cipher mode template.\n\t                 */\n\t                var BlockCipherMode = (C_lib.BlockCipherMode = Base.extend({\n\t                  /**\n\t                   * Creates this mode for encryption.\n\t                   *\n\t                   * @param {Cipher} cipher A block cipher instance.\n\t                   * @param {Array} iv The IV words.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t                   */\n\t                  createEncryptor: function (cipher, iv) {\n\t                    return this.Encryptor.create(cipher, iv);\n\t                  },\n\n\t                  /**\n\t                   * Creates this mode for decryption.\n\t                   *\n\t                   * @param {Cipher} cipher A block cipher instance.\n\t                   * @param {Array} iv The IV words.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t                   */\n\t                  createDecryptor: function (cipher, iv) {\n\t                    return this.Decryptor.create(cipher, iv);\n\t                  },\n\n\t                  /**\n\t                   * Initializes a newly created mode.\n\t                   *\n\t                   * @param {Cipher} cipher A block cipher instance.\n\t                   * @param {Array} iv The IV words.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t                   */\n\t                  init: function (cipher, iv) {\n\t                    this._cipher = cipher;\n\t                    this._iv = iv;\n\t                  },\n\t                }));\n\n\t                /**\n\t                 * Cipher Block Chaining mode.\n\t                 */\n\t                var CBC = (C_mode.CBC = (function () {\n\t                  /**\n\t                   * Abstract base CBC mode.\n\t                   */\n\t                  var CBC = BlockCipherMode.extend();\n\n\t                  /**\n\t                   * CBC encryptor.\n\t                   */\n\t                  CBC.Encryptor = CBC.extend({\n\t                    /**\n\t                     * Processes the data block at offset.\n\t                     *\n\t                     * @param {Array} words The data words to operate on.\n\t                     * @param {number} offset The offset where the block starts.\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     mode.processBlock(data.words, offset);\n\t                     */\n\t                    processBlock: function (words, offset) {\n\t                      // Shortcuts\n\t                      var cipher = this._cipher;\n\t                      var blockSize = cipher.blockSize;\n\n\t                      // XOR and encrypt\n\t                      xorBlock.call(this, words, offset, blockSize);\n\t                      cipher.encryptBlock(words, offset);\n\n\t                      // Remember this block to use with next block\n\t                      this._prevBlock = words.slice(offset, offset + blockSize);\n\t                    },\n\t                  });\n\n\t                  /**\n\t                   * CBC decryptor.\n\t                   */\n\t                  CBC.Decryptor = CBC.extend({\n\t                    /**\n\t                     * Processes the data block at offset.\n\t                     *\n\t                     * @param {Array} words The data words to operate on.\n\t                     * @param {number} offset The offset where the block starts.\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     mode.processBlock(data.words, offset);\n\t                     */\n\t                    processBlock: function (words, offset) {\n\t                      // Shortcuts\n\t                      var cipher = this._cipher;\n\t                      var blockSize = cipher.blockSize;\n\n\t                      // Remember this block to use with next block\n\t                      var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                      // Decrypt and XOR\n\t                      cipher.decryptBlock(words, offset);\n\t                      xorBlock.call(this, words, offset, blockSize);\n\n\t                      // This block becomes the previous block\n\t                      this._prevBlock = thisBlock;\n\t                    },\n\t                  });\n\n\t                  function xorBlock(words, offset, blockSize) {\n\t                    var block;\n\n\t                    // Shortcut\n\t                    var iv = this._iv;\n\n\t                    // Choose mixing block\n\t                    if (iv) {\n\t                      block = iv;\n\n\t                      // Remove IV for subsequent blocks\n\t                      this._iv = undefined$1;\n\t                    } else {\n\t                      block = this._prevBlock;\n\t                    }\n\n\t                    // XOR blocks\n\t                    for (var i = 0; i < blockSize; i++) {\n\t                      words[offset + i] ^= block[i];\n\t                    }\n\t                  }\n\n\t                  return CBC;\n\t                })());\n\n\t                /**\n\t                 * Padding namespace.\n\t                 */\n\t                var C_pad = (C.pad = {});\n\n\t                /**\n\t                 * PKCS #5/7 padding strategy.\n\t                 */\n\t                var Pkcs7 = (C_pad.Pkcs7 = {\n\t                  /**\n\t                   * Pads data using the algorithm defined in PKCS #5/7.\n\t                   *\n\t                   * @param {WordArray} data The data to pad.\n\t                   * @param {number} blockSize The multiple that the data should be padded to.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t                   */\n\t                  pad: function (data, blockSize) {\n\t                    // Shortcut\n\t                    var blockSizeBytes = blockSize * 4;\n\n\t                    // Count padding bytes\n\t                    var nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n\t                    // Create padding word\n\t                    var paddingWord =\n\t                      (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t                    // Create padding\n\t                    var paddingWords = [];\n\t                    for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                      paddingWords.push(paddingWord);\n\t                    }\n\t                    var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t                    // Add padding\n\t                    data.concat(padding);\n\t                  },\n\n\t                  /**\n\t                   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t                   *\n\t                   * @param {WordArray} data The data to unpad.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t                   */\n\t                  unpad: function (data) {\n\t                    // Get number of padding bytes from last byte\n\t                    var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t                    // Remove padding\n\t                    data.sigBytes -= nPaddingBytes;\n\t                  },\n\t                });\n\n\t                /**\n\t                 * Abstract base block cipher template.\n\t                 *\n\t                 * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t                 */\n\t                (C_lib.BlockCipher = Cipher.extend({\n\t                  /**\n\t                   * Configuration options.\n\t                   *\n\t                   * @property {Mode} mode The block mode to use. Default: CBC\n\t                   * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t                   */\n\t                  cfg: Cipher.cfg.extend({\n\t                    mode: CBC,\n\t                    padding: Pkcs7,\n\t                  }),\n\n\t                  reset: function () {\n\t                    var modeCreator;\n\n\t                    // Reset cipher\n\t                    Cipher.reset.call(this);\n\n\t                    // Shortcuts\n\t                    var cfg = this.cfg;\n\t                    var iv = cfg.iv;\n\t                    var mode = cfg.mode;\n\n\t                    // Reset block mode\n\t                    if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                      modeCreator = mode.createEncryptor;\n\t                    } /* if (this._xformMode == this._DEC_XFORM_MODE) */ else {\n\t                      modeCreator = mode.createDecryptor;\n\t                      // Keep at least one block in the buffer for unpadding\n\t                      this._minBufferSize = 1;\n\t                    }\n\n\t                    if (this._mode && this._mode.__creator == modeCreator) {\n\t                      this._mode.init(this, iv && iv.words);\n\t                    } else {\n\t                      this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                      this._mode.__creator = modeCreator;\n\t                    }\n\t                  },\n\n\t                  _doProcessBlock: function (words, offset) {\n\t                    this._mode.processBlock(words, offset);\n\t                  },\n\n\t                  _doFinalize: function () {\n\t                    var finalProcessedBlocks;\n\n\t                    // Shortcut\n\t                    var padding = this.cfg.padding;\n\n\t                    // Finalize\n\t                    if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                      // Pad data\n\t                      padding.pad(this._data, this.blockSize);\n\n\t                      // Process final blocks\n\t                      finalProcessedBlocks = this._process(!!'flush');\n\t                    } /* if (this._xformMode == this._DEC_XFORM_MODE) */ else {\n\t                      // Process final blocks\n\t                      finalProcessedBlocks = this._process(!!'flush');\n\n\t                      // Unpad data\n\t                      padding.unpad(finalProcessedBlocks);\n\t                    }\n\n\t                    return finalProcessedBlocks;\n\t                  },\n\n\t                  blockSize: 128 / 32,\n\t                }));\n\n\t                /**\n\t                 * A collection of cipher parameters.\n\t                 *\n\t                 * @property {WordArray} ciphertext The raw ciphertext.\n\t                 * @property {WordArray} key The key to this ciphertext.\n\t                 * @property {WordArray} iv The IV used in the ciphering operation.\n\t                 * @property {WordArray} salt The salt used with a key derivation function.\n\t                 * @property {Cipher} algorithm The cipher algorithm.\n\t                 * @property {Mode} mode The block mode used in the ciphering operation.\n\t                 * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t                 * @property {number} blockSize The block size of the cipher.\n\t                 * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t                 */\n\t                var CipherParams = (C_lib.CipherParams = Base.extend({\n\t                  /**\n\t                   * Initializes a newly created cipher params object.\n\t                   *\n\t                   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t                   *         ciphertext: ciphertextWordArray,\n\t                   *         key: keyWordArray,\n\t                   *         iv: ivWordArray,\n\t                   *         salt: saltWordArray,\n\t                   *         algorithm: CryptoJS.algo.AES,\n\t                   *         mode: CryptoJS.mode.CBC,\n\t                   *         padding: CryptoJS.pad.PKCS7,\n\t                   *         blockSize: 4,\n\t                   *         formatter: CryptoJS.format.OpenSSL\n\t                   *     });\n\t                   */\n\t                  init: function (cipherParams) {\n\t                    this.mixIn(cipherParams);\n\t                  },\n\n\t                  /**\n\t                   * Converts this cipher params object to a string.\n\t                   *\n\t                   * @param {Format} formatter (Optional) The formatting strategy to use.\n\t                   *\n\t                   * @return {string} The stringified cipher params.\n\t                   *\n\t                   * @throws Error If neither the formatter nor the default formatter is set.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var string = cipherParams + '';\n\t                   *     var string = cipherParams.toString();\n\t                   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t                   */\n\t                  toString: function (formatter) {\n\t                    return (formatter || this.formatter).stringify(this);\n\t                  },\n\t                }));\n\n\t                /**\n\t                 * Format namespace.\n\t                 */\n\t                var C_format = (C.format = {});\n\n\t                /**\n\t                 * OpenSSL formatting strategy.\n\t                 */\n\t                var OpenSSLFormatter = (C_format.OpenSSL = {\n\t                  /**\n\t                   * Converts a cipher params object to an OpenSSL-compatible string.\n\t                   *\n\t                   * @param {CipherParams} cipherParams The cipher params object.\n\t                   *\n\t                   * @return {string} The OpenSSL-compatible string.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t                   */\n\t                  stringify: function (cipherParams) {\n\t                    var wordArray;\n\n\t                    // Shortcuts\n\t                    var ciphertext = cipherParams.ciphertext;\n\t                    var salt = cipherParams.salt;\n\n\t                    // Format\n\t                    if (salt) {\n\t                      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t                    } else {\n\t                      wordArray = ciphertext;\n\t                    }\n\n\t                    return wordArray.toString(Base64);\n\t                  },\n\n\t                  /**\n\t                   * Converts an OpenSSL-compatible string to a cipher params object.\n\t                   *\n\t                   * @param {string} openSSLStr The OpenSSL-compatible string.\n\t                   *\n\t                   * @return {CipherParams} The cipher params object.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t                   */\n\t                  parse: function (openSSLStr) {\n\t                    var salt;\n\n\t                    // Parse base64\n\t                    var ciphertext = Base64.parse(openSSLStr);\n\n\t                    // Shortcut\n\t                    var ciphertextWords = ciphertext.words;\n\n\t                    // Test for salt\n\t                    if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                      // Extract salt\n\t                      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                      // Remove salt from ciphertext\n\t                      ciphertextWords.splice(0, 4);\n\t                      ciphertext.sigBytes -= 16;\n\t                    }\n\n\t                    return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t                  },\n\t                });\n\n\t                /**\n\t                 * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t                 */\n\t                var SerializableCipher = (C_lib.SerializableCipher = Base.extend({\n\t                  /**\n\t                   * Configuration options.\n\t                   *\n\t                   * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t                   */\n\t                  cfg: Base.extend({\n\t                    format: OpenSSLFormatter,\n\t                  }),\n\n\t                  /**\n\t                   * Encrypts a message.\n\t                   *\n\t                   * @param {Cipher} cipher The cipher algorithm to use.\n\t                   * @param {WordArray|string} message The message to encrypt.\n\t                   * @param {WordArray} key The key.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @return {CipherParams} A cipher params object.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t                   *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t                   *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t                   */\n\t                  encrypt: function (cipher, message, key, cfg) {\n\t                    // Apply config defaults\n\t                    cfg = this.cfg.extend(cfg);\n\n\t                    // Encrypt\n\t                    var encryptor = cipher.createEncryptor(key, cfg);\n\t                    var ciphertext = encryptor.finalize(message);\n\n\t                    // Shortcut\n\t                    var cipherCfg = encryptor.cfg;\n\n\t                    // Create and return serializable cipher params\n\t                    return CipherParams.create({\n\t                      ciphertext: ciphertext,\n\t                      key: key,\n\t                      iv: cipherCfg.iv,\n\t                      algorithm: cipher,\n\t                      mode: cipherCfg.mode,\n\t                      padding: cipherCfg.padding,\n\t                      blockSize: cipher.blockSize,\n\t                      formatter: cfg.format,\n\t                    });\n\t                  },\n\n\t                  /**\n\t                   * Decrypts serialized ciphertext.\n\t                   *\n\t                   * @param {Cipher} cipher The cipher algorithm to use.\n\t                   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t                   * @param {WordArray} key The key.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @return {WordArray} The plaintext.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t                   *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t                   */\n\t                  decrypt: function (cipher, ciphertext, key, cfg) {\n\t                    // Apply config defaults\n\t                    cfg = this.cfg.extend(cfg);\n\n\t                    // Convert string to CipherParams\n\t                    ciphertext = this._parse(ciphertext, cfg.format);\n\n\t                    // Decrypt\n\t                    var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t                    return plaintext;\n\t                  },\n\n\t                  /**\n\t                   * Converts serialized ciphertext to CipherParams,\n\t                   * else assumed CipherParams already and returns ciphertext unchanged.\n\t                   *\n\t                   * @param {CipherParams|string} ciphertext The ciphertext.\n\t                   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t                   *\n\t                   * @return {CipherParams} The unserialized ciphertext.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t                   */\n\t                  _parse: function (ciphertext, format) {\n\t                    if (typeof ciphertext == 'string') {\n\t                      return format.parse(ciphertext, this);\n\t                    } else {\n\t                      return ciphertext;\n\t                    }\n\t                  },\n\t                }));\n\n\t                /**\n\t                 * Key derivation function namespace.\n\t                 */\n\t                var C_kdf = (C.kdf = {});\n\n\t                /**\n\t                 * OpenSSL key derivation function.\n\t                 */\n\t                var OpenSSLKdf = (C_kdf.OpenSSL = {\n\t                  /**\n\t                   * Derives a key and IV from a password.\n\t                   *\n\t                   * @param {string} password The password to derive from.\n\t                   * @param {number} keySize The size in words of the key to generate.\n\t                   * @param {number} ivSize The size in words of the IV to generate.\n\t                   * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t                   *\n\t                   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t                   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t                   */\n\t                  execute: function (password, keySize, ivSize, salt, hasher) {\n\t                    // Generate random salt\n\t                    if (!salt) {\n\t                      salt = WordArray.random(64 / 8);\n\t                    }\n\n\t                    // Derive key and IV\n\t                    if (!hasher) {\n\t                      var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t                    } else {\n\t                      var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t                    }\n\n\t                    // Separate key and IV\n\t                    var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t                    key.sigBytes = keySize * 4;\n\n\t                    // Return params\n\t                    return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t                  },\n\t                });\n\n\t                /**\n\t                 * A serializable cipher wrapper that derives the key from a password,\n\t                 * and returns ciphertext as a serializable cipher params object.\n\t                 */\n\t                var PasswordBasedCipher = (C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t                  /**\n\t                   * Configuration options.\n\t                   *\n\t                   * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t                   */\n\t                  cfg: SerializableCipher.cfg.extend({\n\t                    kdf: OpenSSLKdf,\n\t                  }),\n\n\t                  /**\n\t                   * Encrypts a message using a password.\n\t                   *\n\t                   * @param {Cipher} cipher The cipher algorithm to use.\n\t                   * @param {WordArray|string} message The message to encrypt.\n\t                   * @param {string} password The password.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @return {CipherParams} A cipher params object.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t                   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t                   */\n\t                  encrypt: function (cipher, message, password, cfg) {\n\t                    // Apply config defaults\n\t                    cfg = this.cfg.extend(cfg);\n\n\t                    // Derive key and other params\n\t                    var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t                    // Add IV to config\n\t                    cfg.iv = derivedParams.iv;\n\n\t                    // Encrypt\n\t                    var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t                    // Mix in derived params\n\t                    ciphertext.mixIn(derivedParams);\n\n\t                    return ciphertext;\n\t                  },\n\n\t                  /**\n\t                   * Decrypts serialized ciphertext using a password.\n\t                   *\n\t                   * @param {Cipher} cipher The cipher algorithm to use.\n\t                   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t                   * @param {string} password The password.\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t                   *\n\t                   * @return {WordArray} The plaintext.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t                   *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t                   */\n\t                  decrypt: function (cipher, ciphertext, password, cfg) {\n\t                    // Apply config defaults\n\t                    cfg = this.cfg.extend(cfg);\n\n\t                    // Convert string to CipherParams\n\t                    ciphertext = this._parse(ciphertext, cfg.format);\n\n\t                    // Derive key and other params\n\t                    var derivedParams = cfg.kdf.execute(\n\t                      password,\n\t                      cipher.keySize,\n\t                      cipher.ivSize,\n\t                      ciphertext.salt,\n\t                      cfg.hasher,\n\t                    );\n\n\t                    // Add IV to config\n\t                    cfg.iv = derivedParams.iv;\n\n\t                    // Decrypt\n\t                    var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t                    return plaintext;\n\t                  },\n\t                }));\n\t              })();\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/core.js':\n\t        /*!****************************************!*\\\n\t  !*** ./node_modules/crypto-js/core.js ***!\n\t  \\****************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory();\n\t            }\n\t          })(this, function () {\n\t            /*globals window, global, require*/\n\n\t            /**\n\t             * CryptoJS core components.\n\t             */\n\t            var CryptoJS =\n\t              CryptoJS ||\n\t              (function (Math, undefined$1) {\n\t                var crypto;\n\n\t                // Native crypto from window (Browser)\n\t                if (typeof window !== 'undefined' && window.crypto) {\n\t                  crypto = window.crypto;\n\t                }\n\n\t                // Native crypto in web worker (Browser)\n\t                if (typeof self !== 'undefined' && self.crypto) {\n\t                  crypto = self.crypto;\n\t                }\n\n\t                // Native crypto from worker\n\t                if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t                  crypto = globalThis.crypto;\n\t                }\n\n\t                // Native (experimental IE 11) crypto from window (Browser)\n\t                if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t                  crypto = window.msCrypto;\n\t                }\n\n\t                // Native crypto from global (NodeJS)\n\t                if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {\n\t                  crypto = __webpack_require__.g.crypto;\n\t                }\n\n\t                // Native crypto import via require (NodeJS)\n\t                if (!crypto && 'function' === 'function') {\n\t                  try {\n\t                    crypto = __webpack_require__(/*! crypto */ '?9157');\n\t                  } catch (err) {}\n\t                }\n\n\t                /*\n\t                 * Cryptographically secure pseudorandom number generator\n\t                 *\n\t                 * As Math.random() is cryptographically not safe to use\n\t                 */\n\t                var cryptoSecureRandomInt = function () {\n\t                  if (crypto) {\n\t                    // Use getRandomValues method (Browser)\n\t                    if (typeof crypto.getRandomValues === 'function') {\n\t                      try {\n\t                        return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                      } catch (err) {}\n\t                    }\n\n\t                    // Use randomBytes method (NodeJS)\n\t                    if (typeof crypto.randomBytes === 'function') {\n\t                      try {\n\t                        return crypto.randomBytes(4).readInt32LE();\n\t                      } catch (err) {}\n\t                    }\n\t                  }\n\n\t                  throw new Error('Native crypto module could not be used to get secure random number.');\n\t                };\n\n\t                /*\n\t\t     * Local polyfill of Object.create\n\n\t\t     */\n\t                var create =\n\t                  Object.create ||\n\t                  (function () {\n\t                    function F() {}\n\n\t                    return function (obj) {\n\t                      var subtype;\n\n\t                      F.prototype = obj;\n\n\t                      subtype = new F();\n\n\t                      F.prototype = null;\n\n\t                      return subtype;\n\t                    };\n\t                  })();\n\n\t                /**\n\t                 * CryptoJS namespace.\n\t                 */\n\t                var C = {};\n\n\t                /**\n\t                 * Library namespace.\n\t                 */\n\t                var C_lib = (C.lib = {});\n\n\t                /**\n\t                 * Base object for prototypal inheritance.\n\t                 */\n\t                var Base = (C_lib.Base = (function () {\n\t                  return {\n\t                    /**\n\t                     * Creates a new object that inherits from this object.\n\t                     *\n\t                     * @param {Object} overrides Properties to copy into the new object.\n\t                     *\n\t                     * @return {Object} The new object.\n\t                     *\n\t                     * @static\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     var MyType = CryptoJS.lib.Base.extend({\n\t                     *         field: 'value',\n\t                     *\n\t                     *         method: function () {\n\t                     *         }\n\t                     *     });\n\t                     */\n\t                    extend: function (overrides) {\n\t                      // Spawn\n\t                      var subtype = create(this);\n\n\t                      // Augment\n\t                      if (overrides) {\n\t                        subtype.mixIn(overrides);\n\t                      }\n\n\t                      // Create default initializer\n\t                      if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                        subtype.init = function () {\n\t                          subtype.$super.init.apply(this, arguments);\n\t                        };\n\t                      }\n\n\t                      // Initializer's prototype is the subtype object\n\t                      subtype.init.prototype = subtype;\n\n\t                      // Reference supertype\n\t                      subtype.$super = this;\n\n\t                      return subtype;\n\t                    },\n\n\t                    /**\n\t                     * Extends this object and runs the init method.\n\t                     * Arguments to create() will be passed to init().\n\t                     *\n\t                     * @return {Object} The new object.\n\t                     *\n\t                     * @static\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     var instance = MyType.create();\n\t                     */\n\t                    create: function () {\n\t                      var instance = this.extend();\n\t                      instance.init.apply(instance, arguments);\n\n\t                      return instance;\n\t                    },\n\n\t                    /**\n\t                     * Initializes a newly created object.\n\t                     * Override this method to add some logic when your objects are created.\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     var MyType = CryptoJS.lib.Base.extend({\n\t                     *         init: function () {\n\t                     *             // ...\n\t                     *         }\n\t                     *     });\n\t                     */\n\t                    init: function () {},\n\n\t                    /**\n\t                     * Copies properties into this object.\n\t                     *\n\t                     * @param {Object} properties The properties to mix in.\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     MyType.mixIn({\n\t                     *         field: 'value'\n\t                     *     });\n\t                     */\n\t                    mixIn: function (properties) {\n\t                      for (var propertyName in properties) {\n\t                        if (properties.hasOwnProperty(propertyName)) {\n\t                          this[propertyName] = properties[propertyName];\n\t                        }\n\t                      }\n\n\t                      // IE won't copy toString using the loop above\n\t                      if (properties.hasOwnProperty('toString')) {\n\t                        this.toString = properties.toString;\n\t                      }\n\t                    },\n\n\t                    /**\n\t                     * Creates a copy of this object.\n\t                     *\n\t                     * @return {Object} The clone.\n\t                     *\n\t                     * @example\n\t                     *\n\t                     *     var clone = instance.clone();\n\t                     */\n\t                    clone: function () {\n\t                      return this.init.prototype.extend(this);\n\t                    },\n\t                  };\n\t                })());\n\n\t                /**\n\t                 * An array of 32-bit words.\n\t                 *\n\t                 * @property {Array} words The array of 32-bit words.\n\t                 * @property {number} sigBytes The number of significant bytes in this word array.\n\t                 */\n\t                var WordArray = (C_lib.WordArray = Base.extend({\n\t                  /**\n\t                   * Initializes a newly created word array.\n\t                   *\n\t                   * @param {Array} words (Optional) An array of 32-bit words.\n\t                   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var wordArray = CryptoJS.lib.WordArray.create();\n\t                   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t                   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t                   */\n\t                  init: function (words, sigBytes) {\n\t                    words = this.words = words || [];\n\n\t                    if (sigBytes != undefined$1) {\n\t                      this.sigBytes = sigBytes;\n\t                    } else {\n\t                      this.sigBytes = words.length * 4;\n\t                    }\n\t                  },\n\n\t                  /**\n\t                   * Converts this word array to a string.\n\t                   *\n\t                   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t                   *\n\t                   * @return {string} The stringified word array.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var string = wordArray + '';\n\t                   *     var string = wordArray.toString();\n\t                   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t                   */\n\t                  toString: function (encoder) {\n\t                    return (encoder || Hex).stringify(this);\n\t                  },\n\n\t                  /**\n\t                   * Concatenates a word array to this word array.\n\t                   *\n\t                   * @param {WordArray} wordArray The word array to append.\n\t                   *\n\t                   * @return {WordArray} This word array.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     wordArray1.concat(wordArray2);\n\t                   */\n\t                  concat: function (wordArray) {\n\t                    // Shortcuts\n\t                    var thisWords = this.words;\n\t                    var thatWords = wordArray.words;\n\t                    var thisSigBytes = this.sigBytes;\n\t                    var thatSigBytes = wordArray.sigBytes;\n\n\t                    // Clamp excess bits\n\t                    this.clamp();\n\n\t                    // Concat\n\t                    if (thisSigBytes % 4) {\n\t                      // Copy one byte at a time\n\t                      for (var i = 0; i < thatSigBytes; i++) {\n\t                        var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                      }\n\t                    } else {\n\t                      // Copy one word at a time\n\t                      for (var j = 0; j < thatSigBytes; j += 4) {\n\t                        thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                      }\n\t                    }\n\t                    this.sigBytes += thatSigBytes;\n\n\t                    // Chainable\n\t                    return this;\n\t                  },\n\n\t                  /**\n\t                   * Removes insignificant bits.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     wordArray.clamp();\n\t                   */\n\t                  clamp: function () {\n\t                    // Shortcuts\n\t                    var words = this.words;\n\t                    var sigBytes = this.sigBytes;\n\n\t                    // Clamp\n\t                    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t                    words.length = Math.ceil(sigBytes / 4);\n\t                  },\n\n\t                  /**\n\t                   * Creates a copy of this word array.\n\t                   *\n\t                   * @return {WordArray} The clone.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var clone = wordArray.clone();\n\t                   */\n\t                  clone: function () {\n\t                    var clone = Base.clone.call(this);\n\t                    clone.words = this.words.slice(0);\n\n\t                    return clone;\n\t                  },\n\n\t                  /**\n\t                   * Creates a word array filled with random bytes.\n\t                   *\n\t                   * @param {number} nBytes The number of random bytes to generate.\n\t                   *\n\t                   * @return {WordArray} The random word array.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t                   */\n\t                  random: function (nBytes) {\n\t                    var words = [];\n\n\t                    for (var i = 0; i < nBytes; i += 4) {\n\t                      words.push(cryptoSecureRandomInt());\n\t                    }\n\n\t                    return new WordArray.init(words, nBytes);\n\t                  },\n\t                }));\n\n\t                /**\n\t                 * Encoder namespace.\n\t                 */\n\t                var C_enc = (C.enc = {});\n\n\t                /**\n\t                 * Hex encoding strategy.\n\t                 */\n\t                var Hex = (C_enc.Hex = {\n\t                  /**\n\t                   * Converts a word array to a hex string.\n\t                   *\n\t                   * @param {WordArray} wordArray The word array.\n\t                   *\n\t                   * @return {string} The hex string.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t                   */\n\t                  stringify: function (wordArray) {\n\t                    // Shortcuts\n\t                    var words = wordArray.words;\n\t                    var sigBytes = wordArray.sigBytes;\n\n\t                    // Convert\n\t                    var hexChars = [];\n\t                    for (var i = 0; i < sigBytes; i++) {\n\t                      var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                      hexChars.push((bite >>> 4).toString(16));\n\t                      hexChars.push((bite & 0x0f).toString(16));\n\t                    }\n\n\t                    return hexChars.join('');\n\t                  },\n\n\t                  /**\n\t                   * Converts a hex string to a word array.\n\t                   *\n\t                   * @param {string} hexStr The hex string.\n\t                   *\n\t                   * @return {WordArray} The word array.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t                   */\n\t                  parse: function (hexStr) {\n\t                    // Shortcut\n\t                    var hexStrLength = hexStr.length;\n\n\t                    // Convert\n\t                    var words = [];\n\t                    for (var i = 0; i < hexStrLength; i += 2) {\n\t                      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t                    }\n\n\t                    return new WordArray.init(words, hexStrLength / 2);\n\t                  },\n\t                });\n\n\t                /**\n\t                 * Latin1 encoding strategy.\n\t                 */\n\t                var Latin1 = (C_enc.Latin1 = {\n\t                  /**\n\t                   * Converts a word array to a Latin1 string.\n\t                   *\n\t                   * @param {WordArray} wordArray The word array.\n\t                   *\n\t                   * @return {string} The Latin1 string.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t                   */\n\t                  stringify: function (wordArray) {\n\t                    // Shortcuts\n\t                    var words = wordArray.words;\n\t                    var sigBytes = wordArray.sigBytes;\n\n\t                    // Convert\n\t                    var latin1Chars = [];\n\t                    for (var i = 0; i < sigBytes; i++) {\n\t                      var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                      latin1Chars.push(String.fromCharCode(bite));\n\t                    }\n\n\t                    return latin1Chars.join('');\n\t                  },\n\n\t                  /**\n\t                   * Converts a Latin1 string to a word array.\n\t                   *\n\t                   * @param {string} latin1Str The Latin1 string.\n\t                   *\n\t                   * @return {WordArray} The word array.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t                   */\n\t                  parse: function (latin1Str) {\n\t                    // Shortcut\n\t                    var latin1StrLength = latin1Str.length;\n\n\t                    // Convert\n\t                    var words = [];\n\t                    for (var i = 0; i < latin1StrLength; i++) {\n\t                      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t                    }\n\n\t                    return new WordArray.init(words, latin1StrLength);\n\t                  },\n\t                });\n\n\t                /**\n\t                 * UTF-8 encoding strategy.\n\t                 */\n\t                var Utf8 = (C_enc.Utf8 = {\n\t                  /**\n\t                   * Converts a word array to a UTF-8 string.\n\t                   *\n\t                   * @param {WordArray} wordArray The word array.\n\t                   *\n\t                   * @return {string} The UTF-8 string.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t                   */\n\t                  stringify: function (wordArray) {\n\t                    try {\n\t                      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t                    } catch (e) {\n\t                      throw new Error('Malformed UTF-8 data');\n\t                    }\n\t                  },\n\n\t                  /**\n\t                   * Converts a UTF-8 string to a word array.\n\t                   *\n\t                   * @param {string} utf8Str The UTF-8 string.\n\t                   *\n\t                   * @return {WordArray} The word array.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t                   */\n\t                  parse: function (utf8Str) {\n\t                    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t                  },\n\t                });\n\n\t                /**\n\t                 * Abstract buffered block algorithm template.\n\t                 *\n\t                 * The property blockSize must be implemented in a concrete subtype.\n\t                 *\n\t                 * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t                 */\n\t                var BufferedBlockAlgorithm = (C_lib.BufferedBlockAlgorithm = Base.extend({\n\t                  /**\n\t                   * Resets this block algorithm's data buffer to its initial state.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     bufferedBlockAlgorithm.reset();\n\t                   */\n\t                  reset: function () {\n\t                    // Initial values\n\t                    this._data = new WordArray.init();\n\t                    this._nDataBytes = 0;\n\t                  },\n\n\t                  /**\n\t                   * Adds new data to this block algorithm's buffer.\n\t                   *\n\t                   * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     bufferedBlockAlgorithm._append('data');\n\t                   *     bufferedBlockAlgorithm._append(wordArray);\n\t                   */\n\t                  _append: function (data) {\n\t                    // Convert string to WordArray, else assume WordArray already\n\t                    if (typeof data == 'string') {\n\t                      data = Utf8.parse(data);\n\t                    }\n\n\t                    // Append\n\t                    this._data.concat(data);\n\t                    this._nDataBytes += data.sigBytes;\n\t                  },\n\n\t                  /**\n\t                   * Processes available data blocks.\n\t                   *\n\t                   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t                   *\n\t                   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t                   *\n\t                   * @return {WordArray} The processed data.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var processedData = bufferedBlockAlgorithm._process();\n\t                   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t                   */\n\t                  _process: function (doFlush) {\n\t                    var processedWords;\n\n\t                    // Shortcuts\n\t                    var data = this._data;\n\t                    var dataWords = data.words;\n\t                    var dataSigBytes = data.sigBytes;\n\t                    var blockSize = this.blockSize;\n\t                    var blockSizeBytes = blockSize * 4;\n\n\t                    // Count blocks ready\n\t                    var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t                    if (doFlush) {\n\t                      // Round up to include partial blocks\n\t                      nBlocksReady = Math.ceil(nBlocksReady);\n\t                    } else {\n\t                      // Round down to include only full blocks,\n\t                      // less the number of blocks that must remain in the buffer\n\t                      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t                    }\n\n\t                    // Count words ready\n\t                    var nWordsReady = nBlocksReady * blockSize;\n\n\t                    // Count bytes ready\n\t                    var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t                    // Process blocks\n\t                    if (nWordsReady) {\n\t                      for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                        // Perform concrete-algorithm logic\n\t                        this._doProcessBlock(dataWords, offset);\n\t                      }\n\n\t                      // Remove processed words\n\t                      processedWords = dataWords.splice(0, nWordsReady);\n\t                      data.sigBytes -= nBytesReady;\n\t                    }\n\n\t                    // Return processed words\n\t                    return new WordArray.init(processedWords, nBytesReady);\n\t                  },\n\n\t                  /**\n\t                   * Creates a copy of this object.\n\t                   *\n\t                   * @return {Object} The clone.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var clone = bufferedBlockAlgorithm.clone();\n\t                   */\n\t                  clone: function () {\n\t                    var clone = Base.clone.call(this);\n\t                    clone._data = this._data.clone();\n\n\t                    return clone;\n\t                  },\n\n\t                  _minBufferSize: 0,\n\t                }));\n\n\t                /**\n\t                 * Abstract hasher template.\n\t                 *\n\t                 * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t                 */\n\t                (C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t                  /**\n\t                   * Configuration options.\n\t                   */\n\t                  cfg: Base.extend(),\n\n\t                  /**\n\t                   * Initializes a newly created hasher.\n\t                   *\n\t                   * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var hasher = CryptoJS.algo.SHA256.create();\n\t                   */\n\t                  init: function (cfg) {\n\t                    // Apply config defaults\n\t                    this.cfg = this.cfg.extend(cfg);\n\n\t                    // Set initial values\n\t                    this.reset();\n\t                  },\n\n\t                  /**\n\t                   * Resets this hasher to its initial state.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     hasher.reset();\n\t                   */\n\t                  reset: function () {\n\t                    // Reset data buffer\n\t                    BufferedBlockAlgorithm.reset.call(this);\n\n\t                    // Perform concrete-hasher logic\n\t                    this._doReset();\n\t                  },\n\n\t                  /**\n\t                   * Updates this hasher with a message.\n\t                   *\n\t                   * @param {WordArray|string} messageUpdate The message to append.\n\t                   *\n\t                   * @return {Hasher} This hasher.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     hasher.update('message');\n\t                   *     hasher.update(wordArray);\n\t                   */\n\t                  update: function (messageUpdate) {\n\t                    // Append\n\t                    this._append(messageUpdate);\n\n\t                    // Update the hash\n\t                    this._process();\n\n\t                    // Chainable\n\t                    return this;\n\t                  },\n\n\t                  /**\n\t                   * Finalizes the hash computation.\n\t                   * Note that the finalize operation is effectively a destructive, read-once operation.\n\t                   *\n\t                   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t                   *\n\t                   * @return {WordArray} The hash.\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var hash = hasher.finalize();\n\t                   *     var hash = hasher.finalize('message');\n\t                   *     var hash = hasher.finalize(wordArray);\n\t                   */\n\t                  finalize: function (messageUpdate) {\n\t                    // Final message update\n\t                    if (messageUpdate) {\n\t                      this._append(messageUpdate);\n\t                    }\n\n\t                    // Perform concrete-hasher logic\n\t                    var hash = this._doFinalize();\n\n\t                    return hash;\n\t                  },\n\n\t                  blockSize: 512 / 32,\n\n\t                  /**\n\t                   * Creates a shortcut function to a hasher's object interface.\n\t                   *\n\t                   * @param {Hasher} hasher The hasher to create a helper for.\n\t                   *\n\t                   * @return {Function} The shortcut function.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t                   */\n\t                  _createHelper: function (hasher) {\n\t                    return function (message, cfg) {\n\t                      return new hasher.init(cfg).finalize(message);\n\t                    };\n\t                  },\n\n\t                  /**\n\t                   * Creates a shortcut function to the HMAC's object interface.\n\t                   *\n\t                   * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t                   *\n\t                   * @return {Function} The shortcut function.\n\t                   *\n\t                   * @static\n\t                   *\n\t                   * @example\n\t                   *\n\t                   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t                   */\n\t                  _createHmacHelper: function (hasher) {\n\t                    return function (message, key) {\n\t                      return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t                    };\n\t                  },\n\t                }));\n\n\t                /**\n\t                 * Algorithm namespace.\n\t                 */\n\t                var C_algo = (C.algo = {});\n\n\t                return C;\n\t              })(Math);\n\n\t            return CryptoJS;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/enc-base64.js':\n\t        /*!**********************************************!*\\\n\t  !*** ./node_modules/crypto-js/enc-base64.js ***!\n\t  \\**********************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(__webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'));\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var WordArray = C_lib.WordArray;\n\t              var C_enc = C.enc;\n\n\t              /**\n\t               * Base64 encoding strategy.\n\t               */\n\t              (C_enc.Base64 = {\n\t                /**\n\t                 * Converts a word array to a Base64 string.\n\t                 *\n\t                 * @param {WordArray} wordArray The word array.\n\t                 *\n\t                 * @return {string} The Base64 string.\n\t                 *\n\t                 * @static\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t                 */\n\t                stringify: function (wordArray) {\n\t                  // Shortcuts\n\t                  var words = wordArray.words;\n\t                  var sigBytes = wordArray.sigBytes;\n\t                  var map = this._map;\n\n\t                  // Clamp excess bits\n\t                  wordArray.clamp();\n\n\t                  // Convert\n\t                  var base64Chars = [];\n\t                  for (var i = 0; i < sigBytes; i += 3) {\n\t                    var byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                    var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                    var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                    for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {\n\t                      base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                    }\n\t                  }\n\n\t                  // Add padding\n\t                  var paddingChar = map.charAt(64);\n\t                  if (paddingChar) {\n\t                    while (base64Chars.length % 4) {\n\t                      base64Chars.push(paddingChar);\n\t                    }\n\t                  }\n\n\t                  return base64Chars.join('');\n\t                },\n\n\t                /**\n\t                 * Converts a Base64 string to a word array.\n\t                 *\n\t                 * @param {string} base64Str The Base64 string.\n\t                 *\n\t                 * @return {WordArray} The word array.\n\t                 *\n\t                 * @static\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t                 */\n\t                parse: function (base64Str) {\n\t                  // Shortcuts\n\t                  var base64StrLength = base64Str.length;\n\t                  var map = this._map;\n\t                  var reverseMap = this._reverseMap;\n\n\t                  if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                      reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t                  }\n\n\t                  // Ignore padding\n\t                  var paddingChar = map.charAt(64);\n\t                  if (paddingChar) {\n\t                    var paddingIndex = base64Str.indexOf(paddingChar);\n\t                    if (paddingIndex !== -1) {\n\t                      base64StrLength = paddingIndex;\n\t                    }\n\t                  }\n\n\t                  // Convert\n\t                  return parseLoop(base64Str, base64StrLength, reverseMap);\n\t                },\n\n\t                _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t              });\n\n\t              function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t                var words = [];\n\t                var nBytes = 0;\n\t                for (var i = 0; i < base64StrLength; i++) {\n\t                  if (i % 4) {\n\t                    var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                    var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                    var bitsCombined = bits1 | bits2;\n\t                    words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                    nBytes++;\n\t                  }\n\t                }\n\t                return WordArray.create(words, nBytes);\n\t              }\n\t            })();\n\n\t            return CryptoJS.enc.Base64;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/evpkdf.js':\n\t        /*!******************************************!*\\\n\t  !*** ./node_modules/crypto-js/evpkdf.js ***!\n\t  \\******************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./sha1 */ './node_modules/crypto-js/sha1.js'),\n\t                __webpack_require__(/*! ./hmac */ './node_modules/crypto-js/hmac.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var Base = C_lib.Base;\n\t              var WordArray = C_lib.WordArray;\n\t              var C_algo = C.algo;\n\t              var MD5 = C_algo.MD5;\n\n\t              /**\n\t               * This key derivation function is meant to conform with EVP_BytesToKey.\n\t               * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t               */\n\t              var EvpKDF = (C_algo.EvpKDF = Base.extend({\n\t                /**\n\t                 * Configuration options.\n\t                 *\n\t                 * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t                 * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t                 * @property {number} iterations The number of iterations to perform. Default: 1\n\t                 */\n\t                cfg: Base.extend({\n\t                  keySize: 128 / 32,\n\t                  hasher: MD5,\n\t                  iterations: 1,\n\t                }),\n\n\t                /**\n\t                 * Initializes a newly created key derivation function.\n\t                 *\n\t                 * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t                 *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t                 *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t                 */\n\t                init: function (cfg) {\n\t                  this.cfg = this.cfg.extend(cfg);\n\t                },\n\n\t                /**\n\t                 * Derives a key from a password.\n\t                 *\n\t                 * @param {WordArray|string} password The password.\n\t                 * @param {WordArray|string} salt A salt.\n\t                 *\n\t                 * @return {WordArray} The derived key.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var key = kdf.compute(password, salt);\n\t                 */\n\t                compute: function (password, salt) {\n\t                  var block;\n\n\t                  // Shortcut\n\t                  var cfg = this.cfg;\n\n\t                  // Init hasher\n\t                  var hasher = cfg.hasher.create();\n\n\t                  // Initial values\n\t                  var derivedKey = WordArray.create();\n\n\t                  // Shortcuts\n\t                  var derivedKeyWords = derivedKey.words;\n\t                  var keySize = cfg.keySize;\n\t                  var iterations = cfg.iterations;\n\n\t                  // Generate key\n\t                  while (derivedKeyWords.length < keySize) {\n\t                    if (block) {\n\t                      hasher.update(block);\n\t                    }\n\t                    block = hasher.update(password).finalize(salt);\n\t                    hasher.reset();\n\n\t                    // Iterations\n\t                    for (var i = 1; i < iterations; i++) {\n\t                      block = hasher.finalize(block);\n\t                      hasher.reset();\n\t                    }\n\n\t                    derivedKey.concat(block);\n\t                  }\n\t                  derivedKey.sigBytes = keySize * 4;\n\n\t                  return derivedKey;\n\t                },\n\t              }));\n\n\t              /**\n\t               * Derives a key from a password.\n\t               *\n\t               * @param {WordArray|string} password The password.\n\t               * @param {WordArray|string} salt A salt.\n\t               * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t               *\n\t               * @return {WordArray} The derived key.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var key = CryptoJS.EvpKDF(password, salt);\n\t               *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t               *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t               */\n\t              C.EvpKDF = function (password, salt, cfg) {\n\t                return EvpKDF.create(cfg).compute(password, salt);\n\t              };\n\t            })();\n\n\t            return CryptoJS.EvpKDF;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/hmac.js':\n\t        /*!****************************************!*\\\n\t  !*** ./node_modules/crypto-js/hmac.js ***!\n\t  \\****************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(__webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'));\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var Base = C_lib.Base;\n\t              var C_enc = C.enc;\n\t              var Utf8 = C_enc.Utf8;\n\t              var C_algo = C.algo;\n\n\t              /**\n\t               * HMAC algorithm.\n\t               */\n\t              (C_algo.HMAC = Base.extend({\n\t                /**\n\t                 * Initializes a newly created HMAC.\n\t                 *\n\t                 * @param {Hasher} hasher The hash algorithm to use.\n\t                 * @param {WordArray|string} key The secret key.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t                 */\n\t                init: function (hasher, key) {\n\t                  // Init hasher\n\t                  hasher = this._hasher = new hasher.init();\n\n\t                  // Convert string to WordArray, else assume WordArray already\n\t                  if (typeof key == 'string') {\n\t                    key = Utf8.parse(key);\n\t                  }\n\n\t                  // Shortcuts\n\t                  var hasherBlockSize = hasher.blockSize;\n\t                  var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t                  // Allow arbitrary length keys\n\t                  if (key.sigBytes > hasherBlockSizeBytes) {\n\t                    key = hasher.finalize(key);\n\t                  }\n\n\t                  // Clamp excess bits\n\t                  key.clamp();\n\n\t                  // Clone key for inner and outer pads\n\t                  var oKey = (this._oKey = key.clone());\n\t                  var iKey = (this._iKey = key.clone());\n\n\t                  // Shortcuts\n\t                  var oKeyWords = oKey.words;\n\t                  var iKeyWords = iKey.words;\n\n\t                  // XOR keys with pad constants\n\t                  for (var i = 0; i < hasherBlockSize; i++) {\n\t                    oKeyWords[i] ^= 0x5c5c5c5c;\n\t                    iKeyWords[i] ^= 0x36363636;\n\t                  }\n\t                  oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t                  // Set initial values\n\t                  this.reset();\n\t                },\n\n\t                /**\n\t                 * Resets this HMAC to its initial state.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     hmacHasher.reset();\n\t                 */\n\t                reset: function () {\n\t                  // Shortcut\n\t                  var hasher = this._hasher;\n\n\t                  // Reset\n\t                  hasher.reset();\n\t                  hasher.update(this._iKey);\n\t                },\n\n\t                /**\n\t                 * Updates this HMAC with a message.\n\t                 *\n\t                 * @param {WordArray|string} messageUpdate The message to append.\n\t                 *\n\t                 * @return {HMAC} This HMAC instance.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     hmacHasher.update('message');\n\t                 *     hmacHasher.update(wordArray);\n\t                 */\n\t                update: function (messageUpdate) {\n\t                  this._hasher.update(messageUpdate);\n\n\t                  // Chainable\n\t                  return this;\n\t                },\n\n\t                /**\n\t                 * Finalizes the HMAC computation.\n\t                 * Note that the finalize operation is effectively a destructive, read-once operation.\n\t                 *\n\t                 * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t                 *\n\t                 * @return {WordArray} The HMAC.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var hmac = hmacHasher.finalize();\n\t                 *     var hmac = hmacHasher.finalize('message');\n\t                 *     var hmac = hmacHasher.finalize(wordArray);\n\t                 */\n\t                finalize: function (messageUpdate) {\n\t                  // Shortcut\n\t                  var hasher = this._hasher;\n\n\t                  // Compute HMAC\n\t                  var innerHash = hasher.finalize(messageUpdate);\n\t                  hasher.reset();\n\t                  var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t                  return hmac;\n\t                },\n\t              }));\n\t            })();\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/md5.js':\n\t        /*!***************************************!*\\\n\t  !*** ./node_modules/crypto-js/md5.js ***!\n\t  \\***************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(__webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'));\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function (Math) {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var WordArray = C_lib.WordArray;\n\t              var Hasher = C_lib.Hasher;\n\t              var C_algo = C.algo;\n\n\t              // Constants table\n\t              var T = [];\n\n\t              // Compute constants\n\t              (function () {\n\t                for (var i = 0; i < 64; i++) {\n\t                  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t                }\n\t              })();\n\n\t              /**\n\t               * MD5 hash algorithm.\n\t               */\n\t              var MD5 = (C_algo.MD5 = Hasher.extend({\n\t                _doReset: function () {\n\t                  this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);\n\t                },\n\n\t                _doProcessBlock: function (M, offset) {\n\t                  // Swap endian\n\t                  for (var i = 0; i < 16; i++) {\n\t                    // Shortcuts\n\t                    var offset_i = offset + i;\n\t                    var M_offset_i = M[offset_i];\n\n\t                    M[offset_i] =\n\t                      (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                      (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00);\n\t                  }\n\n\t                  // Shortcuts\n\t                  var H = this._hash.words;\n\n\t                  var M_offset_0 = M[offset + 0];\n\t                  var M_offset_1 = M[offset + 1];\n\t                  var M_offset_2 = M[offset + 2];\n\t                  var M_offset_3 = M[offset + 3];\n\t                  var M_offset_4 = M[offset + 4];\n\t                  var M_offset_5 = M[offset + 5];\n\t                  var M_offset_6 = M[offset + 6];\n\t                  var M_offset_7 = M[offset + 7];\n\t                  var M_offset_8 = M[offset + 8];\n\t                  var M_offset_9 = M[offset + 9];\n\t                  var M_offset_10 = M[offset + 10];\n\t                  var M_offset_11 = M[offset + 11];\n\t                  var M_offset_12 = M[offset + 12];\n\t                  var M_offset_13 = M[offset + 13];\n\t                  var M_offset_14 = M[offset + 14];\n\t                  var M_offset_15 = M[offset + 15];\n\n\t                  // Working variables\n\t                  var a = H[0];\n\t                  var b = H[1];\n\t                  var c = H[2];\n\t                  var d = H[3];\n\n\t                  // Computation\n\t                  a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n\t                  d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n\t                  c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n\t                  b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n\t                  a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n\t                  d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n\t                  c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n\t                  b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n\t                  a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n\t                  d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n\t                  c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t                  b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t                  a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n\t                  d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t                  c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t                  b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t                  a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n\t                  d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n\t                  c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t                  b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n\t                  a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n\t                  d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n\t                  c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t                  b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n\t                  a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n\t                  d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n\t                  c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n\t                  b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n\t                  a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n\t                  d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n\t                  c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n\t                  b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t                  a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n\t                  d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n\t                  c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t                  b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t                  a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n\t                  d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n\t                  c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n\t                  b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t                  a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n\t                  d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n\t                  c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n\t                  b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n\t                  a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n\t                  d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t                  c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t                  b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n\t                  a = II(a, b, c, d, M_offset_0, 6, T[48]);\n\t                  d = II(d, a, b, c, M_offset_7, 10, T[49]);\n\t                  c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t                  b = II(b, c, d, a, M_offset_5, 21, T[51]);\n\t                  a = II(a, b, c, d, M_offset_12, 6, T[52]);\n\t                  d = II(d, a, b, c, M_offset_3, 10, T[53]);\n\t                  c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t                  b = II(b, c, d, a, M_offset_1, 21, T[55]);\n\t                  a = II(a, b, c, d, M_offset_8, 6, T[56]);\n\t                  d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t                  c = II(c, d, a, b, M_offset_6, 15, T[58]);\n\t                  b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t                  a = II(a, b, c, d, M_offset_4, 6, T[60]);\n\t                  d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t                  c = II(c, d, a, b, M_offset_2, 15, T[62]);\n\t                  b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n\t                  // Intermediate hash value\n\t                  H[0] = (H[0] + a) | 0;\n\t                  H[1] = (H[1] + b) | 0;\n\t                  H[2] = (H[2] + c) | 0;\n\t                  H[3] = (H[3] + d) | 0;\n\t                },\n\n\t                _doFinalize: function () {\n\t                  // Shortcuts\n\t                  var data = this._data;\n\t                  var dataWords = data.words;\n\n\t                  var nBitsTotal = this._nDataBytes * 8;\n\t                  var nBitsLeft = data.sigBytes * 8;\n\n\t                  // Add padding\n\t                  dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n\t                  var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t                  var nBitsTotalL = nBitsTotal;\n\t                  dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] =\n\t                    (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                    (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00);\n\t                  dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] =\n\t                    (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                    (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00);\n\n\t                  data.sigBytes = (dataWords.length + 1) * 4;\n\n\t                  // Hash final blocks\n\t                  this._process();\n\n\t                  // Shortcuts\n\t                  var hash = this._hash;\n\t                  var H = hash.words;\n\n\t                  // Swap endian\n\t                  for (var i = 0; i < 4; i++) {\n\t                    // Shortcut\n\t                    var H_i = H[i];\n\n\t                    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n\t                  }\n\n\t                  // Return final computed hash\n\t                  return hash;\n\t                },\n\n\t                clone: function () {\n\t                  var clone = Hasher.clone.call(this);\n\t                  clone._hash = this._hash.clone();\n\n\t                  return clone;\n\t                },\n\t              }));\n\n\t              function FF(a, b, c, d, x, s, t) {\n\t                var n = a + ((b & c) | (~b & d)) + x + t;\n\t                return ((n << s) | (n >>> (32 - s))) + b;\n\t              }\n\n\t              function GG(a, b, c, d, x, s, t) {\n\t                var n = a + ((b & d) | (c & ~d)) + x + t;\n\t                return ((n << s) | (n >>> (32 - s))) + b;\n\t              }\n\n\t              function HH(a, b, c, d, x, s, t) {\n\t                var n = a + (b ^ c ^ d) + x + t;\n\t                return ((n << s) | (n >>> (32 - s))) + b;\n\t              }\n\n\t              function II(a, b, c, d, x, s, t) {\n\t                var n = a + (c ^ (b | ~d)) + x + t;\n\t                return ((n << s) | (n >>> (32 - s))) + b;\n\t              }\n\n\t              /**\n\t               * Shortcut function to the hasher's object interface.\n\t               *\n\t               * @param {WordArray|string} message The message to hash.\n\t               *\n\t               * @return {WordArray} The hash.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var hash = CryptoJS.MD5('message');\n\t               *     var hash = CryptoJS.MD5(wordArray);\n\t               */\n\t              C.MD5 = Hasher._createHelper(MD5);\n\n\t              /**\n\t               * Shortcut function to the HMAC's object interface.\n\t               *\n\t               * @param {WordArray|string} message The message to hash.\n\t               * @param {WordArray|string} key The secret key.\n\t               *\n\t               * @return {WordArray} The HMAC.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var hmac = CryptoJS.HmacMD5(message, key);\n\t               */\n\t              C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t            })(Math);\n\n\t            return CryptoJS.MD5;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/pbkdf2.js':\n\t        /*!******************************************!*\\\n\t  !*** ./node_modules/crypto-js/pbkdf2.js ***!\n\t  \\******************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./sha256 */ './node_modules/crypto-js/sha256.js'),\n\t                __webpack_require__(/*! ./hmac */ './node_modules/crypto-js/hmac.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var Base = C_lib.Base;\n\t              var WordArray = C_lib.WordArray;\n\t              var C_algo = C.algo;\n\t              var SHA256 = C_algo.SHA256;\n\t              var HMAC = C_algo.HMAC;\n\n\t              /**\n\t               * Password-Based Key Derivation Function 2 algorithm.\n\t               */\n\t              var PBKDF2 = (C_algo.PBKDF2 = Base.extend({\n\t                /**\n\t                 * Configuration options.\n\t                 *\n\t                 * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t                 * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t                 * @property {number} iterations The number of iterations to perform. Default: 250000\n\t                 */\n\t                cfg: Base.extend({\n\t                  keySize: 128 / 32,\n\t                  hasher: SHA256,\n\t                  iterations: 250000,\n\t                }),\n\n\t                /**\n\t                 * Initializes a newly created key derivation function.\n\t                 *\n\t                 * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t                 *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t                 *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t                 */\n\t                init: function (cfg) {\n\t                  this.cfg = this.cfg.extend(cfg);\n\t                },\n\n\t                /**\n\t                 * Computes the Password-Based Key Derivation Function 2.\n\t                 *\n\t                 * @param {WordArray|string} password The password.\n\t                 * @param {WordArray|string} salt A salt.\n\t                 *\n\t                 * @return {WordArray} The derived key.\n\t                 *\n\t                 * @example\n\t                 *\n\t                 *     var key = kdf.compute(password, salt);\n\t                 */\n\t                compute: function (password, salt) {\n\t                  // Shortcut\n\t                  var cfg = this.cfg;\n\n\t                  // Init HMAC\n\t                  var hmac = HMAC.create(cfg.hasher, password);\n\n\t                  // Initial values\n\t                  var derivedKey = WordArray.create();\n\t                  var blockIndex = WordArray.create([0x00000001]);\n\n\t                  // Shortcuts\n\t                  var derivedKeyWords = derivedKey.words;\n\t                  var blockIndexWords = blockIndex.words;\n\t                  var keySize = cfg.keySize;\n\t                  var iterations = cfg.iterations;\n\n\t                  // Generate key\n\t                  while (derivedKeyWords.length < keySize) {\n\t                    var block = hmac.update(salt).finalize(blockIndex);\n\t                    hmac.reset();\n\n\t                    // Shortcuts\n\t                    var blockWords = block.words;\n\t                    var blockWordsLength = blockWords.length;\n\n\t                    // Iterations\n\t                    var intermediate = block;\n\t                    for (var i = 1; i < iterations; i++) {\n\t                      intermediate = hmac.finalize(intermediate);\n\t                      hmac.reset();\n\n\t                      // Shortcut\n\t                      var intermediateWords = intermediate.words;\n\n\t                      // XOR intermediate with block\n\t                      for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                      }\n\t                    }\n\n\t                    derivedKey.concat(block);\n\t                    blockIndexWords[0]++;\n\t                  }\n\t                  derivedKey.sigBytes = keySize * 4;\n\n\t                  return derivedKey;\n\t                },\n\t              }));\n\n\t              /**\n\t               * Computes the Password-Based Key Derivation Function 2.\n\t               *\n\t               * @param {WordArray|string} password The password.\n\t               * @param {WordArray|string} salt A salt.\n\t               * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t               *\n\t               * @return {WordArray} The derived key.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var key = CryptoJS.PBKDF2(password, salt);\n\t               *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t               *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t               */\n\t              C.PBKDF2 = function (password, salt, cfg) {\n\t                return PBKDF2.create(cfg).compute(password, salt);\n\t              };\n\t            })();\n\n\t            return CryptoJS.PBKDF2;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/rabbit.js':\n\t        /*!******************************************!*\\\n\t  !*** ./node_modules/crypto-js/rabbit.js ***!\n\t  \\******************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./enc-base64 */ './node_modules/crypto-js/enc-base64.js'),\n\t                __webpack_require__(/*! ./md5 */ './node_modules/crypto-js/md5.js'),\n\t                __webpack_require__(/*! ./evpkdf */ './node_modules/crypto-js/evpkdf.js'),\n\t                __webpack_require__(/*! ./cipher-core */ './node_modules/crypto-js/cipher-core.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var StreamCipher = C_lib.StreamCipher;\n\t              var C_algo = C.algo;\n\n\t              // Reusable objects\n\t              var S = [];\n\t              var C_ = [];\n\t              var G = [];\n\n\t              /**\n\t               * Rabbit stream cipher algorithm\n\t               */\n\t              var Rabbit = (C_algo.Rabbit = StreamCipher.extend({\n\t                _doReset: function () {\n\t                  // Shortcuts\n\t                  var K = this._key.words;\n\t                  var iv = this.cfg.iv;\n\n\t                  // Swap endian\n\t                  for (var i = 0; i < 4; i++) {\n\t                    K[i] = (((K[i] << 8) | (K[i] >>> 24)) & 0x00ff00ff) | (((K[i] << 24) | (K[i] >>> 8)) & 0xff00ff00);\n\t                  }\n\n\t                  // Generate initial state values\n\t                  var X = (this._X = [\n\t                    K[0],\n\t                    (K[3] << 16) | (K[2] >>> 16),\n\t                    K[1],\n\t                    (K[0] << 16) | (K[3] >>> 16),\n\t                    K[2],\n\t                    (K[1] << 16) | (K[0] >>> 16),\n\t                    K[3],\n\t                    (K[2] << 16) | (K[1] >>> 16),\n\t                  ]);\n\n\t                  // Generate initial counter values\n\t                  var C = (this._C = [\n\t                    (K[2] << 16) | (K[2] >>> 16),\n\t                    (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                    (K[3] << 16) | (K[3] >>> 16),\n\t                    (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                    (K[0] << 16) | (K[0] >>> 16),\n\t                    (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                    (K[1] << 16) | (K[1] >>> 16),\n\t                    (K[3] & 0xffff0000) | (K[0] & 0x0000ffff),\n\t                  ]);\n\n\t                  // Carry bit\n\t                  this._b = 0;\n\n\t                  // Iterate the system four times\n\t                  for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                  }\n\n\t                  // Modify the counters\n\t                  for (var i = 0; i < 8; i++) {\n\t                    C[i] ^= X[(i + 4) & 7];\n\t                  }\n\n\t                  // IV setup\n\t                  if (iv) {\n\t                    // Shortcuts\n\t                    var IV = iv.words;\n\t                    var IV_0 = IV[0];\n\t                    var IV_1 = IV[1];\n\n\t                    // Generate four subvectors\n\t                    var i0 =\n\t                      (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                    var i2 =\n\t                      (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                    var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                    var i3 = (i2 << 16) | (i0 & 0x0000ffff);\n\n\t                    // Modify counter values\n\t                    C[0] ^= i0;\n\t                    C[1] ^= i1;\n\t                    C[2] ^= i2;\n\t                    C[3] ^= i3;\n\t                    C[4] ^= i0;\n\t                    C[5] ^= i1;\n\t                    C[6] ^= i2;\n\t                    C[7] ^= i3;\n\n\t                    // Iterate the system four times\n\t                    for (var i = 0; i < 4; i++) {\n\t                      nextState.call(this);\n\t                    }\n\t                  }\n\t                },\n\n\t                _doProcessBlock: function (M, offset) {\n\t                  // Shortcut\n\t                  var X = this._X;\n\n\t                  // Iterate the system\n\t                  nextState.call(this);\n\n\t                  // Generate four keystream words\n\t                  S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t                  S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t                  S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t                  S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t                  for (var i = 0; i < 4; i++) {\n\t                    // Swap endian\n\t                    S[i] = (((S[i] << 8) | (S[i] >>> 24)) & 0x00ff00ff) | (((S[i] << 24) | (S[i] >>> 8)) & 0xff00ff00);\n\n\t                    // Encrypt\n\t                    M[offset + i] ^= S[i];\n\t                  }\n\t                },\n\n\t                blockSize: 128 / 32,\n\n\t                ivSize: 64 / 32,\n\t              }));\n\n\t              function nextState() {\n\t                // Shortcuts\n\t                var X = this._X;\n\t                var C = this._C;\n\n\t                // Save old counter values\n\t                for (var i = 0; i < 8; i++) {\n\t                  C_[i] = C[i];\n\t                }\n\n\t                // Calculate new counter values\n\t                C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t                C[1] = (C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0)) | 0;\n\t                C[2] = (C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0)) | 0;\n\t                C[3] = (C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0)) | 0;\n\t                C[4] = (C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0)) | 0;\n\t                C[5] = (C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0)) | 0;\n\t                C[6] = (C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0)) | 0;\n\t                C[7] = (C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0)) | 0;\n\t                this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;\n\n\t                // Calculate the g-values\n\t                for (var i = 0; i < 8; i++) {\n\t                  var gx = X[i] + C[i];\n\n\t                  // Construct high and low argument for squaring\n\t                  var ga = gx & 0xffff;\n\t                  var gb = gx >>> 16;\n\n\t                  // Calculate high and low result of squaring\n\t                  var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t                  var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t                  // High XOR low\n\t                  G[i] = gh ^ gl;\n\t                }\n\n\t                // Calculate new state values\n\t                X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t                X[1] = (G[1] + ((G[0] << 8) | (G[0] >>> 24)) + G[7]) | 0;\n\t                X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t                X[3] = (G[3] + ((G[2] << 8) | (G[2] >>> 24)) + G[1]) | 0;\n\t                X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t                X[5] = (G[5] + ((G[4] << 8) | (G[4] >>> 24)) + G[3]) | 0;\n\t                X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t                X[7] = (G[7] + ((G[6] << 8) | (G[6] >>> 24)) + G[5]) | 0;\n\t              }\n\n\t              /**\n\t               * Shortcut functions to the cipher's object interface.\n\t               *\n\t               * @example\n\t               *\n\t               *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t               *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t               */\n\t              C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t            })();\n\n\t            return CryptoJS.Rabbit;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/rc4.js':\n\t        /*!***************************************!*\\\n\t  !*** ./node_modules/crypto-js/rc4.js ***!\n\t  \\***************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./enc-base64 */ './node_modules/crypto-js/enc-base64.js'),\n\t                __webpack_require__(/*! ./md5 */ './node_modules/crypto-js/md5.js'),\n\t                __webpack_require__(/*! ./evpkdf */ './node_modules/crypto-js/evpkdf.js'),\n\t                __webpack_require__(/*! ./cipher-core */ './node_modules/crypto-js/cipher-core.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var StreamCipher = C_lib.StreamCipher;\n\t              var C_algo = C.algo;\n\n\t              /**\n\t               * RC4 stream cipher algorithm.\n\t               */\n\t              var RC4 = (C_algo.RC4 = StreamCipher.extend({\n\t                _doReset: function () {\n\t                  // Shortcuts\n\t                  var key = this._key;\n\t                  var keyWords = key.words;\n\t                  var keySigBytes = key.sigBytes;\n\n\t                  // Init sbox\n\t                  var S = (this._S = []);\n\t                  for (var i = 0; i < 256; i++) {\n\t                    S[i] = i;\n\t                  }\n\n\t                  // Key setup\n\t                  for (var i = 0, j = 0; i < 256; i++) {\n\t                    var keyByteIndex = i % keySigBytes;\n\t                    var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                    j = (j + S[i] + keyByte) % 256;\n\n\t                    // Swap\n\t                    var t = S[i];\n\t                    S[i] = S[j];\n\t                    S[j] = t;\n\t                  }\n\n\t                  // Counters\n\t                  this._i = this._j = 0;\n\t                },\n\n\t                _doProcessBlock: function (M, offset) {\n\t                  M[offset] ^= generateKeystreamWord.call(this);\n\t                },\n\n\t                keySize: 256 / 32,\n\n\t                ivSize: 0,\n\t              }));\n\n\t              function generateKeystreamWord() {\n\t                // Shortcuts\n\t                var S = this._S;\n\t                var i = this._i;\n\t                var j = this._j;\n\n\t                // Generate keystream word\n\t                var keystreamWord = 0;\n\t                for (var n = 0; n < 4; n++) {\n\t                  i = (i + 1) % 256;\n\t                  j = (j + S[i]) % 256;\n\n\t                  // Swap\n\t                  var t = S[i];\n\t                  S[i] = S[j];\n\t                  S[j] = t;\n\n\t                  keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t                }\n\n\t                // Update counters\n\t                this._i = i;\n\t                this._j = j;\n\n\t                return keystreamWord;\n\t              }\n\n\t              /**\n\t               * Shortcut functions to the cipher's object interface.\n\t               *\n\t               * @example\n\t               *\n\t               *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t               *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t               */\n\t              C.RC4 = StreamCipher._createHelper(RC4);\n\n\t              /**\n\t               * Modified RC4 stream cipher algorithm.\n\t               */\n\t              var RC4Drop = (C_algo.RC4Drop = RC4.extend({\n\t                /**\n\t                 * Configuration options.\n\t                 *\n\t                 * @property {number} drop The number of keystream words to drop. Default 192\n\t                 */\n\t                cfg: RC4.cfg.extend({\n\t                  drop: 192,\n\t                }),\n\n\t                _doReset: function () {\n\t                  RC4._doReset.call(this);\n\n\t                  // Drop\n\t                  for (var i = this.cfg.drop; i > 0; i--) {\n\t                    generateKeystreamWord.call(this);\n\t                  }\n\t                },\n\t              }));\n\n\t              /**\n\t               * Shortcut functions to the cipher's object interface.\n\t               *\n\t               * @example\n\t               *\n\t               *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t               *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t               */\n\t              C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t            })();\n\n\t            return CryptoJS.RC4;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/sha1.js':\n\t        /*!****************************************!*\\\n\t  !*** ./node_modules/crypto-js/sha1.js ***!\n\t  \\****************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(__webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'));\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var WordArray = C_lib.WordArray;\n\t              var Hasher = C_lib.Hasher;\n\t              var C_algo = C.algo;\n\n\t              // Reusable object\n\t              var W = [];\n\n\t              /**\n\t               * SHA-1 hash algorithm.\n\t               */\n\t              var SHA1 = (C_algo.SHA1 = Hasher.extend({\n\t                _doReset: function () {\n\t                  this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);\n\t                },\n\n\t                _doProcessBlock: function (M, offset) {\n\t                  // Shortcut\n\t                  var H = this._hash.words;\n\n\t                  // Working variables\n\t                  var a = H[0];\n\t                  var b = H[1];\n\t                  var c = H[2];\n\t                  var d = H[3];\n\t                  var e = H[4];\n\n\t                  // Computation\n\t                  for (var i = 0; i < 80; i++) {\n\t                    if (i < 16) {\n\t                      W[i] = M[offset + i] | 0;\n\t                    } else {\n\t                      var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                      W[i] = (n << 1) | (n >>> 31);\n\t                    }\n\n\t                    var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                    if (i < 20) {\n\t                      t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                    } else if (i < 40) {\n\t                      t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                    } else if (i < 60) {\n\t                      t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                    } /* if (i < 80) */ else {\n\t                      t += (b ^ c ^ d) - 0x359d3e2a;\n\t                    }\n\n\t                    e = d;\n\t                    d = c;\n\t                    c = (b << 30) | (b >>> 2);\n\t                    b = a;\n\t                    a = t;\n\t                  }\n\n\t                  // Intermediate hash value\n\t                  H[0] = (H[0] + a) | 0;\n\t                  H[1] = (H[1] + b) | 0;\n\t                  H[2] = (H[2] + c) | 0;\n\t                  H[3] = (H[3] + d) | 0;\n\t                  H[4] = (H[4] + e) | 0;\n\t                },\n\n\t                _doFinalize: function () {\n\t                  // Shortcuts\n\t                  var data = this._data;\n\t                  var dataWords = data.words;\n\n\t                  var nBitsTotal = this._nDataBytes * 8;\n\t                  var nBitsLeft = data.sigBytes * 8;\n\n\t                  // Add padding\n\t                  dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\t                  dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t                  dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t                  data.sigBytes = dataWords.length * 4;\n\n\t                  // Hash final blocks\n\t                  this._process();\n\n\t                  // Return final computed hash\n\t                  return this._hash;\n\t                },\n\n\t                clone: function () {\n\t                  var clone = Hasher.clone.call(this);\n\t                  clone._hash = this._hash.clone();\n\n\t                  return clone;\n\t                },\n\t              }));\n\n\t              /**\n\t               * Shortcut function to the hasher's object interface.\n\t               *\n\t               * @param {WordArray|string} message The message to hash.\n\t               *\n\t               * @return {WordArray} The hash.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var hash = CryptoJS.SHA1('message');\n\t               *     var hash = CryptoJS.SHA1(wordArray);\n\t               */\n\t              C.SHA1 = Hasher._createHelper(SHA1);\n\n\t              /**\n\t               * Shortcut function to the HMAC's object interface.\n\t               *\n\t               * @param {WordArray|string} message The message to hash.\n\t               * @param {WordArray|string} key The secret key.\n\t               *\n\t               * @return {WordArray} The HMAC.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t               */\n\t              C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t            })();\n\n\t            return CryptoJS.SHA1;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/sha256.js':\n\t        /*!******************************************!*\\\n\t  !*** ./node_modules/crypto-js/sha256.js ***!\n\t  \\******************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(__webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'));\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function (Math) {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var WordArray = C_lib.WordArray;\n\t              var Hasher = C_lib.Hasher;\n\t              var C_algo = C.algo;\n\n\t              // Initialization and round constants tables\n\t              var H = [];\n\t              var K = [];\n\n\t              // Compute constants\n\t              (function () {\n\t                function isPrime(n) {\n\t                  var sqrtN = Math.sqrt(n);\n\t                  for (var factor = 2; factor <= sqrtN; factor++) {\n\t                    if (!(n % factor)) {\n\t                      return false;\n\t                    }\n\t                  }\n\n\t                  return true;\n\t                }\n\n\t                function getFractionalBits(n) {\n\t                  return ((n - (n | 0)) * 0x100000000) | 0;\n\t                }\n\n\t                var n = 2;\n\t                var nPrime = 0;\n\t                while (nPrime < 64) {\n\t                  if (isPrime(n)) {\n\t                    if (nPrime < 8) {\n\t                      H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                    }\n\t                    K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                    nPrime++;\n\t                  }\n\n\t                  n++;\n\t                }\n\t              })();\n\n\t              // Reusable object\n\t              var W = [];\n\n\t              /**\n\t               * SHA-256 hash algorithm.\n\t               */\n\t              var SHA256 = (C_algo.SHA256 = Hasher.extend({\n\t                _doReset: function () {\n\t                  this._hash = new WordArray.init(H.slice(0));\n\t                },\n\n\t                _doProcessBlock: function (M, offset) {\n\t                  // Shortcut\n\t                  var H = this._hash.words;\n\n\t                  // Working variables\n\t                  var a = H[0];\n\t                  var b = H[1];\n\t                  var c = H[2];\n\t                  var d = H[3];\n\t                  var e = H[4];\n\t                  var f = H[5];\n\t                  var g = H[6];\n\t                  var h = H[7];\n\n\t                  // Computation\n\t                  for (var i = 0; i < 64; i++) {\n\t                    if (i < 16) {\n\t                      W[i] = M[offset + i] | 0;\n\t                    } else {\n\t                      var gamma0x = W[i - 15];\n\t                      var gamma0 =\n\t                        ((gamma0x << 25) | (gamma0x >>> 7)) ^ ((gamma0x << 14) | (gamma0x >>> 18)) ^ (gamma0x >>> 3);\n\n\t                      var gamma1x = W[i - 2];\n\t                      var gamma1 =\n\t                        ((gamma1x << 15) | (gamma1x >>> 17)) ^ ((gamma1x << 13) | (gamma1x >>> 19)) ^ (gamma1x >>> 10);\n\n\t                      W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                    }\n\n\t                    var ch = (e & f) ^ (~e & g);\n\t                    var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                    var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                    var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25));\n\n\t                    var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                    var t2 = sigma0 + maj;\n\n\t                    h = g;\n\t                    g = f;\n\t                    f = e;\n\t                    e = (d + t1) | 0;\n\t                    d = c;\n\t                    c = b;\n\t                    b = a;\n\t                    a = (t1 + t2) | 0;\n\t                  }\n\n\t                  // Intermediate hash value\n\t                  H[0] = (H[0] + a) | 0;\n\t                  H[1] = (H[1] + b) | 0;\n\t                  H[2] = (H[2] + c) | 0;\n\t                  H[3] = (H[3] + d) | 0;\n\t                  H[4] = (H[4] + e) | 0;\n\t                  H[5] = (H[5] + f) | 0;\n\t                  H[6] = (H[6] + g) | 0;\n\t                  H[7] = (H[7] + h) | 0;\n\t                },\n\n\t                _doFinalize: function () {\n\t                  // Shortcuts\n\t                  var data = this._data;\n\t                  var dataWords = data.words;\n\n\t                  var nBitsTotal = this._nDataBytes * 8;\n\t                  var nBitsLeft = data.sigBytes * 8;\n\n\t                  // Add padding\n\t                  dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\t                  dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t                  dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t                  data.sigBytes = dataWords.length * 4;\n\n\t                  // Hash final blocks\n\t                  this._process();\n\n\t                  // Return final computed hash\n\t                  return this._hash;\n\t                },\n\n\t                clone: function () {\n\t                  var clone = Hasher.clone.call(this);\n\t                  clone._hash = this._hash.clone();\n\n\t                  return clone;\n\t                },\n\t              }));\n\n\t              /**\n\t               * Shortcut function to the hasher's object interface.\n\t               *\n\t               * @param {WordArray|string} message The message to hash.\n\t               *\n\t               * @return {WordArray} The hash.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var hash = CryptoJS.SHA256('message');\n\t               *     var hash = CryptoJS.SHA256(wordArray);\n\t               */\n\t              C.SHA256 = Hasher._createHelper(SHA256);\n\n\t              /**\n\t               * Shortcut function to the HMAC's object interface.\n\t               *\n\t               * @param {WordArray|string} message The message to hash.\n\t               * @param {WordArray|string} key The secret key.\n\t               *\n\t               * @return {WordArray} The HMAC.\n\t               *\n\t               * @static\n\t               *\n\t               * @example\n\t               *\n\t               *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t               */\n\t              C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t            })(Math);\n\n\t            return CryptoJS.SHA256;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/crypto-js/tripledes.js':\n\t        /*!*********************************************!*\\\n\t  !*** ./node_modules/crypto-js/tripledes.js ***!\n\t  \\*********************************************/\n\t        /***/ function (module, exports, __webpack_require__) {\n\t          (function (root, factory, undef) {\n\t            {\n\t              // CommonJS\n\t              module.exports = factory(\n\t                __webpack_require__(/*! ./core */ './node_modules/crypto-js/core.js'),\n\t                __webpack_require__(/*! ./enc-base64 */ './node_modules/crypto-js/enc-base64.js'),\n\t                __webpack_require__(/*! ./md5 */ './node_modules/crypto-js/md5.js'),\n\t                __webpack_require__(/*! ./evpkdf */ './node_modules/crypto-js/evpkdf.js'),\n\t                __webpack_require__(/*! ./cipher-core */ './node_modules/crypto-js/cipher-core.js'),\n\t              );\n\t            }\n\t          })(this, function (CryptoJS) {\n\t            (function () {\n\t              // Shortcuts\n\t              var C = CryptoJS;\n\t              var C_lib = C.lib;\n\t              var WordArray = C_lib.WordArray;\n\t              var BlockCipher = C_lib.BlockCipher;\n\t              var C_algo = C.algo;\n\n\t              // Permuted Choice 1 constants\n\t              var PC1 = [\n\t                57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44,\n\t                36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20,\n\t                12, 4,\n\t              ];\n\n\t              // Permuted Choice 2 constants\n\t              var PC2 = [\n\t                14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37,\n\t                47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32,\n\t              ];\n\n\t              // Cumulative bit shift constants\n\t              var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t              // SBOXes and round permutation constants\n\t              var SBOX_P = [\n\t                {\n\t                  0x0: 0x808200,\n\t                  0x10000000: 0x8000,\n\t                  0x20000000: 0x808002,\n\t                  0x30000000: 0x2,\n\t                  0x40000000: 0x200,\n\t                  0x50000000: 0x808202,\n\t                  0x60000000: 0x800202,\n\t                  0x70000000: 0x800000,\n\t                  0x80000000: 0x202,\n\t                  0x90000000: 0x800200,\n\t                  0xa0000000: 0x8200,\n\t                  0xb0000000: 0x808000,\n\t                  0xc0000000: 0x8002,\n\t                  0xd0000000: 0x800002,\n\t                  0xe0000000: 0x0,\n\t                  0xf0000000: 0x8202,\n\t                  0x8000000: 0x0,\n\t                  0x18000000: 0x808202,\n\t                  0x28000000: 0x8202,\n\t                  0x38000000: 0x8000,\n\t                  0x48000000: 0x808200,\n\t                  0x58000000: 0x200,\n\t                  0x68000000: 0x808002,\n\t                  0x78000000: 0x2,\n\t                  0x88000000: 0x800200,\n\t                  0x98000000: 0x8200,\n\t                  0xa8000000: 0x808000,\n\t                  0xb8000000: 0x800202,\n\t                  0xc8000000: 0x800002,\n\t                  0xd8000000: 0x8002,\n\t                  0xe8000000: 0x202,\n\t                  0xf8000000: 0x800000,\n\t                  0x1: 0x8000,\n\t                  0x10000001: 0x2,\n\t                  0x20000001: 0x808200,\n\t                  0x30000001: 0x800000,\n\t                  0x40000001: 0x808002,\n\t                  0x50000001: 0x8200,\n\t                  0x60000001: 0x200,\n\t                  0x70000001: 0x800202,\n\t                  0x80000001: 0x808202,\n\t                  0x90000001: 0x808000,\n\t                  0xa0000001: 0x800002,\n\t                  0xb0000001: 0x8202,\n\t                  0xc0000001: 0x202,\n\t                  0xd0000001: 0x800200,\n\t                  0xe0000001: 0x8002,\n\t                  0xf0000001: 0x0,\n\t                  0x8000001: 0x808202,\n\t                  0x18000001: 0x808000,\n\t                  0x28000001: 0x800000,\n\t                  0x38000001: 0x200,\n\t                  0x48000001: 0x8000,\n\t                  0x58000001: 0x800002,\n\t                  0x68000001: 0x2,\n\t                  0x78000001: 0x8202,\n\t                  0x88000001: 0x8002,\n\t                  0x98000001: 0x800202,\n\t                  0xa8000001: 0x202,\n\t                  0xb8000001: 0x808200,\n\t                  0xc8000001: 0x800200,\n\t                  0xd8000001: 0x0,\n\t                  0xe8000001: 0x8200,\n\t                  0xf8000001: 0x808002,\n\t                },\n\t                {\n\t                  0x0: 0x40084010,\n\t                  0x1000000: 0x4000,\n\t                  0x2000000: 0x80000,\n\t                  0x3000000: 0x40080010,\n\t                  0x4000000: 0x40000010,\n\t                  0x5000000: 0x40084000,\n\t                  0x6000000: 0x40004000,\n\t                  0x7000000: 0x10,\n\t                  0x8000000: 0x84000,\n\t                  0x9000000: 0x40004010,\n\t                  0xa000000: 0x40000000,\n\t                  0xb000000: 0x84010,\n\t                  0xc000000: 0x80010,\n\t                  0xd000000: 0x0,\n\t                  0xe000000: 0x4010,\n\t                  0xf000000: 0x40080000,\n\t                  0x800000: 0x40004000,\n\t                  0x1800000: 0x84010,\n\t                  0x2800000: 0x10,\n\t                  0x3800000: 0x40004010,\n\t                  0x4800000: 0x40084010,\n\t                  0x5800000: 0x40000000,\n\t                  0x6800000: 0x80000,\n\t                  0x7800000: 0x40080010,\n\t                  0x8800000: 0x80010,\n\t                  0x9800000: 0x0,\n\t                  0xa800000: 0x4000,\n\t                  0xb800000: 0x40080000,\n\t                  0xc800000: 0x40000010,\n\t                  0xd800000: 0x84000,\n\t                  0xe800000: 0x40084000,\n\t                  0xf800000: 0x4010,\n\t                  0x10000000: 0x0,\n\t                  0x11000000: 0x40080010,\n\t                  0x12000000: 0x40004010,\n\t                  0x13000000: 0x40084000,\n\t                  0x14000000: 0x40080000,\n\t                  0x15000000: 0x10,\n\t                  0x16000000: 0x84010,\n\t                  0x17000000: 0x4000,\n\t                  0x18000000: 0x4010,\n\t                  0x19000000: 0x80000,\n\t                  0x1a000000: 0x80010,\n\t                  0x1b000000: 0x40000010,\n\t                  0x1c000000: 0x84000,\n\t                  0x1d000000: 0x40004000,\n\t                  0x1e000000: 0x40000000,\n\t                  0x1f000000: 0x40084010,\n\t                  0x10800000: 0x84010,\n\t                  0x11800000: 0x80000,\n\t                  0x12800000: 0x40080000,\n\t                  0x13800000: 0x4000,\n\t                  0x14800000: 0x40004000,\n\t                  0x15800000: 0x40084010,\n\t                  0x16800000: 0x10,\n\t                  0x17800000: 0x40000000,\n\t                  0x18800000: 0x40084000,\n\t                  0x19800000: 0x40000010,\n\t                  0x1a800000: 0x40004010,\n\t                  0x1b800000: 0x80010,\n\t                  0x1c800000: 0x0,\n\t                  0x1d800000: 0x4010,\n\t                  0x1e800000: 0x40080010,\n\t                  0x1f800000: 0x84000,\n\t                },\n\t                {\n\t                  0x0: 0x104,\n\t                  0x100000: 0x0,\n\t                  0x200000: 0x4000100,\n\t                  0x300000: 0x10104,\n\t                  0x400000: 0x10004,\n\t                  0x500000: 0x4000004,\n\t                  0x600000: 0x4010104,\n\t                  0x700000: 0x4010000,\n\t                  0x800000: 0x4000000,\n\t                  0x900000: 0x4010100,\n\t                  0xa00000: 0x10100,\n\t                  0xb00000: 0x4010004,\n\t                  0xc00000: 0x4000104,\n\t                  0xd00000: 0x10000,\n\t                  0xe00000: 0x4,\n\t                  0xf00000: 0x100,\n\t                  0x80000: 0x4010100,\n\t                  0x180000: 0x4010004,\n\t                  0x280000: 0x0,\n\t                  0x380000: 0x4000100,\n\t                  0x480000: 0x4000004,\n\t                  0x580000: 0x10000,\n\t                  0x680000: 0x10004,\n\t                  0x780000: 0x104,\n\t                  0x880000: 0x4,\n\t                  0x980000: 0x100,\n\t                  0xa80000: 0x4010000,\n\t                  0xb80000: 0x10104,\n\t                  0xc80000: 0x10100,\n\t                  0xd80000: 0x4000104,\n\t                  0xe80000: 0x4010104,\n\t                  0xf80000: 0x4000000,\n\t                  0x1000000: 0x4010100,\n\t                  0x1100000: 0x10004,\n\t                  0x1200000: 0x10000,\n\t                  0x1300000: 0x4000100,\n\t                  0x1400000: 0x100,\n\t                  0x1500000: 0x4010104,\n\t                  0x1600000: 0x4000004,\n\t                  0x1700000: 0x0,\n\t                  0x1800000: 0x4000104,\n\t                  0x1900000: 0x4000000,\n\t                  0x1a00000: 0x4,\n\t                  0x1b00000: 0x10100,\n\t                  0x1c00000: 0x4010000,\n\t                  0x1d00000: 0x104,\n\t                  0x1e00000: 0x10104,\n\t                  0x1f00000: 0x4010004,\n\t                  0x1080000: 0x4000000,\n\t                  0x1180000: 0x104,\n\t                  0x1280000: 0x4010100,\n\t                  0x1380000: 0x0,\n\t                  0x1480000: 0x10004,\n\t                  0x1580000: 0x4000100,\n\t                  0x1680000: 0x100,\n\t                  0x1780000: 0x4010004,\n\t                  0x1880000: 0x10000,\n\t                  0x1980000: 0x4010104,\n\t                  0x1a80000: 0x10104,\n\t                  0x1b80000: 0x4000004,\n\t                  0x1c80000: 0x4000104,\n\t                  0x1d80000: 0x4010000,\n\t                  0x1e80000: 0x4,\n\t                  0x1f80000: 0x10100,\n\t                },\n\t                {\n\t                  0x0: 0x80401000,\n\t                  0x10000: 0x80001040,\n\t                  0x20000: 0x401040,\n\t                  0x30000: 0x80400000,\n\t                  0x40000: 0x0,\n\t                  0x50000: 0x401000,\n\t                  0x60000: 0x80000040,\n\t                  0x70000: 0x400040,\n\t                  0x80000: 0x80000000,\n\t                  0x90000: 0x400000,\n\t                  0xa0000: 0x40,\n\t                  0xb0000: 0x80001000,\n\t                  0xc0000: 0x80400040,\n\t                  0xd0000: 0x1040,\n\t                  0xe0000: 0x1000,\n\t                  0xf0000: 0x80401040,\n\t                  0x8000: 0x80001040,\n\t                  0x18000: 0x40,\n\t                  0x28000: 0x80400040,\n\t                  0x38000: 0x80001000,\n\t                  0x48000: 0x401000,\n\t                  0x58000: 0x80401040,\n\t                  0x68000: 0x0,\n\t                  0x78000: 0x80400000,\n\t                  0x88000: 0x1000,\n\t                  0x98000: 0x80401000,\n\t                  0xa8000: 0x400000,\n\t                  0xb8000: 0x1040,\n\t                  0xc8000: 0x80000000,\n\t                  0xd8000: 0x400040,\n\t                  0xe8000: 0x401040,\n\t                  0xf8000: 0x80000040,\n\t                  0x100000: 0x400040,\n\t                  0x110000: 0x401000,\n\t                  0x120000: 0x80000040,\n\t                  0x130000: 0x0,\n\t                  0x140000: 0x1040,\n\t                  0x150000: 0x80400040,\n\t                  0x160000: 0x80401000,\n\t                  0x170000: 0x80001040,\n\t                  0x180000: 0x80401040,\n\t                  0x190000: 0x80000000,\n\t                  0x1a0000: 0x80400000,\n\t                  0x1b0000: 0x401040,\n\t                  0x1c0000: 0x80001000,\n\t                  0x1d0000: 0x400000,\n\t                  0x1e0000: 0x40,\n\t                  0x1f0000: 0x1000,\n\t                  0x108000: 0x80400000,\n\t                  0x118000: 0x80401040,\n\t                  0x128000: 0x0,\n\t                  0x138000: 0x401000,\n\t                  0x148000: 0x400040,\n\t                  0x158000: 0x80000000,\n\t                  0x168000: 0x80001040,\n\t                  0x178000: 0x40,\n\t                  0x188000: 0x80000040,\n\t                  0x198000: 0x1000,\n\t                  0x1a8000: 0x80001000,\n\t                  0x1b8000: 0x80400040,\n\t                  0x1c8000: 0x1040,\n\t                  0x1d8000: 0x80401000,\n\t                  0x1e8000: 0x400000,\n\t                  0x1f8000: 0x401040,\n\t                },\n\t                {\n\t                  0x0: 0x80,\n\t                  0x1000: 0x1040000,\n\t                  0x2000: 0x40000,\n\t                  0x3000: 0x20000000,\n\t                  0x4000: 0x20040080,\n\t                  0x5000: 0x1000080,\n\t                  0x6000: 0x21000080,\n\t                  0x7000: 0x40080,\n\t                  0x8000: 0x1000000,\n\t                  0x9000: 0x20040000,\n\t                  0xa000: 0x20000080,\n\t                  0xb000: 0x21040080,\n\t                  0xc000: 0x21040000,\n\t                  0xd000: 0x0,\n\t                  0xe000: 0x1040080,\n\t                  0xf000: 0x21000000,\n\t                  0x800: 0x1040080,\n\t                  0x1800: 0x21000080,\n\t                  0x2800: 0x80,\n\t                  0x3800: 0x1040000,\n\t                  0x4800: 0x40000,\n\t                  0x5800: 0x20040080,\n\t                  0x6800: 0x21040000,\n\t                  0x7800: 0x20000000,\n\t                  0x8800: 0x20040000,\n\t                  0x9800: 0x0,\n\t                  0xa800: 0x21040080,\n\t                  0xb800: 0x1000080,\n\t                  0xc800: 0x20000080,\n\t                  0xd800: 0x21000000,\n\t                  0xe800: 0x1000000,\n\t                  0xf800: 0x40080,\n\t                  0x10000: 0x40000,\n\t                  0x11000: 0x80,\n\t                  0x12000: 0x20000000,\n\t                  0x13000: 0x21000080,\n\t                  0x14000: 0x1000080,\n\t                  0x15000: 0x21040000,\n\t                  0x16000: 0x20040080,\n\t                  0x17000: 0x1000000,\n\t                  0x18000: 0x21040080,\n\t                  0x19000: 0x21000000,\n\t                  0x1a000: 0x1040000,\n\t                  0x1b000: 0x20040000,\n\t                  0x1c000: 0x40080,\n\t                  0x1d000: 0x20000080,\n\t                  0x1e000: 0x0,\n\t                  0x1f000: 0x1040080,\n\t                  0x10800: 0x21000080,\n\t                  0x11800: 0x1000000,\n\t                  0x12800: 0x1040000,\n\t                  0x13800: 0x20040080,\n\t                  0x14800: 0x20000000,\n\t                  0x15800: 0x1040080,\n\t                  0x16800: 0x80,\n\t                  0x17800: 0x21040000,\n\t                  0x18800: 0x40080,\n\t                  0x19800: 0x21040080,\n\t                  0x1a800: 0x0,\n\t                  0x1b800: 0x21000000,\n\t                  0x1c800: 0x1000080,\n\t                  0x1d800: 0x40000,\n\t                  0x1e800: 0x20040000,\n\t                  0x1f800: 0x20000080,\n\t                },\n\t                {\n\t                  0x0: 0x10000008,\n\t                  0x100: 0x2000,\n\t                  0x200: 0x10200000,\n\t                  0x300: 0x10202008,\n\t                  0x400: 0x10002000,\n\t                  0x500: 0x200000,\n\t                  0x600: 0x200008,\n\t                  0x700: 0x10000000,\n\t                  0x800: 0x0,\n\t                  0x900: 0x10002008,\n\t                  0xa00: 0x202000,\n\t                  0xb00: 0x8,\n\t                  0xc00: 0x10200008,\n\t                  0xd00: 0x202008,\n\t                  0xe00: 0x2008,\n\t                  0xf00: 0x10202000,\n\t                  0x80: 0x10200000,\n\t                  0x180: 0x10202008,\n\t                  0x280: 0x8,\n\t                  0x380: 0x200000,\n\t                  0x480: 0x202008,\n\t                  0x580: 0x10000008,\n\t                  0x680: 0x10002000,\n\t                  0x780: 0x2008,\n\t                  0x880: 0x200008,\n\t                  0x980: 0x2000,\n\t                  0xa80: 0x10002008,\n\t                  0xb80: 0x10200008,\n\t                  0xc80: 0x0,\n\t                  0xd80: 0x10202000,\n\t                  0xe80: 0x202000,\n\t                  0xf80: 0x10000000,\n\t                  0x1000: 0x10002000,\n\t                  0x1100: 0x10200008,\n\t                  0x1200: 0x10202008,\n\t                  0x1300: 0x2008,\n\t                  0x1400: 0x200000,\n\t                  0x1500: 0x10000000,\n\t                  0x1600: 0x10000008,\n\t                  0x1700: 0x202000,\n\t                  0x1800: 0x202008,\n\t                  0x1900: 0x0,\n\t                  0x1a00: 0x8,\n\t                  0x1b00: 0x10200000,\n\t                  0x1c00: 0x2000,\n\t                  0x1d00: 0x10002008,\n\t                  0x1e00: 0x10202000,\n\t                  0x1f00: 0x200008,\n\t                  0x1080: 0x8,\n\t                  0x1180: 0x202000,\n\t                  0x1280: 0x200000,\n\t                  0x1380: 0x10000008,\n\t                  0x1480: 0x10002000,\n\t                  0x1580: 0x2008,\n\t                  0x1680: 0x10202008,\n\t                  0x1780: 0x10200000,\n\t                  0x1880: 0x10202000,\n\t                  0x1980: 0x10200008,\n\t                  0x1a80: 0x2000,\n\t                  0x1b80: 0x202008,\n\t                  0x1c80: 0x200008,\n\t                  0x1d80: 0x0,\n\t                  0x1e80: 0x10000000,\n\t                  0x1f80: 0x10002008,\n\t                },\n\t                {\n\t                  0x0: 0x100000,\n\t                  0x10: 0x2000401,\n\t                  0x20: 0x400,\n\t                  0x30: 0x100401,\n\t                  0x40: 0x2100401,\n\t                  0x50: 0x0,\n\t                  0x60: 0x1,\n\t                  0x70: 0x2100001,\n\t                  0x80: 0x2000400,\n\t                  0x90: 0x100001,\n\t                  0xa0: 0x2000001,\n\t                  0xb0: 0x2100400,\n\t                  0xc0: 0x2100000,\n\t                  0xd0: 0x401,\n\t                  0xe0: 0x100400,\n\t                  0xf0: 0x2000000,\n\t                  0x8: 0x2100001,\n\t                  0x18: 0x0,\n\t                  0x28: 0x2000401,\n\t                  0x38: 0x2100400,\n\t                  0x48: 0x100000,\n\t                  0x58: 0x2000001,\n\t                  0x68: 0x2000000,\n\t                  0x78: 0x401,\n\t                  0x88: 0x100401,\n\t                  0x98: 0x2000400,\n\t                  0xa8: 0x2100000,\n\t                  0xb8: 0x100001,\n\t                  0xc8: 0x400,\n\t                  0xd8: 0x2100401,\n\t                  0xe8: 0x1,\n\t                  0xf8: 0x100400,\n\t                  0x100: 0x2000000,\n\t                  0x110: 0x100000,\n\t                  0x120: 0x2000401,\n\t                  0x130: 0x2100001,\n\t                  0x140: 0x100001,\n\t                  0x150: 0x2000400,\n\t                  0x160: 0x2100400,\n\t                  0x170: 0x100401,\n\t                  0x180: 0x401,\n\t                  0x190: 0x2100401,\n\t                  0x1a0: 0x100400,\n\t                  0x1b0: 0x1,\n\t                  0x1c0: 0x0,\n\t                  0x1d0: 0x2100000,\n\t                  0x1e0: 0x2000001,\n\t                  0x1f0: 0x400,\n\t                  0x108: 0x100400,\n\t                  0x118: 0x2000401,\n\t                  0x128: 0x2100001,\n\t                  0x138: 0x1,\n\t                  0x148: 0x2000000,\n\t                  0x158: 0x100000,\n\t                  0x168: 0x401,\n\t                  0x178: 0x2100400,\n\t                  0x188: 0x2000001,\n\t                  0x198: 0x2100000,\n\t                  0x1a8: 0x0,\n\t                  0x1b8: 0x2100401,\n\t                  0x1c8: 0x100401,\n\t                  0x1d8: 0x400,\n\t                  0x1e8: 0x2000400,\n\t                  0x1f8: 0x100001,\n\t                },\n\t                {\n\t                  0x0: 0x8000820,\n\t                  0x1: 0x20000,\n\t                  0x2: 0x8000000,\n\t                  0x3: 0x20,\n\t                  0x4: 0x20020,\n\t                  0x5: 0x8020820,\n\t                  0x6: 0x8020800,\n\t                  0x7: 0x800,\n\t                  0x8: 0x8020000,\n\t                  0x9: 0x8000800,\n\t                  0xa: 0x20800,\n\t                  0xb: 0x8020020,\n\t                  0xc: 0x820,\n\t                  0xd: 0x0,\n\t                  0xe: 0x8000020,\n\t                  0xf: 0x20820,\n\t                  0x80000000: 0x800,\n\t                  0x80000001: 0x8020820,\n\t                  0x80000002: 0x8000820,\n\t                  0x80000003: 0x8000000,\n\t                  0x80000004: 0x8020000,\n\t                  0x80000005: 0x20800,\n\t                  0x80000006: 0x20820,\n\t                  0x80000007: 0x20,\n\t                  0x80000008: 0x8000020,\n\t                  0x80000009: 0x820,\n\t                  0x8000000a: 0x20020,\n\t                  0x8000000b: 0x8020800,\n\t                  0x8000000c: 0x0,\n\t                  0x8000000d: 0x8020020,\n\t                  0x8000000e: 0x8000800,\n\t                  0x8000000f: 0x20000,\n\t                  0x10: 0x20820,\n\t                  0x11: 0x8020800,\n\t                  0x12: 0x20,\n\t                  0x13: 0x800,\n\t                  0x14: 0x8000800,\n\t                  0x15: 0x8000020,\n\t                  0x16: 0x8020020,\n\t                  0x17: 0x20000,\n\t                  0x18: 0x0,\n\t                  0x19: 0x20020,\n\t                  0x1a: 0x8020000,\n\t                  0x1b: 0x8000820,\n\t                  0x1c: 0x8020820,\n\t                  0x1d: 0x20800,\n\t                  0x1e: 0x820,\n\t                  0x1f: 0x8000000,\n\t                  0x80000010: 0x20000,\n\t                  0x80000011: 0x800,\n\t                  0x80000012: 0x8020020,\n\t                  0x80000013: 0x20820,\n\t                  0x80000014: 0x20,\n\t                  0x80000015: 0x8020000,\n\t                  0x80000016: 0x8000000,\n\t                  0x80000017: 0x8000820,\n\t                  0x80000018: 0x8020820,\n\t                  0x80000019: 0x8000020,\n\t                  0x8000001a: 0x8000800,\n\t                  0x8000001b: 0x0,\n\t                  0x8000001c: 0x20800,\n\t                  0x8000001d: 0x820,\n\t                  0x8000001e: 0x20020,\n\t                  0x8000001f: 0x8020800,\n\t                },\n\t              ];\n\n\t              // Masks that select the SBOX input\n\t              var SBOX_MASK = [\n\t                0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000, 0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f,\n\t              ];\n\n\t              /**\n\t               * DES block cipher algorithm.\n\t               */\n\t              var DES = (C_algo.DES = BlockCipher.extend({\n\t                _doReset: function () {\n\t                  // Shortcuts\n\t                  var key = this._key;\n\t                  var keyWords = key.words;\n\n\t                  // Select 56 bits according to PC1\n\t                  var keyBits = [];\n\t                  for (var i = 0; i < 56; i++) {\n\t                    var keyBitPos = PC1[i] - 1;\n\t                    keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - (keyBitPos % 32))) & 1;\n\t                  }\n\n\t                  // Assemble 16 subkeys\n\t                  var subKeys = (this._subKeys = []);\n\t                  for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                    // Create subkey\n\t                    var subKey = (subKeys[nSubKey] = []);\n\n\t                    // Shortcut\n\t                    var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                    // Select 48 bits according to PC2\n\t                    for (var i = 0; i < 24; i++) {\n\t                      // Select from the left 28 key bits\n\t                      subKey[(i / 6) | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << (31 - (i % 6));\n\n\t                      // Select from the right 28 key bits\n\t                      subKey[4 + ((i / 6) | 0)] |= keyBits[28 + ((PC2[i + 24] - 1 + bitShift) % 28)] << (31 - (i % 6));\n\t                    }\n\n\t                    // Since each subkey is applied to an expanded 32-bit input,\n\t                    // the subkey can be broken into 8 values scaled to 32-bits,\n\t                    // which allows the key to be used without expansion\n\t                    subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                    for (var i = 1; i < 7; i++) {\n\t                      subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                    }\n\t                    subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t                  }\n\n\t                  // Compute inverse subkeys\n\t                  var invSubKeys = (this._invSubKeys = []);\n\t                  for (var i = 0; i < 16; i++) {\n\t                    invSubKeys[i] = subKeys[15 - i];\n\t                  }\n\t                },\n\n\t                encryptBlock: function (M, offset) {\n\t                  this._doCryptBlock(M, offset, this._subKeys);\n\t                },\n\n\t                decryptBlock: function (M, offset) {\n\t                  this._doCryptBlock(M, offset, this._invSubKeys);\n\t                },\n\n\t                _doCryptBlock: function (M, offset, subKeys) {\n\t                  // Get input\n\t                  this._lBlock = M[offset];\n\t                  this._rBlock = M[offset + 1];\n\n\t                  // Initial permutation\n\t                  exchangeLR.call(this, 4, 0x0f0f0f0f);\n\t                  exchangeLR.call(this, 16, 0x0000ffff);\n\t                  exchangeRL.call(this, 2, 0x33333333);\n\t                  exchangeRL.call(this, 8, 0x00ff00ff);\n\t                  exchangeLR.call(this, 1, 0x55555555);\n\n\t                  // Rounds\n\t                  for (var round = 0; round < 16; round++) {\n\t                    // Shortcuts\n\t                    var subKey = subKeys[round];\n\t                    var lBlock = this._lBlock;\n\t                    var rBlock = this._rBlock;\n\n\t                    // Feistel function\n\t                    var f = 0;\n\t                    for (var i = 0; i < 8; i++) {\n\t                      f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                    }\n\t                    this._lBlock = rBlock;\n\t                    this._rBlock = lBlock ^ f;\n\t                  }\n\n\t                  // Undo swap from last round\n\t                  var t = this._lBlock;\n\t                  this._lBlock = this._rBlock;\n\t                  this._rBlock = t;\n\n\t                  // Final permutation\n\t                  exchangeLR.call(this, 1, 0x55555555);\n\t                  exchangeRL.call(this, 8, 0x00ff00ff);\n\t                  exchangeRL.call(this, 2, 0x33333333);\n\t                  exchangeLR.call(this, 16, 0x0000ffff);\n\t                  exchangeLR.call(this, 4, 0x0f0f0f0f);\n\n\t                  // Set output\n\t                  M[offset] = this._lBlock;\n\t                  M[offset + 1] = this._rBlock;\n\t                },\n\n\t                keySize: 64 / 32,\n\n\t                ivSize: 64 / 32,\n\n\t                blockSize: 64 / 32,\n\t              }));\n\n\t              // Swap bits across the left and right words\n\t              function exchangeLR(offset, mask) {\n\t                var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t                this._rBlock ^= t;\n\t                this._lBlock ^= t << offset;\n\t              }\n\n\t              function exchangeRL(offset, mask) {\n\t                var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t                this._lBlock ^= t;\n\t                this._rBlock ^= t << offset;\n\t              }\n\n\t              /**\n\t               * Shortcut functions to the cipher's object interface.\n\t               *\n\t               * @example\n\t               *\n\t               *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t               *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t               */\n\t              C.DES = BlockCipher._createHelper(DES);\n\n\t              /**\n\t               * Triple-DES block cipher algorithm.\n\t               */\n\t              var TripleDES = (C_algo.TripleDES = BlockCipher.extend({\n\t                _doReset: function () {\n\t                  // Shortcuts\n\t                  var key = this._key;\n\t                  var keyWords = key.words;\n\t                  // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t                  if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                    throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t                  }\n\n\t                  // Extend the key according to the keying options defined in 3DES standard\n\t                  var key1 = keyWords.slice(0, 2);\n\t                  var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t                  var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t                  // Create DES instances\n\t                  this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t                  this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t                  this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t                },\n\n\t                encryptBlock: function (M, offset) {\n\t                  this._des1.encryptBlock(M, offset);\n\t                  this._des2.decryptBlock(M, offset);\n\t                  this._des3.encryptBlock(M, offset);\n\t                },\n\n\t                decryptBlock: function (M, offset) {\n\t                  this._des3.decryptBlock(M, offset);\n\t                  this._des2.encryptBlock(M, offset);\n\t                  this._des1.decryptBlock(M, offset);\n\t                },\n\n\t                keySize: 192 / 32,\n\n\t                ivSize: 64 / 32,\n\n\t                blockSize: 64 / 32,\n\t              }));\n\n\t              /**\n\t               * Shortcut functions to the cipher's object interface.\n\t               *\n\t               * @example\n\t               *\n\t               *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t               *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t               */\n\t              C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t            })();\n\n\t            return CryptoJS.TripleDES;\n\t          });\n\n\t          /***/\n\t        },\n\n\t      /***/ './node_modules/lz-string/libs/lz-string.js':\n\t        /*!**************************************************!*\\\n\t  !*** ./node_modules/lz-string/libs/lz-string.js ***!\n\t  \\**************************************************/\n\t        /***/ (module, exports, __webpack_require__) => {\n\t          var __WEBPACK_AMD_DEFINE_RESULT__; // Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n\t          // This work is free. You can redistribute it and/or modify it\n\t          // under the terms of the WTFPL, Version 2\n\t          // For more information see LICENSE.txt or http://www.wtfpl.net/\n\t          //\n\t          // For more information, the home page:\n\t          // http://pieroxy.net/blog/pages/lz-string/testing.html\n\t          //\n\t          // LZ-based compression algorithm, version 1.4.5\n\t          var LZString = (function () {\n\t            // private property\n\t            var f = String.fromCharCode;\n\t            var keyStrBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t            var keyStrUriSafe = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$';\n\t            var baseReverseDic = {};\n\n\t            function getBaseValue(alphabet, character) {\n\t              if (!baseReverseDic[alphabet]) {\n\t                baseReverseDic[alphabet] = {};\n\t                for (var i = 0; i < alphabet.length; i++) {\n\t                  baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n\t                }\n\t              }\n\t              return baseReverseDic[alphabet][character];\n\t            }\n\n\t            var LZString = {\n\t              compressToBase64: function (input) {\n\t                if (input == null) return '';\n\t                var res = LZString._compress(input, 6, function (a) {\n\t                  return keyStrBase64.charAt(a);\n\t                });\n\t                switch (\n\t                  res.length % 4 // To produce valid Base64\n\t                ) {\n\t                  default: // When could this happen ?\n\t                  case 0:\n\t                    return res;\n\t                  case 1:\n\t                    return res + '===';\n\t                  case 2:\n\t                    return res + '==';\n\t                  case 3:\n\t                    return res + '=';\n\t                }\n\t              },\n\n\t              decompressFromBase64: function (input) {\n\t                if (input == null) return '';\n\t                if (input == '') return null;\n\t                return LZString._decompress(input.length, 32, function (index) {\n\t                  return getBaseValue(keyStrBase64, input.charAt(index));\n\t                });\n\t              },\n\n\t              compressToUTF16: function (input) {\n\t                if (input == null) return '';\n\t                return (\n\t                  LZString._compress(input, 15, function (a) {\n\t                    return f(a + 32);\n\t                  }) + ' '\n\t                );\n\t              },\n\n\t              decompressFromUTF16: function (compressed) {\n\t                if (compressed == null) return '';\n\t                if (compressed == '') return null;\n\t                return LZString._decompress(compressed.length, 16384, function (index) {\n\t                  return compressed.charCodeAt(index) - 32;\n\t                });\n\t              },\n\n\t              //compress into uint8array (UCS-2 big endian format)\n\t              compressToUint8Array: function (uncompressed) {\n\t                var compressed = LZString.compress(uncompressed);\n\t                var buf = new Uint8Array(compressed.length * 2); // 2 bytes per character\n\n\t                for (var i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\n\t                  var current_value = compressed.charCodeAt(i);\n\t                  buf[i * 2] = current_value >>> 8;\n\t                  buf[i * 2 + 1] = current_value % 256;\n\t                }\n\t                return buf;\n\t              },\n\n\t              //decompress from uint8array (UCS-2 big endian format)\n\t              decompressFromUint8Array: function (compressed) {\n\t                if (compressed === null || compressed === undefined) {\n\t                  return LZString.decompress(compressed);\n\t                } else {\n\t                  var buf = new Array(compressed.length / 2); // 2 bytes per character\n\t                  for (var i = 0, TotalLen = buf.length; i < TotalLen; i++) {\n\t                    buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];\n\t                  }\n\n\t                  var result = [];\n\t                  buf.forEach(function (c) {\n\t                    result.push(f(c));\n\t                  });\n\t                  return LZString.decompress(result.join(''));\n\t                }\n\t              },\n\n\t              //compress into a string that is already URI encoded\n\t              compressToEncodedURIComponent: function (input) {\n\t                if (input == null) return '';\n\t                return LZString._compress(input, 6, function (a) {\n\t                  return keyStrUriSafe.charAt(a);\n\t                });\n\t              },\n\n\t              //decompress from an output of compressToEncodedURIComponent\n\t              decompressFromEncodedURIComponent: function (input) {\n\t                if (input == null) return '';\n\t                if (input == '') return null;\n\t                input = input.replace(/ /g, '+');\n\t                return LZString._decompress(input.length, 32, function (index) {\n\t                  return getBaseValue(keyStrUriSafe, input.charAt(index));\n\t                });\n\t              },\n\n\t              compress: function (uncompressed) {\n\t                return LZString._compress(uncompressed, 16, function (a) {\n\t                  return f(a);\n\t                });\n\t              },\n\t              _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n\t                if (uncompressed == null) return '';\n\t                var i,\n\t                  value,\n\t                  context_dictionary = {},\n\t                  context_dictionaryToCreate = {},\n\t                  context_c = '',\n\t                  context_wc = '',\n\t                  context_w = '',\n\t                  context_enlargeIn = 2, // Compensate for the first entry which should not count\n\t                  context_dictSize = 3,\n\t                  context_numBits = 2,\n\t                  context_data = [],\n\t                  context_data_val = 0,\n\t                  context_data_position = 0,\n\t                  ii;\n\n\t                for (ii = 0; ii < uncompressed.length; ii += 1) {\n\t                  context_c = uncompressed.charAt(ii);\n\t                  if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {\n\t                    context_dictionary[context_c] = context_dictSize++;\n\t                    context_dictionaryToCreate[context_c] = true;\n\t                  }\n\n\t                  context_wc = context_w + context_c;\n\t                  if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {\n\t                    context_w = context_wc;\n\t                  } else {\n\t                    if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n\t                      if (context_w.charCodeAt(0) < 256) {\n\t                        for (i = 0; i < context_numBits; i++) {\n\t                          context_data_val = context_data_val << 1;\n\t                          if (context_data_position == bitsPerChar - 1) {\n\t                            context_data_position = 0;\n\t                            context_data.push(getCharFromInt(context_data_val));\n\t                            context_data_val = 0;\n\t                          } else {\n\t                            context_data_position++;\n\t                          }\n\t                        }\n\t                        value = context_w.charCodeAt(0);\n\t                        for (i = 0; i < 8; i++) {\n\t                          context_data_val = (context_data_val << 1) | (value & 1);\n\t                          if (context_data_position == bitsPerChar - 1) {\n\t                            context_data_position = 0;\n\t                            context_data.push(getCharFromInt(context_data_val));\n\t                            context_data_val = 0;\n\t                          } else {\n\t                            context_data_position++;\n\t                          }\n\t                          value = value >> 1;\n\t                        }\n\t                      } else {\n\t                        value = 1;\n\t                        for (i = 0; i < context_numBits; i++) {\n\t                          context_data_val = (context_data_val << 1) | value;\n\t                          if (context_data_position == bitsPerChar - 1) {\n\t                            context_data_position = 0;\n\t                            context_data.push(getCharFromInt(context_data_val));\n\t                            context_data_val = 0;\n\t                          } else {\n\t                            context_data_position++;\n\t                          }\n\t                          value = 0;\n\t                        }\n\t                        value = context_w.charCodeAt(0);\n\t                        for (i = 0; i < 16; i++) {\n\t                          context_data_val = (context_data_val << 1) | (value & 1);\n\t                          if (context_data_position == bitsPerChar - 1) {\n\t                            context_data_position = 0;\n\t                            context_data.push(getCharFromInt(context_data_val));\n\t                            context_data_val = 0;\n\t                          } else {\n\t                            context_data_position++;\n\t                          }\n\t                          value = value >> 1;\n\t                        }\n\t                      }\n\t                      context_enlargeIn--;\n\t                      if (context_enlargeIn == 0) {\n\t                        context_enlargeIn = Math.pow(2, context_numBits);\n\t                        context_numBits++;\n\t                      }\n\t                      delete context_dictionaryToCreate[context_w];\n\t                    } else {\n\t                      value = context_dictionary[context_w];\n\t                      for (i = 0; i < context_numBits; i++) {\n\t                        context_data_val = (context_data_val << 1) | (value & 1);\n\t                        if (context_data_position == bitsPerChar - 1) {\n\t                          context_data_position = 0;\n\t                          context_data.push(getCharFromInt(context_data_val));\n\t                          context_data_val = 0;\n\t                        } else {\n\t                          context_data_position++;\n\t                        }\n\t                        value = value >> 1;\n\t                      }\n\t                    }\n\t                    context_enlargeIn--;\n\t                    if (context_enlargeIn == 0) {\n\t                      context_enlargeIn = Math.pow(2, context_numBits);\n\t                      context_numBits++;\n\t                    }\n\t                    // Add wc to the dictionary.\n\t                    context_dictionary[context_wc] = context_dictSize++;\n\t                    context_w = String(context_c);\n\t                  }\n\t                }\n\n\t                // Output the code for w.\n\t                if (context_w !== '') {\n\t                  if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n\t                    if (context_w.charCodeAt(0) < 256) {\n\t                      for (i = 0; i < context_numBits; i++) {\n\t                        context_data_val = context_data_val << 1;\n\t                        if (context_data_position == bitsPerChar - 1) {\n\t                          context_data_position = 0;\n\t                          context_data.push(getCharFromInt(context_data_val));\n\t                          context_data_val = 0;\n\t                        } else {\n\t                          context_data_position++;\n\t                        }\n\t                      }\n\t                      value = context_w.charCodeAt(0);\n\t                      for (i = 0; i < 8; i++) {\n\t                        context_data_val = (context_data_val << 1) | (value & 1);\n\t                        if (context_data_position == bitsPerChar - 1) {\n\t                          context_data_position = 0;\n\t                          context_data.push(getCharFromInt(context_data_val));\n\t                          context_data_val = 0;\n\t                        } else {\n\t                          context_data_position++;\n\t                        }\n\t                        value = value >> 1;\n\t                      }\n\t                    } else {\n\t                      value = 1;\n\t                      for (i = 0; i < context_numBits; i++) {\n\t                        context_data_val = (context_data_val << 1) | value;\n\t                        if (context_data_position == bitsPerChar - 1) {\n\t                          context_data_position = 0;\n\t                          context_data.push(getCharFromInt(context_data_val));\n\t                          context_data_val = 0;\n\t                        } else {\n\t                          context_data_position++;\n\t                        }\n\t                        value = 0;\n\t                      }\n\t                      value = context_w.charCodeAt(0);\n\t                      for (i = 0; i < 16; i++) {\n\t                        context_data_val = (context_data_val << 1) | (value & 1);\n\t                        if (context_data_position == bitsPerChar - 1) {\n\t                          context_data_position = 0;\n\t                          context_data.push(getCharFromInt(context_data_val));\n\t                          context_data_val = 0;\n\t                        } else {\n\t                          context_data_position++;\n\t                        }\n\t                        value = value >> 1;\n\t                      }\n\t                    }\n\t                    context_enlargeIn--;\n\t                    if (context_enlargeIn == 0) {\n\t                      context_enlargeIn = Math.pow(2, context_numBits);\n\t                      context_numBits++;\n\t                    }\n\t                    delete context_dictionaryToCreate[context_w];\n\t                  } else {\n\t                    value = context_dictionary[context_w];\n\t                    for (i = 0; i < context_numBits; i++) {\n\t                      context_data_val = (context_data_val << 1) | (value & 1);\n\t                      if (context_data_position == bitsPerChar - 1) {\n\t                        context_data_position = 0;\n\t                        context_data.push(getCharFromInt(context_data_val));\n\t                        context_data_val = 0;\n\t                      } else {\n\t                        context_data_position++;\n\t                      }\n\t                      value = value >> 1;\n\t                    }\n\t                  }\n\t                  context_enlargeIn--;\n\t                  if (context_enlargeIn == 0) {\n\t                    context_enlargeIn = Math.pow(2, context_numBits);\n\t                    context_numBits++;\n\t                  }\n\t                }\n\n\t                // Mark the end of the stream\n\t                value = 2;\n\t                for (i = 0; i < context_numBits; i++) {\n\t                  context_data_val = (context_data_val << 1) | (value & 1);\n\t                  if (context_data_position == bitsPerChar - 1) {\n\t                    context_data_position = 0;\n\t                    context_data.push(getCharFromInt(context_data_val));\n\t                    context_data_val = 0;\n\t                  } else {\n\t                    context_data_position++;\n\t                  }\n\t                  value = value >> 1;\n\t                }\n\n\t                // Flush the last char\n\t                while (true) {\n\t                  context_data_val = context_data_val << 1;\n\t                  if (context_data_position == bitsPerChar - 1) {\n\t                    context_data.push(getCharFromInt(context_data_val));\n\t                    break;\n\t                  } else context_data_position++;\n\t                }\n\t                return context_data.join('');\n\t              },\n\n\t              decompress: function (compressed) {\n\t                if (compressed == null) return '';\n\t                if (compressed == '') return null;\n\t                return LZString._decompress(compressed.length, 32768, function (index) {\n\t                  return compressed.charCodeAt(index);\n\t                });\n\t              },\n\n\t              _decompress: function (length, resetValue, getNextValue) {\n\t                var dictionary = [],\n\t                  enlargeIn = 4,\n\t                  dictSize = 4,\n\t                  numBits = 3,\n\t                  entry = '',\n\t                  result = [],\n\t                  i,\n\t                  w,\n\t                  bits,\n\t                  resb,\n\t                  maxpower,\n\t                  power,\n\t                  c,\n\t                  data = { val: getNextValue(0), position: resetValue, index: 1 };\n\n\t                for (i = 0; i < 3; i += 1) {\n\t                  dictionary[i] = i;\n\t                }\n\n\t                bits = 0;\n\t                maxpower = Math.pow(2, 2);\n\t                power = 1;\n\t                while (power != maxpower) {\n\t                  resb = data.val & data.position;\n\t                  data.position >>= 1;\n\t                  if (data.position == 0) {\n\t                    data.position = resetValue;\n\t                    data.val = getNextValue(data.index++);\n\t                  }\n\t                  bits |= (resb > 0 ? 1 : 0) * power;\n\t                  power <<= 1;\n\t                }\n\n\t                switch ((bits)) {\n\t                  case 0:\n\t                    bits = 0;\n\t                    maxpower = Math.pow(2, 8);\n\t                    power = 1;\n\t                    while (power != maxpower) {\n\t                      resb = data.val & data.position;\n\t                      data.position >>= 1;\n\t                      if (data.position == 0) {\n\t                        data.position = resetValue;\n\t                        data.val = getNextValue(data.index++);\n\t                      }\n\t                      bits |= (resb > 0 ? 1 : 0) * power;\n\t                      power <<= 1;\n\t                    }\n\t                    c = f(bits);\n\t                    break;\n\t                  case 1:\n\t                    bits = 0;\n\t                    maxpower = Math.pow(2, 16);\n\t                    power = 1;\n\t                    while (power != maxpower) {\n\t                      resb = data.val & data.position;\n\t                      data.position >>= 1;\n\t                      if (data.position == 0) {\n\t                        data.position = resetValue;\n\t                        data.val = getNextValue(data.index++);\n\t                      }\n\t                      bits |= (resb > 0 ? 1 : 0) * power;\n\t                      power <<= 1;\n\t                    }\n\t                    c = f(bits);\n\t                    break;\n\t                  case 2:\n\t                    return '';\n\t                }\n\t                dictionary[3] = c;\n\t                w = c;\n\t                result.push(c);\n\t                while (true) {\n\t                  if (data.index > length) {\n\t                    return '';\n\t                  }\n\n\t                  bits = 0;\n\t                  maxpower = Math.pow(2, numBits);\n\t                  power = 1;\n\t                  while (power != maxpower) {\n\t                    resb = data.val & data.position;\n\t                    data.position >>= 1;\n\t                    if (data.position == 0) {\n\t                      data.position = resetValue;\n\t                      data.val = getNextValue(data.index++);\n\t                    }\n\t                    bits |= (resb > 0 ? 1 : 0) * power;\n\t                    power <<= 1;\n\t                  }\n\n\t                  switch ((c = bits)) {\n\t                    case 0:\n\t                      bits = 0;\n\t                      maxpower = Math.pow(2, 8);\n\t                      power = 1;\n\t                      while (power != maxpower) {\n\t                        resb = data.val & data.position;\n\t                        data.position >>= 1;\n\t                        if (data.position == 0) {\n\t                          data.position = resetValue;\n\t                          data.val = getNextValue(data.index++);\n\t                        }\n\t                        bits |= (resb > 0 ? 1 : 0) * power;\n\t                        power <<= 1;\n\t                      }\n\n\t                      dictionary[dictSize++] = f(bits);\n\t                      c = dictSize - 1;\n\t                      enlargeIn--;\n\t                      break;\n\t                    case 1:\n\t                      bits = 0;\n\t                      maxpower = Math.pow(2, 16);\n\t                      power = 1;\n\t                      while (power != maxpower) {\n\t                        resb = data.val & data.position;\n\t                        data.position >>= 1;\n\t                        if (data.position == 0) {\n\t                          data.position = resetValue;\n\t                          data.val = getNextValue(data.index++);\n\t                        }\n\t                        bits |= (resb > 0 ? 1 : 0) * power;\n\t                        power <<= 1;\n\t                      }\n\t                      dictionary[dictSize++] = f(bits);\n\t                      c = dictSize - 1;\n\t                      enlargeIn--;\n\t                      break;\n\t                    case 2:\n\t                      return result.join('');\n\t                  }\n\n\t                  if (enlargeIn == 0) {\n\t                    enlargeIn = Math.pow(2, numBits);\n\t                    numBits++;\n\t                  }\n\n\t                  if (dictionary[c]) {\n\t                    entry = dictionary[c];\n\t                  } else {\n\t                    if (c === dictSize) {\n\t                      entry = w + w.charAt(0);\n\t                    } else {\n\t                      return null;\n\t                    }\n\t                  }\n\t                  result.push(entry);\n\n\t                  // Add w+entry[0] to the dictionary.\n\t                  dictionary[dictSize++] = w + entry.charAt(0);\n\t                  enlargeIn--;\n\n\t                  w = entry;\n\n\t                  if (enlargeIn == 0) {\n\t                    enlargeIn = Math.pow(2, numBits);\n\t                    numBits++;\n\t                  }\n\t                }\n\t              },\n\t            };\n\t            return LZString;\n\t          })();\n\n\t          {\n\t            !((__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t              return LZString;\n\t            }.call(exports, __webpack_require__, exports, module)),\n\t            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t          }\n\n\t          /***/\n\t        },\n\n\t      /***/ '?9157':\n\t        /*!************************!*\\\n\t  !*** crypto (ignored) ***!\n\t  \\************************/\n\t        /***/ () => {\n\t          /* (ignored) */\n\t          /***/\n\t        },\n\n\t      /******/\n\t    };\n\t    /************************************************************************/\n\t    /******/ // The module cache\n\t    /******/ var __webpack_module_cache__ = {};\n\t    /******/\n\t    /******/ // The require function\n\t    /******/ function __webpack_require__(moduleId) {\n\t      /******/ // Check if module is in cache\n\t      /******/ var cachedModule = __webpack_module_cache__[moduleId];\n\t      /******/ if (cachedModule !== undefined) {\n\t        /******/ return cachedModule.exports;\n\t        /******/\n\t      }\n\t      /******/ // Create a new module (and put it into the cache)\n\t      /******/ var module = (__webpack_module_cache__[moduleId] = {\n\t        /******/ // no module.id needed\n\t        /******/ // no module.loaded needed\n\t        /******/ exports: {},\n\t        /******/\n\t      });\n\t      /******/\n\t      /******/ // Execute the module function\n\t      /******/ __webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t      /******/\n\t      /******/ // Return the exports of the module\n\t      /******/ return module.exports;\n\t      /******/\n\t    }\n\t    /******/\n\t    /************************************************************************/\n\t    /******/ /* webpack/runtime/compat get default export */\n\t    /******/ (() => {\n\t      /******/ // getDefaultExport function for compatibility with non-harmony modules\n\t      /******/ __webpack_require__.n = (module) => {\n\t        /******/ var getter = module && module.__esModule ? /******/ () => module['default'] : /******/ () => module;\n\t        /******/ __webpack_require__.d(getter, { a: getter });\n\t        /******/ return getter;\n\t        /******/\n\t      };\n\t      /******/\n\t    })();\n\t    /******/\n\t    /******/ /* webpack/runtime/define property getters */\n\t    /******/ (() => {\n\t      /******/ // define getter functions for harmony exports\n\t      /******/ __webpack_require__.d = (exports, definition) => {\n\t        /******/ for (var key in definition) {\n\t          /******/ if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t            /******/ Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t            /******/\n\t          }\n\t          /******/\n\t        }\n\t        /******/\n\t      };\n\t      /******/\n\t    })();\n\t    /******/\n\t    /******/ /* webpack/runtime/global */\n\t    /******/ (() => {\n\t      /******/ __webpack_require__.g = (function () {\n\t        /******/ if (typeof globalThis === 'object') return globalThis;\n\t        /******/ try {\n\t          /******/ return this || new Function('return this')();\n\t          /******/\n\t        } catch (e) {\n\t          /******/ if (typeof window === 'object') return window;\n\t          /******/\n\t        }\n\t        /******/\n\t      })();\n\t      /******/\n\t    })();\n\t    /******/\n\t    /******/ /* webpack/runtime/hasOwnProperty shorthand */\n\t    /******/ (() => {\n\t      /******/ __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\t      /******/\n\t    })();\n\t    /******/\n\t    /******/ /* webpack/runtime/make namespace object */\n\t    /******/ (() => {\n\t      /******/ // define __esModule on exports\n\t      /******/ __webpack_require__.r = (exports) => {\n\t        /******/ if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t          /******/ Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t          /******/\n\t        }\n\t        /******/ Object.defineProperty(exports, '__esModule', { value: true });\n\t        /******/\n\t      };\n\t      /******/\n\t    })();\n\t    /******/\n\t    /************************************************************************/\n\t    var __webpack_exports__ = {};\n\t    // This entry need to be wrapped in an IIFE because it need to be in strict mode.\n\t    (() => {\n\t      /*!**********************!*\\\n\t  !*** ./src/index.js ***!\n\t  \\**********************/\n\t      __webpack_require__.r(__webpack_exports__);\n\t      /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n\t        /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,\n\t        /* harmony export */\n\t      });\n\t      /* harmony import */ var _SecureLS__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\n\t        /*! ./SecureLS */ './src/SecureLS.js',\n\t      );\n\n\t      /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = _SecureLS__WEBPACK_IMPORTED_MODULE_0__.SecureLS;\n\t    })();\n\n\t    /******/ return __webpack_exports__;\n\t    /******/\n\t  })();\n\t});\n\t\n} (secureLs));\n\nvar secureLsExports = secureLs.exports;\nvar SecureLS = /*@__PURE__*/getDefaultExportFromCjs(secureLsExports);\n\nconst defaultConfig = {\n    accessToken: 'eyJhbGciOiJIUzI1NiJ9.eyJzY3AiOiJST0xFX0NBTkRJREFURSIsInV1aWQiOiJiMTdhMDEwMi04MmY2LTQzMDgtOWRlNy1lZDNiZjlmNDI5YTEiLCJlbWFpbCI6ImNhcmVlcnNAYWx0aW1ldHJpay5jb20iLCJzdWIiOiJjYXJlZXJzQGFsdGltZXRyaWsuY29tIiwiaWF0IjoxNzI0MjIyMjgwLCJleHAiOjE3NDAwMDA3NTZ9.aQ8vmkArTLLwWdB6sFUlsXzVnFSzxyPaDUAfWGNGAAY',\n    amplitudeApiKey: '9368fac637f0df078fd787fb4f72bbdd',\n    authority: 'https://login.microsoftonline.com/e9cb3c80-4156-4c39-a7fe-68fe427a3d46',\n    baseUrl: 'https://dev-api-driftinv2.altimetrik.com/api/v1',\n    careersPortal: 'https://dev-careers.altimetrik.com',\n    clientId: 'f7c2a312-3962-46fc-9f82-1d5548819f68',\n    googleClientId: '670972172723-1j9v7ghnr541c5mhtp0gg6e07bg9obnj.apps.googleusercontent.com',\n    graphScope: 'https://graph.microsoft.com/user.read',\n    measurementId: 'G-6Q1Q303F0D',\n    recaptchClientId: '6LcDdzcqAAAAAMW56mB7gsc8RsbTwTlBmZKhPtQy',\n    redirectUri: 'http://localhost:9000',\n    scope: `api://f7c2a312-3962-46fc-9f82-1d5548819f68/driftin`,\n    secure: false,\n};\nconst environments = {\n    development: {\n        ...defaultConfig,\n        amplitudeApiKey: 'ba5a289278d9f24a0da299d3fa43bbfe',\n        redirectUri: 'https://dev-driftinv2.altimetrik.com',\n    },\n    local: {\n        ...defaultConfig,\n    },\n    production: {\n        ...defaultConfig,\n        amplitudeApiKey: '2f1027fb9484cd9148e43e92556cfcd0',\n        baseUrl: 'https://prod-api-driftinv2.altimetrik.com/api/v1',\n        careersPortal: 'https://careers.altimetrik.com',\n        clientId: '885dd01f-3d75-43a2-b516-a6109d3dbadb',\n        measurementId: 'G-942WN83EMC',\n        redirectUri: 'https://driftinv2.altimetrik.com',\n        scope: 'api://885dd01f-3d75-43a2-b516-a6109d3dbadb/driftin',\n        secure: true,\n    },\n    staging: {\n        ...defaultConfig,\n        amplitudeApiKey: '7dd99e8a810d950f35a23f0ba45ac871',\n        baseUrl: 'https://stage-api-driftinv2.altimetrik.com/api/v1',\n        careersPortal: 'https://stage-careers.altimetrik.com',\n        clientId: 'd9025116-22ff-47cd-a022-7ef335e9975d',\n        measurementId: 'G-C0C8BVXTSL',\n        redirectUri: 'https://stage-driftinv2.altimetrik.com',\n        scope: 'api://d9025116-22ff-47cd-a022-7ef335e9975d/driftin',\n    },\n    test: {\n        ...defaultConfig,\n    },\n};\nconst env = (process.env['NODE' + '_ENV'] || 'local');\nconst config = environments[env];\n\nconst ls = new SecureLS({ encodingType: 'des', encryptionSecret: '6d0409b4-bafd-48f7-a382-14f4a9435ec4' });\nclass StoreUtil {\n    static clearStorage(secure = config.secure) {\n        localStorage.clear();\n    }\n    static getData(key, secure = config.secure) {\n        const data = secure ? ls.get(key) : localStorage.getItem(key);\n        if (data) {\n            try {\n                return JSON.parse(data);\n            }\n            catch (error) {\n                return data;\n            }\n        }\n        return null;\n    }\n    static removeData(key, secure = config.secure) {\n        const data = secure ? ls.get(key) : localStorage.getItem(key);\n        if (data) {\n            localStorage.removeItem(key);\n        }\n    }\n    static setData(key, value, secure = config.secure) {\n        if (typeof value === 'string') {\n            if (secure) {\n                ls.set(key, value);\n            }\n            else {\n                localStorage.setItem(key, value);\n            }\n        }\n        else {\n            const _value = JSON.stringify(value);\n            if (secure) {\n                ls.set(key, _value);\n            }\n            else {\n                localStorage.setItem(key, _value);\n            }\n        }\n    }\n}\n\nconst INTERVIEW_MEETING_DETAIL_API_KEY = 'interviewMeetingDetailApiKey';\nconst INTERVIEW_MEETING_DETAIL_OPT_OUT_API_KEY = 'interviewMeetingDetailOptOutApiKey';\nconst INTERVIEW_CANDIDATE_MEETING_DETAIL_API_KEY = 'candidateMeetingApiKey';\nconst CANDIDATE_INTERVIEW_STAGE_FEEDBACK_KEY = 'candidateInterviewFeedbackApikey';\nconst PENDING_FEEDBACK_SKILLS_KEY = 'pendingFeedbackSkills';\nconst SKILLS_INFO_API_KEY = 'getSkillsapikey';\nconst STAGE_STATUS_API_KEY = 'getStageStatusStatic';\nconst ALL_ACCOUNT_API_KEY = 'allAccounts';\nconst ALL_LOCATION_API_KEY = 'allLocations';\nconst JOB_LIST_TEMP = 'jobListTemp';\nconst ALL_PROJECTS_API_KEY = 'allProjects';\nconst HACKER_RANK_TEST_DETAIL_KEY = 'hackerRankTestDetailKey';\nconst CODING_CHALLENGE_DETAIL_KEY = 'getStageStatusStatic';\nconst USE_CASE_DETAIL_KEY = 'getUseCaseKey';\nconst CANDIDATE_INTERVIEW_SCHEDULED_DETAIL_API_KEY = 'candidateInterviewScheduled';\nconst CALENDAR_GET_KEY = 'calendargetkey';\nconst CANDIDATE_REQUISITION_INFO_KEY = 'candidaterequisitioninfokey';\nconst MEETING_CANDIDATE_DETAILS_KEY = 'meetingcandidatedetailskey';\nconst RECRUITER_INFO_API_KEY = 'recruiterInfokey';\nconst SKILLS_BY_CAT_API_KEY = 'getSkillsByCatApikey';\nconst USER_INFO_API_KEY = 'userinfoapikey';\nconst DOMAINS_INFO_API_KEY = 'getDomainsapikey';\nconst GET_STATES_API_KEY = 'getStatesapikey';\nconst GET_CITIES_API_KEY = 'getCitiesapikey';\nconst GET_NOTICE_PERIOD_API_KEY = 'getNoticeapikey';\nconst DEX_PARSER_API_KEY = 'dexparsetapikey';\nconst ONBOARDING_SUBMIT_API_KEY = 'onboardingsubmitapikey';\nconst GOOGLE_AUTH_KEY = 'getGoogleTokenkey';\nconst LOGOUT_KEY = 'logoutkey';\nconst CANDIDATE_MINIMUM_INFO_API_KEY = 'candidateminiuminfo';\nconst PANELIST_MINIMUM_INFO_API_KEY = 'panelistminiuminfo';\nconst MYACTION_API_KEY = 'myactionapikey';\nconst CANDIDATE_RATING_KEY = 'candidateRatingKey';\nconst DELETE_BGV_DOCS_KEY = 'deleteBgvdocs';\nconst GET_CANDIDATE_BGV_DOCS_KEY = 'getcandidatebgvdocs';\nconst GET_IS_CANDIDATE_BGV_DOCS_UPLOADED_KEY = 'getIsCandidateDocsUploadedAlready';\nconst GET_CANDIDATE_BGV_DOC_FILE_DETAILS_KEY = 'getcandidatebgvdocFileDetials';\nconst DASHBOARD_UPCOMING_INTERVIEW_KEY = 'dashboardUpcomingInterviews';\nconst DASHBOARD_INTERVIEW_SLOTS_KEY = 'dashboardInterviewSlots';\nconst PENDING_FEEDBACK_KEY = 'pendingfeedbackapikey';\nconst AWAITING_CANDIDATES_KEY = 'awaitingCandidatesapikey';\nconst INTERVIEW_SLOTS_KEY = 'dashboardInterviewSlots';\nconst INTERVIEW_SUCCESS_RATE_KEY = 'interviewsuccessratekey';\nconst CANDIDATE_FEEDBACK_KEY = 'candidateFeedbackKey';\nconst RECOMMENDATION_AVAILABILITY_KEY = 'recommendationAvailabilitykey';\nconst CANDIDATE_UPDATE_PREFERENCE_KEY = 'candidateUpdatePreferenceKey';\nconst EL_PANELIST_DETAILS_KEY = 'elpanelistkey';\nconst EL_DASHBOARD_INFO_KEY = 'eldashboardkey';\nconst EL_HIRING_JOB_INFO_KEY = 'elhiringjobinfokey';\nconst EL_JOB_CANDIDATES_API_KEY = 'elJobCandidatesApiKey';\nconst INCENTIVES_GET_API_KEY = 'incentivesGetApiKey';\nconst PAST_INTERVIEWS_GET_API_KEY = 'pastInterviewsGetApiKey';\nconst UPCOMING_INTERVIEW_API_KEY = 'upcominginterviews';\nconst CANDIDATE_PLAYGROUND_PROCESS_KEY = 'candidateCurrentStatusKey';\nconst CANDIDATE_PAST_PLAYGROUND_PROCESS_KEY = 'candidatePastInterviewStageStatusKey';\nconst JOB_LIST_KEY = 'allRequisitionInfo';\nconst JOB_INFO_KEY = 'RequisitionInfo';\nconst JOB_APPLY_KEY = 'jobMapping';\nconst JOB_STATUS_KEY = 'jobMappingDetails';\nconst JOB_FILTER_OPTIONS_KEY = 'jobFilterOptionsKey';\nconst HACKER_RANK_API_KEY = 'getHackerRankScore';\nconst DOWNLOAD_PLUGIN_KEY = 'downloadPluginKey';\nconst PROJECT_LIST_KEY = 'projectlistkey';\nconst PROJECT_JOB_LIST_KEY = 'projectjoblistkey';\nconst CODING_CHALLENGE_KEY = 'codingchallengekey';\nconst EXPLORE_TESTIMONIAL_GET_API_KEY = 'exploreTestimonialtApiKey';\nconst EXPLORE_VIDEO_GET_API_KEY = 'exploreVideoGetApiKey';\nconst PANELISTS_GET_API_KEY = 'panelistsGetApiKey';\nconst EL_MAPPED_ACCOUNTS_API_KEY = 'elMappedAccounts';\nconst USER_PROFILE_API_KEY = 'userProfileApiKey';\nconst PANELIST_DETAILS_KEY = 'panelListDetailsKey';\nconst GET_CANDIDATE_REJECT_API_KEY = 'getCandidateRejectReasons';\nconst PRIMARY_CHALLENGE_KEY = 'primarychallengeKey';\nconst EL_JOBS_KPI_DETAILS_KEY = 'elJobsKpiDetailsKey';\nconst EL_JOB_DESCRIPTION_KPI_DETAILS_KEY = 'elJobDescriptionKpiDetailsKey';\nconst CANDIDATE_SURVEY_QUESTIONS_API_KEY = 'surveyQuestionsKey';\nconst INTERVIEW_STAGES_API_KEY = 'interviewStageOptionsKey';\nconst INTERVIEW_STATUSES_API_KEY = 'interviewStageStatusOptionsKey';\nconst CANDIATE_JOB_APPLY_API_KEY = 'candidatejobapplyKey';\nconst PANELIST_LIST_API_KEY = 'panelistlistKey';\nconst JOB_SOURCES_LIST_API_KEY = 'jobSourceApiKey';\n\nconst INTERVIEW_MEETING_DETAIL_API_URL = '/interview/panelist/search';\nconst INTERVIEW_MEETING_DETAIL_OPT_OUT_API_URL = '/interview/candidate/opt_out';\nconst INTERVIEW_CANDIDATE_MEETING_DETAIL_API_URL = '/interview/candidate/meetingDetails';\nconst MEETING_CANDIDATE_DETAILS_URL = '/sourcing/candidate/details';\nconst CANDIDATE_REQUISITION_INFO_URL = '/distribution/candidateRequisitionInfo';\nconst CANDIDATE_PLAYGROUND_PROCESS_URL = '/interview/candidate';\nconst CANDIDATE_PAST_PLAYGROUND_PROCESS_URL = 'interview/candidate/current-interview-stages';\nconst FILE_UPLOAD_API_URL = '/platform/upload';\nconst DELETE_FILE_API_URL = '/platform/delete';\nconst DELETE_FEEDBACK_ATTACHMENT_API_URL = '/interview/candidate/deleteFeedbackAttachment';\nconst DOWNLOAD_FILE_API_URL = '/platform/download';\nconst CANDIDATE_INTERVIEW_STAGE_FEEDBACK_API_URL = '/interview/candidate/feedback';\nconst PENDING_FEEDBACK_SKILLS_URL = '/interview/candidate/feedback';\nconst SAVE_FEEDBACK_API_URL = '/interview/panelist/submitInterviewFeedback';\nconst SKILLS_INFO_API_URL = '/platform/skillset';\nconst DELETE_QA_API_URL = '/interview/candidate/deleteFeedbackQNA';\nconst ADD_SKILL_API_URL = '/interview/feedback/skillset';\nconst STAGE_STATUS_API_URL = '/interview/stage-status';\nconst ALL_ACCOUNT_API_URL = '/interview/el/accounts';\nconst ALL_LOCATION_API_URL = '/platform/all-officeLocation';\nconst GET_NOTICE_PERIOD = '/platform/notice-period';\nconst ALL_PROJECTS_API_URL = 'distribution/job-opportunity/summary-data';\nconst HACKER_RANK_TEST_DETAIL_URL = '/interview/hackerrank/test-result';\nconst CODING_CHALLENGE_DETAIL_URL = '/interview/candidate/coding/interview-feedback';\nconst USE_CASE_DETAIL_URL = '/interview/coding/useCase';\nconst HACKER_RANK_TEST_REPORT_URL = '/interview/hackerrank/test-report';\nconst DELETE_SKILL_API_URL = '/interview/candidate/deleteFeedback';\nconst DELETE_BGV_DOC_ITEM_URL = '/sourcing/candidate/deleteBgvDocument';\nconst GET_CANDIDATE_BGV_DOC_LIST_URL = '/sourcing/candidate/bgv-documents-list';\nconst GET_CANDIDATE_BGV_DOCS_URL = '/sourcing/candidate/bgvDocuments';\nconst UPLOAD_BGV_DOCS = '/sourcing/candidate/uploadBgvDocuments';\nconst GET_IS_CANDIDATE_DOCS_UPLOADED_URL = '/sourcing/candidate/documents/availability';\nconst CALENDAR_API_URL = '/interview/calendar/slots';\nconst INTERVIEW_PANELIST_SLOTS = '/interview/panelist/slots';\nconst INTERVIEW_PANELIST_EDIT_SLOTS = '/interview/panelist/edit/slots';\nconst INTERVIEW_CANDIDATE_SLOTS = '/interview/candidate/slots';\nconst INTERVIEW_CANDIDATE_EDIT_SLOTS = '/interview/candidate/edit/slots';\nconst RESCHEDULE_SLOTS_API_URL = '/interview/panelist/rescheduleslot';\nconst SKILLS_BY_CATG_API_URL = '/platform/skillset/category';\nconst USER_INFO_API_URL = '/auth/validate';\nconst DOMAINS_INFO_API_URL = '/platform/domains';\nconst GET_STATES_URL = '/platform/states';\nconst GET_CITY_BY_STATE_ID_URL = `/platform/cities/`;\nconst GET_CITIES_URL = `/platform/cities`;\nconst DEX_PARSER_API_URL = '/interview/resumeParser';\nconst ONBOARDING_API_URL = '/interview/panelist/onboarding';\nconst CANDIDATE_LOGIN_API_URL = '/sourcing/candidate/otp/login';\nconst CANDIDATE_SIGNUP_API_URL = '/sourcing/candidate/otp/signup';\nconst OTP_VERIFY_API_URL = '/sourcing/candidate/otp/verify';\nconst CANDIDATE_SIGN_OUT = '/sourcing/candidate/logout';\nconst CANDIDATE_ONBOARDING_API_URL = '/sourcing/candidate/onboarding';\nconst GOOGLE_AUTH_TOKEN_URL = '/auth/google/tokens';\nconst CANDIDATE_MINIMUM_INFO_API_URL = '/sourcing/candidate/minimum/info';\nconst PANELIST_MINIMUM_INFO_API_URL = '/interview/panelist/minimum/info';\nconst MYACTION_API_URL = '/interview/user/action';\nconst CANDIDATE_UPDATE_PREFERENCE = 'sourcing/candidate/updatePreference';\nconst CANDIDATE_EVENT_SOURCE_URL = '/interview/stage/status-feedback';\nconst RECRUITER_INFO_API_URL = '/sourcing/candidate/recruiter-details';\nconst CANDIDATE_RATING_API_URL = '/interview/panellist/rating';\nconst PENDING_FEEDBACK_API_URL = '/interview/panelist/pendingFeedbacks';\nconst AWAITING_CANDIDATES_API_URL = '/interview/el/awaitingCandidates';\nconst INTERVIEW_SLOTS_URL = '/interview/panellist/slots';\nconst INTERVIEW_SUCCESS_RATE_URL = '/interview/panelist/success_rate';\nconst CANDIDATE_FEEDBACK_API_URL = '/interview/panellist/feedback/desc';\nconst DASHBOARD_UPCOMING_INTERVIEW_URL = '/interview/upcoming';\nconst RECOMMENDATION_ACCEPT_URL = '/interview/candidate/accept';\nconst RECOMMENDATION_AVAILABLITY_URL = '/interview/candidate/recommendation/availability';\nconst RECOMMENDATION_SYNC_URL = '/interview/candidate/recommendation';\nconst EL_HIRING_INFO_URL = '/interview/hiring/statistics';\nconst EL_HIRING_DASHBOARD_INFO_URL = '/interview/el/hiringJobInfo';\nconst EL_PANELIST_DETAILS_URL = '/interview/el/dashboard/panelist-card-info';\nconst EL_JOB_CANDIDATES_API_URL = '/interview/jobs/candidates';\nconst INCENTIVES_API_URL = '/interview/panellist/incentives';\nconst PAST_INTERVIEWS_API_URL = '/interview/past';\nconst UPCOMING_INTERVIEW_API_URL = '/interview/upcoming';\nconst JOB_LIST_URL = '/distribution/allRequisitionInfo';\nconst JOB_INFO_URL = '/distribution/RequisitionInfo';\nconst JOB_APPLY_URL = '/interview/candidate/jobMapping';\nconst JOB_STATUS_URL = '/sourcing/candidate/jobmappingdetails';\nconst JOB_FILTER_OPTIONS = '/platform/job-filter-options';\nconst HACKER_RANK_API_URL = '/interview/hackerrank/test-result';\nconst CANDIDATE_PROCEED_NEXT_ROUND_API_URL = '/interview/create-next-stage';\nconst CANDIDATE_SCREENING_PROCEEDANYWAY = '/interview/candidate/screening-proceed-anyway';\nconst GENERATE_HACKERRANK_TEST_URL = '/interview/hackerrank/test-invite';\nconst UPLOAD_CODE_ZIP = '/interview/coding/candidate/upload-project';\nconst PROJECT_LIST_URL = '/distribution/job-opportunities';\nconst CODING_CHALLENGE_URL = '/interview/coding/detail';\nconst EXPLORE_TESTIMONIAL_API_URL = '/platform/explore-testimonial';\nconst EXPLORE_VIDEO_API_URL = '/platform/explore-video';\nconst PANELISTS_API_URL = '/interview/panelists';\nconst PANELIST_API_URL = '/interview/panelist/details';\nconst USER_PROFILE_API_URL = '/sourcing/candidate/details';\nconst UPLOAD_PROJECT = '/interview/coding/candidate/upload-project';\nconst VALIDATE_CANDIDATE = '/sourcing/validateCandidate';\nconst FEEDBACK_ATTACHMENT = '/interview/panelist/submitFeedbackAttachment';\nconst CANDIDATE_REFRESH_TOKEN = '/sourcing/refresh-token';\nconst GOOGLE_REFRESH_TOKEN = '/auth/google/refresh-token';\nconst CODING_FEEDBACK_API_URL = '/interview/panelist/coding/interview-feedback';\nconst GET_CANDIDATE_REJECT_API_URL = '/interview/rejection-reason';\nconst PRIMARY_CHALLENGE_API_URL = '/interview/search/hackerrank-test';\nconst EL_JOBS_KPI_DETAILS = '/interview/jobs/kpi-details';\nconst EL_JOB_DESCRIPTION_KPI_DETAILS = '/interview/job-description/kpi-details';\nconst PANELISTS_GET_API_URL = '/interview/panellists';\nconst EL_MAPPED_ACCOUNTS_API_URL = '/interview/el/accounts';\nconst EL_PANELIST_SEND_ALERT_API_URL = '/interview/panelist-action/send-alert';\nconst JOB_SOURCES_LIST_API_URL = '/platform/all-source';\nconst INTERVIEW_STAGES_API_URL = '/interview/stage-names';\nconst INTERVIEW_STATUSES_API_URL = '/interview/stage-status';\nconst JOB_APPLY_API_URL = '/interview/candidate/job-apply';\nconst INTERVIEW_NEW_MEETING_API_URL = '/interview/recruiter/schedule-meeting';\nconst PANELIST_LIST_API_URL = '/interview/recruiter/jd/panelists';\nconst TA_AWAITING_CANDIDATE_API_URL = '/interview/recruiter/awaitingCandidate';\nconst CANDIDATE_SCREENING_API_URL = '/interview/candidate/screening';\nconst CANDIDATE_SURVEY_API_URL = '/interview/candidate/survey';\nconst CANDIDATE_SURVEY_QUESTION_API_URL = 'platform/survey/questions';\nconst CANDIDATE_DROP_API_URL = '/sourcing/candidate/drop';\nconst JOB_REFER_API_URL = '/sourcing/candidate/refer/job';\nconst EXTERNAL_PANELIST_LOGIN = '/interview/user/otp/login';\nconst EXTERNAL_PANELIST_OTP_VERIFY = '/interview/user/otp/verify';\nconst EXTERNAL_PANELIST_REFRESH_TOKEN = '/interview/refresh-token';\nconst EXTERNAL_PANELIST_LOGOUT = '/interview/user/logout';\n\n// ***************  localStorage keys ***************\nconst ONBOARDING_KEY = 'onboarding';\nconst USERINFO_KEY = 'userinfo';\nconst JOB_MAPPING_INFO = 'jobmappinginfo';\nconst DEX_DATA_KEY = 'dexdatakey';\nconst STATES_KEY = 'states';\nconst CITIES_KEY = 'cities';\nconst LOGIN_KEY = 'loginkey';\nconst PROFILE_DATA_KEY = 'profiledata';\nconst PROFILE_EDIT_SECTION_KEY = 'profilesection';\nconst EDIT_JOB_KEY = 'editjob';\nconst PREF_KEY = 'preference';\nconst PROCEED_ROUND_KEY = 'proceedtonextround';\nconst PROFILE_PERCENT_KEY = 'profilePercent';\nconst INTERVIEW_STAGES_KEY = 'interviewstageskey';\nconst SCREENING_STATUS_KEY = 'screeningStatus';\nconst STATES_INFO_KEY = 'statesinfokey';\nconst OFFICE_LOCATIONS_KEY = 'officelocationoptionskey';\nconst FEEDBACK_CACHE_KEY = 'feedbackcachekey';\nconst HR_PROCEED_KEY = 'hrconnectproceedkey';\nconst IS_SCREENED_KEY = 'profiledisabledkey';\nconst COUNTRY_CODE_KEY = 'countrycode';\n// LOGIN SOURCE\nconst DRIFTIN_V1 = 'DRIFTIN_V1';\nconst DRIFTIN_V2 = 'DRIFTIN_V2';\nconst DEX_WEB = 'DEX_WEB';\nconst DEX_APP = 'DEX_APP';\nconst CAREERS_PORTAL = 'CAREERS_PORTAL';\nconst DIRECT_LOGIN = 'DIRECT_LOGIN';\n/**************** API URLS *********************/\n/**************** API KEYS *********************/\nconst GRAPH_TOKEN_KEY = 'graphtokenkey';\n\nvar ApiType;\n(function (ApiType) {\n    ApiType[ApiType[\"GET\"] = 0] = \"GET\";\n    ApiType[ApiType[\"POST\"] = 1] = \"POST\";\n    ApiType[ApiType[\"PUT\"] = 2] = \"PUT\";\n    ApiType[ApiType[\"DELETE\"] = 3] = \"DELETE\";\n    ApiType[ApiType[\"PATCH\"] = 4] = \"PATCH\";\n})(ApiType || (ApiType = {}));\n\nvar AuthType;\n(function (AuthType) {\n    AuthType[AuthType[\"SSO\"] = 0] = \"SSO\";\n    AuthType[AuthType[\"OTP\"] = 1] = \"OTP\";\n})(AuthType || (AuthType = {}));\n\nvar JobsStatus;\n(function (JobsStatus) {\n    JobsStatus[\"ACTIVE\"] = \"ACTIVE\";\n    JobsStatus[\"CLOSED\"] = \"CLOSED\";\n    JobsStatus[\"PENDING_APPROVAL\"] = \"PENDING_APPROVAL\";\n})(JobsStatus || (JobsStatus = {}));\n\nvar LoginType;\n(function (LoginType) {\n    LoginType[\"AZURE\"] = \"azure\";\n    LoginType[\"CUSTOM\"] = \"custom\";\n    LoginType[\"GOOGLE\"] = \"google\";\n    LoginType[\"LINKEDIN\"] = \"linkedin\";\n})(LoginType || (LoginType = {}));\n\nvar RoleName;\n(function (RoleName) {\n    RoleName[\"CANDIDATE\"] = \"ROLE_CANDIDATE\";\n    RoleName[\"EL\"] = \"ROLE_EL\";\n    RoleName[\"EXTERNAL_PANELIST\"] = \"ROLE_EXTERNAL_PANELIST\";\n    RoleName[\"PANELIST\"] = \"ROLE_PANELIST\";\n    RoleName[\"TA_ASSOCIATE\"] = \"ROLE_TA_ASSOCIATE\";\n})(RoleName || (RoleName = {}));\n\nvar RoleType;\n(function (RoleType) {\n    RoleType[\"EMPLOYEE\"] = \"employee\";\n    RoleType[\"NON_EMPLOYEE\"] = \"nonemployee\";\n})(RoleType || (RoleType = {}));\n\nvar StageStatus;\n(function (StageStatus) {\n    StageStatus[\"ADDITIONAL_ROUND_REQUIRED\"] = \"ADDITIONAL_ROUND_REQUIRED\";\n    StageStatus[\"AWAITING_FEEDBACK\"] = \"AWAITING_FEEDBACK\";\n    StageStatus[\"CANCELLED\"] = \"CANCELLED\";\n    StageStatus[\"COMPLETED\"] = \"COMPLETED\";\n    StageStatus[\"DID_NOT_TURN_UP\"] = \"DID_NOT_TURN_UP\";\n    StageStatus[\"DROPPED\"] = \"DROPPED\";\n    StageStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n    StageStatus[\"INVITED\"] = \"INVITED\";\n    StageStatus[\"PENDING\"] = \"PENDING\";\n    StageStatus[\"READY\"] = \"READY\";\n    StageStatus[\"REJECTED\"] = \"REJECTED\";\n    StageStatus[\"SCHEDULED\"] = \"SCHEDULED\";\n    StageStatus[\"SCREENED\"] = \"SCREENED\";\n    StageStatus[\"SELECTED\"] = \"SELECTED\";\n    StageStatus[\"SKIPPED\"] = \"SKIPPED\";\n    StageStatus[\"YET_TO_BE_SCHEDULED\"] = \"YET_TO_BE_SCHEDULED\";\n})(StageStatus || (StageStatus = {}));\n\nvar UploadFileType;\n(function (UploadFileType) {\n    UploadFileType[\"AWARD\"] = \"AWARD\";\n    UploadFileType[\"CERTIFICATE\"] = \"CERTIFICATE\";\n    UploadFileType[\"FEEDBACK\"] = \"FEEDBACK\";\n    UploadFileType[\"IDDOC\"] = \"IDDOC\";\n    UploadFileType[\"PROFILEPIC\"] = \"PROFILEPIC\";\n    UploadFileType[\"RESUME\"] = \"RESUME\";\n})(UploadFileType || (UploadFileType = {}));\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\nconst HttpStatus = {\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR_RANGE_START: 400,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVER_ERROR_RANGE_END: 599,\n};\nconst OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n/**\n * Request header names\n */\nconst HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n};\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nconst PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\",\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n};\n/**\n * String constants related to AAD Authority\n */\nconst AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n};\n/**\n * Claims request keys\n */\nconst ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n};\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nconst PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n/**\n * allowed values for codeVerifier\n */\nconst CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n/**\n * allowed values for server response type\n */\nconst ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n};\n/**\n * allowed values for response_mode\n */\nconst ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n};\n/**\n * allowed grant_type\n */\nconst GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n/**\n * Account types in Cache\n */\nconst CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n};\n/**\n * Separators used in cache\n */\nconst Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n};\n/**\n * Credential Type stored in the cache\n */\nconst CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n};\n/**\n * More Cache related constants\n */\nconst APP_METADATA = \"appmetadata\";\nconst CLIENT_INFO = \"client_info\";\nconst THE_FAMILY_ID = \"1\";\nconst AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\nconst AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n};\nconst SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80,\n    MAX_LAST_HEADER_BYTES: 330,\n    MAX_CACHED_ERRORS: 50,\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n/**\n * Type of the authentication request\n */\nconst AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n};\n/**\n * Constants related to throttling\n */\nconst ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\nconst Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n/**\n * Password grant parameters\n */\nconst PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n};\n/**\n * Response codes\n */\nconst ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n};\n/**\n * Region Discovery Sources\n */\nconst RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n};\n/**\n * Region Discovery Outcomes\n */\nconst RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n};\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nconst CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n};\nconst JsonWebTokenTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst unexpectedError = \"unexpected_error\";\nconst postRequestFailed$1 = \"post_request_failed\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AuthErrorMessages = {\n    [unexpectedError]: \"Unexpected error in authentication.\",\n    [postRequestFailed$1]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n    constructor(errorCode, errorMessage, suberror) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n    setCorrelationId(correlationId) {\n        this.correlationId = correlationId;\n    }\n}\nfunction createAuthError(code, additionalMessage) {\n    return new AuthError(code, additionalMessage\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\n        : AuthErrorMessages[code]);\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst clientInfoDecodingError = \"client_info_decoding_error\";\nconst clientInfoEmptyError = \"client_info_empty_error\";\nconst tokenParsingError = \"token_parsing_error\";\nconst nullOrEmptyToken = \"null_or_empty_token\";\nconst endpointResolutionError = \"endpoints_resolution_error\";\nconst networkError = \"network_error\";\nconst openIdConfigError = \"openid_config_error\";\nconst hashNotDeserialized = \"hash_not_deserialized\";\nconst invalidState = \"invalid_state\";\nconst stateMismatch = \"state_mismatch\";\nconst stateNotFound = \"state_not_found\";\nconst nonceMismatch = \"nonce_mismatch\";\nconst authTimeNotFound = \"auth_time_not_found\";\nconst maxAgeTranspired = \"max_age_transpired\";\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nconst requestCannotBeMade = \"request_cannot_be_made\";\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\nconst emptyInputScopeSet = \"empty_input_scopeset\";\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nconst deviceCodeExpired = \"device_code_expired\";\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\nconst invalidCacheRecord = \"invalid_cache_record\";\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\nconst noAccountFound = \"no_account_found\";\nconst noCryptoObject = \"no_crypto_object\";\nconst unexpectedCredentialType = \"unexpected_credential_type\";\nconst invalidAssertion = \"invalid_assertion\";\nconst invalidClientCredential = \"invalid_client_credential\";\nconst tokenRefreshRequired = \"token_refresh_required\";\nconst userTimeoutReached = \"user_timeout_reached\";\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\nconst keyIdMissing = \"key_id_missing\";\nconst noNetworkConnectivity$1 = \"no_network_connectivity\";\nconst userCanceled = \"user_canceled\";\nconst missingTenantIdError = \"missing_tenant_id_error\";\nconst methodNotImplemented = \"method_not_implemented\";\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst ClientAuthErrorMessages = {\n    [clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\n    [clientInfoEmptyError]: \"The client info was empty\",\n    [tokenParsingError]: \"Token cannot be parsed\",\n    [nullOrEmptyToken]: \"The token is null or empty\",\n    [endpointResolutionError]: \"Endpoints cannot be resolved\",\n    [networkError]: \"Network request failed\",\n    [openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [hashNotDeserialized]: \"The hash parameters could not be deserialized\",\n    [invalidState]: \"State was not the expected format\",\n    [stateMismatch]: \"State mismatch error\",\n    [stateNotFound]: \"State not found\",\n    [nonceMismatch]: \"Nonce mismatch error\",\n    [authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\n    [cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\n    [cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\n    [deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [deviceCodeExpired]: \"Device code is expired.\",\n    [deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\n    [noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\n    [invalidCacheRecord]: \"Cache record object was null or undefined.\",\n    [invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\n    [noAccountFound]: \"No account found in cache for given key.\",\n    [noCryptoObject]: \"No crypto object detected.\",\n    [unexpectedCredentialType]: \"Unexpected credential type.\",\n    [invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [userTimeoutReached]: \"User defined timeout for device code polling reached\",\n    [tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\n    [bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\n    [endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\n    [keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [noNetworkConnectivity$1]: \"No network connectivity. Check your internet connection.\",\n    [userCanceled]: \"User cancelled the flow.\",\n    [missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [methodNotImplemented]: \"This method has not been implemented\",\n    [nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass ClientAuthError extends AuthError {\n    constructor(errorCode, additionalMessage) {\n        super(errorCode, additionalMessage\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n            : ClientAuthErrorMessages[errorCode]);\n        this.name = \"ClientAuthError\";\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\nfunction createClientAuthError(errorCode, additionalMessage) {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\n    createNewGuid: () => {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    base64Decode: () => {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    base64Encode: () => {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async getPublicKeyThumbprint() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async removeTokenBindingKey() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async clearKeystore() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async signJwt() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async hashString() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Log message level.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nclass Logger {\n    constructor(loggerOptions, packageName, packageVersion) {\n        // Current log level, defaults to info.\n        this.level = LogLevel.Info;\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n    static createDefaultLoggerOptions() {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n    /**\n     * Create new Logger with existing configurations.\n     */\n    clone(packageName, packageVersion, correlationId) {\n        return new Logger({\n            loggerCallback: this.localCallback,\n            piiLoggingEnabled: this.piiLoggingEnabled,\n            logLevel: this.level,\n            correlationId: correlationId || this.correlationId,\n        }, packageName, packageVersion);\n    }\n    /**\n     * Log message with required options.\n     */\n    logMessage(logMessage, options) {\n        if (options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level, message, containsPii) {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n    /**\n     * Logs error messages.\n     */\n    error(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages.\n     */\n    warning(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages.\n     */\n    info(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages.\n     */\n    trace(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled() {\n        return this.piiLoggingEnabled || false;\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/* eslint-disable header/header */\nconst name$3 = \"@azure/msal-common\";\nconst version$4 = \"14.6.0\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nfunction extractTokenClaims(encodedToken, base64Decode) {\n    const jswPayload = getJWSPayload(encodedToken);\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded);\n    }\n    catch (err) {\n        throw createClientAuthError(tokenParsingError);\n    }\n}\n/**\n * decode a JWT\n *\n * @param authToken\n */\nfunction getJWSPayload(authToken) {\n    if (!authToken) {\n        throw createClientAuthError(nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw createClientAuthError(tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n    return matches[2];\n}\n/**\n * Determine if the token's max_age has transpired\n */\nfunction checkMaxAge(authTime, maxAge) {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw createClientAuthError(maxAgeTranspired);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nclass TimeUtils {\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds() {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn, offset) {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return offsetCurrentTimeSec > expirationSec;\n    }\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt\n     * @param offset\n     */\n    static wasClockTurnedBack(cachedAt) {\n        const cachedAtSec = Number(cachedAt);\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay(t, value) {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\n * @param credentialEntity\n * @returns\n */\nfunction generateCredentialKey(credentialEntity) {\n    const credentialKey = [\n        generateAccountId(credentialEntity),\n        generateCredentialId(credentialEntity),\n        generateTarget(credentialEntity),\n        generateClaimsHash(credentialEntity),\n        generateScheme(credentialEntity),\n    ];\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n/**\n * Create IdTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nfunction createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\n    const idTokenEntity = {\n        credentialType: CredentialType.ID_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: idToken,\n        realm: tenantId,\n    };\n    return idTokenEntity;\n}\n/**\n * Create AccessTokenEntity\n * @param homeAccountId\n * @param environment\n * @param accessToken\n * @param clientId\n * @param tenantId\n * @param scopes\n * @param expiresOn\n * @param extExpiresOn\n */\nfunction createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\n    const atEntity = {\n        homeAccountId: homeAccountId,\n        credentialType: CredentialType.ACCESS_TOKEN,\n        secret: accessToken,\n        cachedAt: TimeUtils.nowSeconds().toString(),\n        expiresOn: expiresOn.toString(),\n        extendedExpiresOn: extExpiresOn.toString(),\n        environment: environment,\n        clientId: clientId,\n        realm: tenantId,\n        target: scopes,\n        tokenType: tokenType || AuthenticationScheme.BEARER,\n    };\n    if (userAssertionHash) {\n        atEntity.userAssertionHash = userAssertionHash;\n    }\n    if (refreshOn) {\n        atEntity.refreshOn = refreshOn.toString();\n    }\n    if (requestedClaims) {\n        atEntity.requestedClaims = requestedClaims;\n        atEntity.requestedClaimsHash = requestedClaimsHash;\n    }\n    /*\n     * Create Access Token With Auth Scheme instead of regular access token\n     * Cast to lower to handle \"bearer\" from ADFS\n     */\n    if (atEntity.tokenType?.toLowerCase() !==\n        AuthenticationScheme.BEARER.toLowerCase()) {\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        switch (atEntity.tokenType) {\n            case AuthenticationScheme.POP:\n                // Make sure keyId is present and add it to credential\n                const tokenClaims = extractTokenClaims(accessToken, base64Decode);\n                if (!tokenClaims?.cnf?.kid) {\n                    throw createClientAuthError(tokenClaimsCnfRequiredForSignedJwt);\n                }\n                atEntity.keyId = tokenClaims.cnf.kid;\n                break;\n            case AuthenticationScheme.SSH:\n                atEntity.keyId = keyId;\n        }\n    }\n    return atEntity;\n}\n/**\n * Create RefreshTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nfunction createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {\n    const rtEntity = {\n        credentialType: CredentialType.REFRESH_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: refreshToken,\n    };\n    if (userAssertionHash) {\n        rtEntity.userAssertionHash = userAssertionHash;\n    }\n    if (familyId) {\n        rtEntity.familyId = familyId;\n    }\n    if (expiresOn) {\n        rtEntity.expiresOn = expiresOn.toString();\n    }\n    return rtEntity;\n}\nfunction isCredentialEntity(entity) {\n    return (entity.hasOwnProperty(\"homeAccountId\") &&\n        entity.hasOwnProperty(\"environment\") &&\n        entity.hasOwnProperty(\"credentialType\") &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"secret\"));\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isAccessTokenEntity(entity) {\n    if (!entity) {\n        return false;\n    }\n    return (isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity.hasOwnProperty(\"target\") &&\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\n            entity[\"credentialType\"] ===\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isIdTokenEntity(entity) {\n    if (!entity) {\n        return false;\n    }\n    return (isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN);\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isRefreshTokenEntity(entity) {\n    if (!entity) {\n        return false;\n    }\n    return (isCredentialEntity(entity) &&\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN);\n}\n/**\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n */\nfunction generateAccountId(credentialEntity) {\n    const accountId = [\n        credentialEntity.homeAccountId,\n        credentialEntity.environment,\n    ];\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n/**\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n */\nfunction generateCredentialId(credentialEntity) {\n    const clientOrFamilyId = credentialEntity.credentialType === CredentialType.REFRESH_TOKEN\n        ? credentialEntity.familyId || credentialEntity.clientId\n        : credentialEntity.clientId;\n    const credentialId = [\n        credentialEntity.credentialType,\n        clientOrFamilyId,\n        credentialEntity.realm || \"\",\n    ];\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n/**\n * Generate target key component as per schema: <target>\n */\nfunction generateTarget(credentialEntity) {\n    return (credentialEntity.target || \"\").toLowerCase();\n}\n/**\n * Generate requested claims key component as per schema: <requestedClaims>\n */\nfunction generateClaimsHash(credentialEntity) {\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\n}\n/**\n * Generate scheme key componenet as per schema: <scheme>\n */\nfunction generateScheme(credentialEntity) {\n    /*\n     * PoP Tokens and SSH certs include scheme in cache key\n     * Cast to lowercase to handle \"bearer\" from ADFS\n     */\n    return credentialEntity.tokenType &&\n        credentialEntity.tokenType.toLowerCase() !==\n            AuthenticationScheme.BEARER.toLowerCase()\n        ? credentialEntity.tokenType.toLowerCase()\n        : \"\";\n}\n/**\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\n * @param key\n * @param entity\n */\nfunction isServerTelemetryEntity(key, entity) {\n    const validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    let validateEntity = true;\n    if (entity) {\n        validateEntity =\n            entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n    }\n    return validateKey && validateEntity;\n}\n/**\n * validates if a given cache entry is \"Throttling\", parses <key,value>\n * @param key\n * @param entity\n */\nfunction isThrottlingEntity(key, entity) {\n    let validateKey = false;\n    if (key) {\n        validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n    let validateEntity = true;\n    if (entity) {\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n    return validateKey && validateEntity;\n}\n/**\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n */\nfunction generateAppMetadataKey({ environment, clientId, }) {\n    const appMetaDataKeyArray = [\n        APP_METADATA,\n        environment,\n        clientId,\n    ];\n    return appMetaDataKeyArray\n        .join(Separators.CACHE_KEY_SEPARATOR)\n        .toLowerCase();\n}\n/*\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isAppMetadataEntity(key, entity) {\n    if (!entity) {\n        return false;\n    }\n    return (key.indexOf(APP_METADATA) === 0 &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"environment\"));\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isAuthorityMetadataEntity(key, entity) {\n    if (!entity) {\n        return false;\n    }\n    return (key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n        entity.hasOwnProperty(\"aliases\") &&\n        entity.hasOwnProperty(\"preferred_cache\") &&\n        entity.hasOwnProperty(\"preferred_network\") &&\n        entity.hasOwnProperty(\"canonical_authority\") &&\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\n        entity.hasOwnProperty(\"token_endpoint\") &&\n        entity.hasOwnProperty(\"issuer\") &&\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n        entity.hasOwnProperty(\"expiresAt\") &&\n        entity.hasOwnProperty(\"jwks_uri\"));\n}\n/**\n * Reset the exiresAt value\n */\nfunction generateAuthorityMetadataExpiresAt() {\n    return (TimeUtils.nowSeconds() +\n        AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS);\n}\nfunction updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {\n    authorityMetadata.authorization_endpoint =\n        updatedValues.authorization_endpoint;\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\n    authorityMetadata.issuer = updatedValues.issuer;\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\n}\nfunction updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {\n    authorityMetadata.aliases = updatedValues.aliases;\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\n}\n/**\n * Returns whether or not the data needs to be refreshed\n */\nfunction isAuthorityMetadataExpired(metadata) {\n    return metadata.expiresAt <= TimeUtils.nowSeconds();\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst redirectUriEmpty = \"redirect_uri_empty\";\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\nconst authorityUriInsecure = \"authority_uri_insecure\";\nconst urlParseError = \"url_parse_error\";\nconst urlEmptyError = \"empty_url_error\";\nconst emptyInputScopesError = \"empty_input_scopes_error\";\nconst invalidPromptValue = \"invalid_prompt_value\";\nconst invalidClaims = \"invalid_claims\";\nconst tokenRequestEmpty = \"token_request_empty\";\nconst logoutRequestEmpty = \"logout_request_empty\";\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nconst pkceParamsMissing = \"pkce_params_missing\";\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\nconst untrustedAuthority = \"untrusted_authority\";\nconst missingSshJwk = \"missing_ssh_jwk\";\nconst missingSshKid = \"missing_ssh_kid\";\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nconst cannotAllowNativeBroker = \"cannot_allow_native_broker\";\nconst authorityMismatch = \"authority_mismatch\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ClientConfigurationErrorMessages = {\n    [redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\n    [claimsRequestParsingError]: \"Could not parse the given claims request object.\",\n    [authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [urlParseError]: \"URL could not be parsed into appropriate segments.\",\n    [urlEmptyError]: \"URL was empty or null.\",\n    [emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [invalidPromptValue]: \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\n    [tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\n    [logoutRequestEmpty]: \"The logout request was null or undefined.\",\n    [invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [invalidAuthenticationHeader]: \"Invalid authentication header provided\",\n    [cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [cannotAllowNativeBroker]: \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    [authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nclass ClientConfigurationError extends AuthError {\n    constructor(errorCode) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\nfunction createClientConfigurationError(errorCode) {\n    return new ClientConfigurationError(errorCode);\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * @hidden\n */\nclass StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj) {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            }\n            catch (e) { }\n        }\n        return true;\n    }\n    static startsWith(str, search) {\n        return str.indexOf(search) === 0;\n    }\n    static endsWith(str, search) {\n        return (str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length);\n    }\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject(query) {\n        const obj = {};\n        const params = query.split(\"&\");\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj;\n    }\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr) {\n        return arr.map((entry) => entry.trim());\n    }\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr) {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper(str) {\n        try {\n            return JSON.parse(str);\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern, input) {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex = new RegExp(pattern\n            .replace(/\\\\/g, \"\\\\\\\\\")\n            .replace(/\\*/g, \"[^ ]*\")\n            .replace(/\\?/g, \"\\\\?\"));\n        return regex.test(input);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nclass ScopeSet {\n    constructor(inputScopes) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString) {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString) {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        }\n        else {\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return scopeSet;\n    }\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    validateInputScopes(inputScopes) {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw createClientConfigurationError(emptyInputScopesError);\n        }\n    }\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope) {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet) {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n        return (this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\n    }\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes() {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n        return this.scopes.size === defaultScopeCount;\n    }\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope) {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes) {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        }\n        catch (e) {\n            throw createClientAuthError(cannotAppendScopeSet);\n        }\n    }\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope) {\n        if (!scope) {\n            throw createClientAuthError(cannotRemoveEmptyScope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes() {\n        OIDC_SCOPES.forEach((defaultScope) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw createClientAuthError(emptyInputScopeSet);\n        }\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw createClientAuthError(emptyInputScopeSet);\n        }\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount() {\n        return this.scopes.size;\n    }\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray() {\n        const array = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes() {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase() {\n        return this.printScopes().toLowerCase();\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nfunction buildClientInfo(rawClientInfo, base64Decode) {\n    if (!rawClientInfo) {\n        throw createClientAuthError(clientInfoEmptyError);\n    }\n    try {\n        const decodedClientInfo = base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo);\n    }\n    catch (e) {\n        throw createClientAuthError(clientInfoDecodingError);\n    }\n}\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n    if (!homeAccountId) {\n        throw createClientAuthError(clientInfoDecodingError);\n    }\n    const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2\n            ? Constants.EMPTY_STRING\n            : clientInfoParts[1],\n    };\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Returns true if tenantId matches the utid portion of homeAccountId\n * @param tenantId\n * @param homeAccountId\n * @returns\n */\nfunction tenantIdMatchesHomeTenant(tenantId, homeAccountId) {\n    return (!!tenantId &&\n        !!homeAccountId &&\n        tenantId === homeAccountId.split(\".\")[1]);\n}\nfunction buildTenantProfileFromIdTokenClaims(homeAccountId, idTokenClaims) {\n    const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\n    /**\n     * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\n     * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\n     * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\n     * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\n     */\n    const tenantId = tid || tfp || acr || \"\";\n    return {\n        tenantId: tenantId,\n        localAccountId: oid || sub || \"\",\n        name: name,\n        isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n    };\n}\n/**\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\n * @param baseAccountInfo\n * @param idTokenClaims\n * @returns\n */\nfunction updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims) {\n    let updatedAccountInfo = baseAccountInfo;\n    // Tenant Profile overrides passed in account info\n    if (tenantProfile) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\n    }\n    // ID token claims override passed in account info and tenant profile\n    if (idTokenClaims) {\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfileFromIdTokenClaims(baseAccountInfo.homeAccountId, idTokenClaims);\n        updatedAccountInfo = {\n            ...updatedAccountInfo,\n            ...claimsSourcedTenantProfile,\n            idTokenClaims: idTokenClaims,\n        };\n        return updatedAccountInfo;\n    }\n    return updatedAccountInfo;\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Authority types supported by MSAL.\n */\nconst AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\n * Downcased to match the realm case-insensitive comparison requirements\n * @param idTokenClaims\n * @returns\n */\nfunction getTenantIdFromIdTokenClaims(idTokenClaims) {\n    if (idTokenClaims) {\n        const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\n        return tenantId || null;\n    }\n    return null;\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Protocol modes supported by MSAL.\n */\nconst ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      nativeAccountId: Account identifier on the native device\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\n * }\n * @internal\n */\nclass AccountEntity {\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId() {\n        const accountId = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey() {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo() {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n            // Deserialize tenant profiles array into a Map\n            tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {\n                return [tenantProfile.tenantId, tenantProfile];\n            })),\n        };\n    }\n    /**\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\n     */\n    isSingleTenant() {\n        return !this.tenantProfiles;\n    }\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface) {\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || \"\",\n            homeTenantId || accountInterface.tenantId || \"\",\n        ];\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(accountDetails, authority, base64Decode) {\n        const account = new AccountEntity();\n        if (authority.authorityType === AuthorityType.Adfs) {\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n        }\n        else if (authority.protocolMode === ProtocolMode.AAD) {\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        }\n        else {\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n        let clientInfo;\n        if (accountDetails.clientInfo && base64Decode) {\n            clientInfo = buildClientInfo(accountDetails.clientInfo, base64Decode);\n        }\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n        const env = accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n        if (!env) {\n            throw createClientAuthError(invalidCacheEnvironment);\n        }\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            clientInfo?.utid ||\n                getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) ||\n                \"\";\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            clientInfo?.uid ||\n                accountDetails.idTokenClaims.oid ||\n                accountDetails.idTokenClaims.sub ||\n                \"\";\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername = accountDetails.idTokenClaims.preferred_username ||\n            accountDetails.idTokenClaims.upn;\n        const email = accountDetails.idTokenClaims.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n        account.username = preferredUsername || email || \"\";\n        account.name = accountDetails.idTokenClaims.name;\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n        if (accountDetails.tenantProfiles) {\n            account.tenantProfiles = accountDetails.tenantProfiles;\n        }\n        else {\n            const tenantProfiles = [];\n            if (accountDetails.idTokenClaims) {\n                const tenantProfile = buildTenantProfileFromIdTokenClaims(accountDetails.homeAccountId, accountDetails.idTokenClaims);\n                tenantProfiles.push(tenantProfile);\n            }\n            account.tenantProfiles = tenantProfiles;\n        }\n        return account;\n    }\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\n        const account = new AccountEntity();\n        account.authorityType =\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n        // Serialize tenant profiles map into an array\n        account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);\n        return account;\n    }\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\n        // since ADFS/DSTS do not have tid and does not set client_info\n        if (!(authType === AuthorityType.Adfs ||\n            authType === AuthorityType.Dsts)) {\n            // for cases where there is clientInfo\n            if (serverClientInfo) {\n                try {\n                    const clientInfo = buildClientInfo(serverClientInfo, cryptoObj.base64Decode);\n                    if (clientInfo.uid && clientInfo.utid) {\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\n                    }\n                }\n                catch (e) { }\n            }\n            logger.warning(\"No client info in response\");\n        }\n        // default to \"sub\" claim\n        return idTokenClaims?.sub || \"\";\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\"));\n    }\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\n        if (!accountA || !accountB) {\n            return false;\n        }\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {});\n            const accountBClaims = (accountB.idTokenClaims ||\n                {});\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                    accountAClaims.nonce === accountBClaims.nonce;\n        }\n        return (accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\n * @param hashString\n */\nfunction stripLeadingHashOrQuery(responseString) {\n    if (responseString.startsWith(\"#/\")) {\n        return responseString.substring(2);\n    }\n    else if (responseString.startsWith(\"#\") ||\n        responseString.startsWith(\"?\")) {\n        return responseString.substring(1);\n    }\n    return responseString;\n}\n/**\n * Returns URL hash as server auth code response object.\n */\nfunction getDeserializedResponse(responseString) {\n    // Check if given hash is empty\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\n        return null;\n    }\n    try {\n        // Strip the # or ? symbol if present\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\n        // Check for known response properties\n        if (deserializedHash.code ||\n            deserializedHash.error ||\n            deserializedHash.error_description ||\n            deserializedHash.state) {\n            return deserializedHash;\n        }\n    }\n    catch (e) {\n        throw createClientAuthError(hashNotDeserialized);\n    }\n    return null;\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Url object class which can perform various transformations on url strings.\n */\nclass UrlString {\n    get urlString() {\n        return this._urlString;\n    }\n    constructor(url) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw createClientConfigurationError(urlEmptyError);\n        }\n        if (!url.includes(\"#\")) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url) {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            }\n            else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n            return lowerCaseUrl;\n        }\n        return url;\n    }\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri() {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        }\n        catch (e) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        // Throw error if uri is insecure.\n        if (!components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\") {\n            throw createClientConfigurationError(authorityUriInsecure);\n        }\n    }\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url, queryString) {\n        if (!queryString) {\n            return url;\n        }\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url) {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId) {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents() {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        };\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n        if (urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\n        }\n        return urlComponents;\n    }\n    static getDomainFromUrl(url) {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n        const match = url.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(urlParseError);\n        }\n        return match[2];\n    }\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n            return (baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl);\n        }\n        return relativeUrl;\n    }\n    static constructAuthorityUriFromObject(urlObject) {\n        return new UrlString(urlObject.Protocol +\n            \"//\" +\n            urlObject.HostNameAndPort +\n            \"/\" +\n            urlObject.PathSegments.join(\"/\"));\n    }\n    /**\n     * Check if the hash of the URL string contains known properties\n     * @deprecated This API will be removed in a future version\n     */\n    static hashContainsKnownProperties(response) {\n        return !!getDeserializedResponse(response);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst rawMetdataJSON = {\n    endpointMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            token_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            token_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            token_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            token_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            token_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.com/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            token_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri: \"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint: \"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.microsoftonline.us/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        tenant_discovery_endpoint: \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\n        \"api-version\": \"1.1\",\n        metadata: [\n            {\n                preferred_network: \"login.microsoftonline.com\",\n                preferred_cache: \"login.windows.net\",\n                aliases: [\n                    \"login.microsoftonline.com\",\n                    \"login.windows.net\",\n                    \"login.microsoft.com\",\n                    \"sts.windows.net\",\n                ],\n            },\n            {\n                preferred_network: \"login.partner.microsoftonline.cn\",\n                preferred_cache: \"login.partner.microsoftonline.cn\",\n                aliases: [\n                    \"login.partner.microsoftonline.cn\",\n                    \"login.chinacloudapi.cn\",\n                ],\n            },\n            {\n                preferred_network: \"login.microsoftonline.de\",\n                preferred_cache: \"login.microsoftonline.de\",\n                aliases: [\"login.microsoftonline.de\"],\n            },\n            {\n                preferred_network: \"login.microsoftonline.us\",\n                preferred_cache: \"login.microsoftonline.us\",\n                aliases: [\n                    \"login.microsoftonline.us\",\n                    \"login.usgovcloudapi.net\",\n                ],\n            },\n            {\n                preferred_network: \"login-us.microsoftonline.com\",\n                preferred_cache: \"login-us.microsoftonline.com\",\n                aliases: [\"login-us.microsoftonline.com\"],\n            },\n        ],\n    },\n};\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\nconst InstanceDiscoveryMetadataAliases = new Set();\nInstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {\n    metadataEntry.aliases.forEach((alias) => {\n        InstanceDiscoveryMetadataAliases.add(alias);\n    });\n});\n/**\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\n * @param staticAuthorityOptions\n * @param logger\n * @returns\n */\nfunction getAliasesFromStaticSources(staticAuthorityOptions, logger) {\n    let staticAliases;\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\n    if (canonicalAuthority) {\n        const authorityHost = new UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;\n        staticAliases =\n            getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, AuthorityMetadataSource.CONFIG, logger) ||\n                getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, AuthorityMetadataSource.HARDCODED_VALUES, logger) ||\n                staticAuthorityOptions.knownAuthorities;\n    }\n    return staticAliases || [];\n}\n/**\n * Returns aliases for from the raw cloud discovery metadata passed in\n * @param authorityHost\n * @param rawCloudDiscoveryMetadata\n * @returns\n */\nfunction getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\n    if (authorityHost && cloudDiscoveryMetadata) {\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);\n        if (metadata) {\n            logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);\n            return metadata.aliases;\n        }\n        else {\n            logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);\n        }\n    }\n    return null;\n}\n/**\n * Get cloud discovery metadata for common authorities\n */\nfunction getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);\n    return metadata;\n}\n/**\n * Searches instance discovery network response for the entry that contains the host in the aliases list\n * @param response\n * @param authority\n */\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {\n    for (let i = 0; i < response.length; i++) {\n        const metadata = response[i];\n        if (metadata.aliases.includes(authorityHost)) {\n            return metadata;\n        }\n    }\n    return null;\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nclass CacheManager {\n    constructor(clientId, cryptoImpl, logger, staticAuthorityOptions) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(name$3, version$4);\n        this.staticAuthorityOptions = staticAuthorityOptions;\n    }\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter || {}), accountFilter);\n    }\n    /**\n     * Gets first tenanted AccountInfo object found based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter) {\n        const allAccounts = this.getAllAccounts(accountFilter);\n        if (allAccounts.length > 1) {\n            // If one or more accounts are found, prioritize accounts that have an ID token\n            const sortedAccounts = allAccounts.sort((account) => {\n                return account.idTokenClaims ? -1 : 1;\n            });\n            return sortedAccounts[0];\n        }\n        else if (allAccounts.length === 1) {\n            // If only one account is found, return it regardless of whether a matching ID token was found\n            return allAccounts[0];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Returns a single matching\n     * @param accountFilter\n     * @returns\n     */\n    getBaseAccountInfo(accountFilter) {\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\n        if (accountEntities.length > 0) {\n            return accountEntities[0].getAccountInfo();\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\n     * and builds the account info objects from the matching ID token's claims\n     * @param cachedAccounts\n     * @param accountFilter\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\n     */\n    buildTenantProfiles(cachedAccounts, accountFilter) {\n        return cachedAccounts.flatMap((accountEntity) => {\n            return this.getAccountInfoForTenantProfiles(accountEntity, accountFilter);\n        });\n    }\n    getAccountInfoForTenantProfiles(accountEntity, accountFilter) {\n        return this.getTenantProfilesFromAccountEntity(accountEntity, accountFilter?.tenantId, accountFilter);\n    }\n    getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter) {\n        let tenantedAccountInfo = null;\n        let idTokenClaims;\n        if (tenantProfileFilter) {\n            if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {\n                return null;\n            }\n        }\n        const idToken = this.getIdToken(accountInfo, tokenKeys, tenantProfile.tenantId);\n        if (idToken) {\n            idTokenClaims = extractTokenClaims(idToken.secret, this.cryptoImpl.base64Decode);\n            if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {\n                // ID token sourced claims don't match so this tenant profile is not a match\n                return null;\n            }\n        }\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\n        tenantedAccountInfo = updateAccountTenantProfileData(accountInfo, tenantProfile, idTokenClaims);\n        return tenantedAccountInfo;\n    }\n    getTenantProfilesFromAccountEntity(accountEntity, targetTenantId, tenantProfileFilter) {\n        const accountInfo = accountEntity.getAccountInfo();\n        let searchTenantProfiles = accountInfo.tenantProfiles || new Map();\n        const tokenKeys = this.getTokenKeys();\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\n        if (targetTenantId) {\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\n            if (tenantProfile) {\n                // Reduce search field to just this tenant profile\n                searchTenantProfiles = new Map([\n                    [targetTenantId, tenantProfile],\n                ]);\n            }\n            else {\n                // No tenant profile for search tenant ID, return empty array\n                return [];\n            }\n        }\n        const matchingTenantProfiles = [];\n        searchTenantProfiles.forEach((tenantProfile) => {\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter);\n            if (tenantedAccountInfo) {\n                matchingTenantProfiles.push(tenantedAccountInfo);\n            }\n        });\n        return matchingTenantProfiles;\n    }\n    tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {\n        if (!!tenantProfileFilter.localAccountId &&\n            !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {\n            return false;\n        }\n        if (!!tenantProfileFilter.name &&\n            !(tenantProfile.name === tenantProfileFilter.name)) {\n            return false;\n        }\n        if (tenantProfileFilter.isHomeTenant !== undefined &&\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {\n            return false;\n        }\n        return true;\n    }\n    idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {\n        // Tenant Profile filtering\n        if (tenantProfileFilter) {\n            if (!!tenantProfileFilter.localAccountId &&\n                !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.loginHint &&\n                !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.username &&\n                !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.name &&\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.sid &&\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(cacheRecord, storeInCache) {\n        if (!cacheRecord) {\n            throw createClientAuthError(invalidCacheRecord);\n        }\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n        if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n        if (!!cacheRecord.accessToken && storeInCache?.accessToken !== false) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n        if (!!cacheRecord.refreshToken &&\n            storeInCache?.refreshToken !== false) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    async saveAccessToken(credential) {\n        const accessTokenFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = ScopeSet.fromString(credential.target);\n        const removedAccessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\n                return;\n            }\n            const tokenEntity = this.getAccessTokenCredential(key);\n            if (tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n    /**\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter) {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n            const entity = this.getAccount(cacheKey, this.commonLogger);\n            // Match base account fields\n            if (!entity) {\n                return;\n            }\n            if (!!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.username &&\n                !this.matchUsername(entity.username, accountFilter.username)) {\n                return;\n            }\n            if (!!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)) {\n                return;\n            }\n            if (!!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)) {\n                return;\n            }\n            if (!!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\n                return;\n            }\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\n            const tenantProfileFilter = {\n                localAccountId: accountFilter?.localAccountId,\n                name: accountFilter?.name,\n            };\n            const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {\n                return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);\n            });\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\n                return;\n            }\n            matchingAccounts.push(entity);\n        });\n        return matchingAccounts;\n    }\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(key, homeAccountId, tenantId) {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        if (homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\n            return false;\n        }\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n        // Do not check environment as aliasing can cause false negatives\n        return true;\n    }\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key) {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\n            -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1) {\n            return false;\n        }\n        if (lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\n                return false;\n            }\n        }\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(entity, filter) {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n        if (!!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\n            return false;\n        }\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\n            return false;\n        }\n        if (!!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)) {\n            return false;\n        }\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n        if (!!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)) {\n            return false;\n        }\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n        // Access Token with Auth Scheme specific matching\n        if (entity.credentialType ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n            if (!!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)) {\n                return false;\n            }\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter) {\n        return this.getAppMetadataFilteredByInternal(filter.environment, filter.clientId);\n    }\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    getAppMetadataFilteredByInternal(environment, clientId) {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata = {};\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n            matchingAppMetadata[cacheKey] = entity;\n        });\n        return matchingAppMetadata;\n    }\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host) {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n            matchedEntity = entity;\n        });\n        return matchedEntity;\n    }\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts() {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n        await Promise.all(removedAccounts);\n    }\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey) {\n        const account = this.getAccount(accountKey, this.commonLogger);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account) {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials = [];\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n        await Promise.all(removedCredentials);\n    }\n    /**\n     * Migrates a single-tenant account and all it's associated alternate cross-tenant account objects in the\n     * cache into a condensed multi-tenant account object with tenant profiles.\n     * @param accountKey\n     * @param accountEntity\n     * @param logger\n     * @returns\n     */\n    updateOutdatedCachedAccount(accountKey, accountEntity, logger) {\n        // Only update if account entity is defined and has no tenantProfiles object (is outdated)\n        if (accountEntity && accountEntity.isSingleTenant()) {\n            this.commonLogger?.verbose(\"updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity\");\n            // Get keys of all accounts belonging to user\n            const matchingAccountKeys = this.getAccountKeys().filter((key) => {\n                return key.startsWith(accountEntity.homeAccountId);\n            });\n            // Get all account entities belonging to user\n            const accountsToMerge = [];\n            matchingAccountKeys.forEach((key) => {\n                const account = this.getCachedAccountEntity(key);\n                if (account) {\n                    accountsToMerge.push(account);\n                }\n            });\n            // Set base account to home account if available, any account if not\n            const baseAccount = accountsToMerge.find((account) => {\n                return tenantIdMatchesHomeTenant(account.realm, account.homeAccountId);\n            }) || accountsToMerge[0];\n            // Populate tenant profiles built from each account entity belonging to the user\n            baseAccount.tenantProfiles = accountsToMerge.map((account) => {\n                return {\n                    tenantId: account.realm,\n                    localAccountId: account.localAccountId,\n                    name: account.name,\n                    isHomeTenant: tenantIdMatchesHomeTenant(account.realm, account.homeAccountId),\n                };\n            });\n            const updatedAccount = CacheManager.toObject(new AccountEntity(), {\n                ...baseAccount,\n            });\n            const newAccountKey = updatedAccount.generateAccountKey();\n            // Clear cache of legacy account objects that have been collpsed into tenant profiles\n            matchingAccountKeys.forEach((key) => {\n                if (key !== newAccountKey) {\n                    this.removeOutdatedAccount(accountKey);\n                }\n            });\n            // Cache updated account object\n            this.setAccount(updatedAccount);\n            logger?.verbose(\"Updated an outdated account entity in the cache\");\n            return updatedAccount;\n        }\n        // No update is necessary\n        return accountEntity;\n    }\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key) {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if (credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    }\n                    catch (error) {\n                        throw createClientAuthError(bindingKeyNotRemoved);\n                    }\n                }\n            }\n        }\n        return this.removeItem(key);\n    }\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata() {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        return true;\n    }\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account) {\n        const accountKey = AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey, this.commonLogger);\n    }\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param tokenKeys {?TokenKeys}\n     * @param targetRealm {?string}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getIdToken(account, tokenKeys, targetRealm, performanceClient, correlationId) {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: targetRealm,\n        };\n        const idTokenMap = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\n        const numIdTokens = idTokenMap.size;\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        }\n        else if (numIdTokens > 1) {\n            let tokensToBeRemoved = idTokenMap;\n            // Multiple tenant profiles and no tenant specified, pick home account\n            if (!targetRealm) {\n                const homeIdTokenMap = new Map();\n                idTokenMap.forEach((idToken, key) => {\n                    if (idToken.realm === account.tenantId) {\n                        homeIdTokenMap.set(key, idToken);\n                    }\n                });\n                const numHomeIdTokens = homeIdTokenMap.size;\n                if (numHomeIdTokens < 1) {\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\");\n                    return idTokenMap.values().next().value;\n                }\n                else if (numHomeIdTokens === 1) {\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\");\n                    return homeIdTokenMap.values().next().value;\n                }\n                else {\n                    // Multiple ID tokens for home tenant profile, remove all and return null\n                    tokensToBeRemoved = homeIdTokenMap;\n                }\n            }\n            // Multiple tokens for a single tenant profile, remove all and return null\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\");\n            tokensToBeRemoved.forEach((idToken, key) => {\n                this.removeIdToken(key);\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);\n            }\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\n        return idTokenMap.values().next().value;\n    }\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(filter, tokenKeys) {\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n        const idTokens = new Map();\n        idTokenKeys.forEach((key) => {\n            if (!this.idTokenKeyMatchesFilter(key, {\n                clientId: this.clientId,\n                ...filter,\n            })) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.set(key, idToken);\n            }\n        });\n        return idTokens;\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param request {BaseAuthRequest}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getAccessToken(account, request, tokenKeys, targetRealm, performanceClient, correlationId) {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = authScheme &&\n            authScheme.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n            ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n            : CredentialType.ACCESS_TOKEN;\n        const accessTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: targetRealm || account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens = [];\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\n                const accessToken = this.getAccessTokenCredential(key);\n                // Validate value\n                if (accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\n            return null;\n        }\n        else if (numAccessTokens > 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken(generateCredentialKey(accessToken));\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);\n            }\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\n        return accessTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                }\n                else if (!keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter) {\n        const tokenKeys = this.getTokenKeys();\n        const accessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n            const accessToken = this.getAccessTokenCredential(key);\n            if (accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)) {\n                accessTokens.push(accessToken);\n            }\n        });\n        return accessTokens;\n    }\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param account {AccountInfo}\n     * @param familyRT {boolean}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getRefreshToken(account, familyRT, tokenKeys, performanceClient, correlationId) {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens = [];\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (refreshToken &&\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\n            performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);\n        }\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\n        return refreshTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\n            return false;\n        }\n        // If familyId is used, clientId is not in the key\n        if (!filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment) {\n        const appMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        }\n        else if (numAppMetadata > 1) {\n            throw createClientAuthError(multipleMatchingAppMetadata);\n        }\n        return appMetadataEntries[0];\n    }\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment) {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    matchHomeAccountId(entity, homeAccountId) {\n        return !!(typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId);\n    }\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\n        return localAccountId === idTokenLocalAccountId;\n    }\n    matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {\n        return tenantProfile.localAccountId === localAccountId;\n    }\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    matchName(claims, name) {\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\n    }\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    matchUsername(cachedUsername, filterUsername) {\n        return !!(cachedUsername &&\n            typeof cachedUsername === \"string\" &&\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase());\n    }\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    matchUserAssertionHash(entity, userAssertionHash) {\n        return !!(entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash);\n    }\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    matchEnvironment(entity, environment) {\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\n        if (this.staticAuthorityOptions) {\n            const staticAliases = getAliasesFromStaticSources(this.staticAuthorityOptions, this.commonLogger);\n            if (staticAliases.includes(environment) &&\n                staticAliases.includes(entity.environment)) {\n                return true;\n            }\n        }\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    matchCredentialType(entity, credentialType) {\n        return (entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    matchClientId(entity, clientId) {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    matchFamilyId(entity, familyId) {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    matchRealm(entity, realm) {\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\n    }\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    matchNativeAccountId(entity, nativeAccountId) {\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\n    }\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    matchLoginHintFromTokenClaims(tokenClaims, loginHint) {\n        if (tokenClaims.login_hint === loginHint) {\n            return true;\n        }\n        if (tokenClaims.preferred_username === loginHint) {\n            return true;\n        }\n        if (tokenClaims.upn === loginHint) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Helper to match sid\n     * @param entity\n     * @param sid\n     * @returns true if the sid claim is present and matches the filter\n     */\n    matchSid(idTokenClaims, sid) {\n        return idTokenClaims.sid === sid;\n    }\n    matchAuthorityType(entity, authorityType) {\n        return !!(entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\n    }\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    matchTarget(entity, target) {\n        const isNotAccessTokenCredential = entity.credentialType !== CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n        const entityScopeSet = ScopeSet.fromString(entity.target);\n        return entityScopeSet.containsScopeSet(target);\n    }\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchTokenType(entity, tokenType) {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchKeyId(entity, keyId) {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    isAppMetadata(key) {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    isAuthorityMetadata(key) {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority) {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject(obj, json) {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n/** @internal */\nclass DefaultStorageClass extends CacheManager {\n    setAccount() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAccount() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getCachedAccountEntity() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setIdTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getIdTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setAccessTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAccessTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setRefreshTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getRefreshTokenCredential() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setAppMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAppMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setServerTelemetry() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getServerTelemetry() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setAuthorityMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAuthorityMetadata() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAuthorityMetadataKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    setThrottlingCache() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getThrottlingCache() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    removeItem() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    containsKey() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getAccountKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    getTokenKeys() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    async clear() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    updateCredentialCacheKey() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n    removeOutdatedAccount() {\n        throw createClientAuthError(methodNotImplemented);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nconst DEFAULT_SYSTEM_OPTIONS = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING,\n};\nconst DEFAULT_CACHE_OPTIONS = {\n    claimsBasedCachingEnabled: false,\n};\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\n    async sendGetRequestAsync() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n    async sendPostRequestAsync() {\n        throw createClientAuthError(methodNotImplemented);\n    },\n};\nconst DEFAULT_LIBRARY_INFO = {\n    sku: Constants.SKU,\n    version: version$4,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING,\n};\nconst DEFAULT_CLIENT_CREDENTIALS = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\n};\nconst DEFAULT_TELEMETRY_OPTIONS = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface: storageImplementation ||\n            new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions) {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nfunction isOidcProtocolMode(config) {\n    return (config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC);\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nclass ServerError extends AuthError {\n    constructor(errorCode, errorMessage, subError) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint) {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager, thumbprint) {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager, thumbprint, response) {\n        if (ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\n        }\n    }\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response) {\n        return (response.status === 429 ||\n            (response.status >= 500 && response.status < 600));\n    }\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response) {\n        if (response.headers) {\n            return (response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300));\n        }\n        return false;\n    }\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime) {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(currentSeconds +\n            (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\n            ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\n    }\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\n        const thumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass NetworkManager {\n    constructor(networkClient, cacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest(thumbprint, tokenEndpoint, options) {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            }\n            else {\n                throw createClientAuthError(networkError);\n            }\n        }\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n        return response;\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CLIENT_ID = \"client_id\";\nconst REDIRECT_URI = \"redirect_uri\";\nconst RESPONSE_TYPE = \"response_type\";\nconst RESPONSE_MODE = \"response_mode\";\nconst GRANT_TYPE = \"grant_type\";\nconst CLAIMS = \"claims\";\nconst SCOPE = \"scope\";\nconst REFRESH_TOKEN = \"refresh_token\";\nconst STATE = \"state\";\nconst NONCE = \"nonce\";\nconst PROMPT = \"prompt\";\nconst CODE = \"code\";\nconst CODE_CHALLENGE = \"code_challenge\";\nconst CODE_CHALLENGE_METHOD = \"code_challenge_method\";\nconst CODE_VERIFIER = \"code_verifier\";\nconst CLIENT_REQUEST_ID = \"client-request-id\";\nconst X_CLIENT_SKU = \"x-client-SKU\";\nconst X_CLIENT_VER = \"x-client-VER\";\nconst X_CLIENT_OS = \"x-client-OS\";\nconst X_CLIENT_CPU = \"x-client-CPU\";\nconst X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\nconst X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\nconst X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\nconst X_APP_NAME = \"x-app-name\";\nconst X_APP_VER = \"x-app-ver\";\nconst POST_LOGOUT_URI = \"post_logout_redirect_uri\";\nconst ID_TOKEN_HINT = \"id_token_hint\";\nconst DEVICE_CODE = \"device_code\";\nconst CLIENT_SECRET = \"client_secret\";\nconst CLIENT_ASSERTION = \"client_assertion\";\nconst CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\nconst TOKEN_TYPE = \"token_type\";\nconst REQ_CNF = \"req_cnf\";\nconst OBO_ASSERTION = \"assertion\";\nconst REQUESTED_TOKEN_USE = \"requested_token_use\";\nconst RETURN_SPA_CODE = \"return_spa_code\";\nconst NATIVE_BROKER = \"nativebroker\";\nconst LOGOUT_HINT = \"logout_hint\";\nconst SID = \"sid\";\nconst LOGIN_HINT = \"login_hint\";\nconst DOMAIN_HINT = \"domain_hint\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Validates server consumable params from the \"request\" objects\n */\nclass RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri) {\n        if (!redirectUri) {\n            throw createClientConfigurationError(redirectUriEmpty);\n        }\n    }\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt) {\n        const promptValues = [];\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n        if (promptValues.indexOf(prompt) < 0) {\n            throw createClientConfigurationError(invalidPromptValue);\n        }\n    }\n    static validateClaims(claims) {\n        try {\n            JSON.parse(claims);\n        }\n        catch (e) {\n            throw createClientConfigurationError(invalidClaims);\n        }\n    }\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw createClientConfigurationError(pkceParamsMissing);\n        }\n        else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod) {\n        if ([\n            CodeChallengeMethodValues.PLAIN,\n            CodeChallengeMethodValues.S256,\n        ].indexOf(codeChallengeMethod) < 0) {\n            throw createClientConfigurationError(invalidCodeChallengeMethod);\n        }\n    }\n    /**\n     * Removes unnecessary, duplicate, and empty string query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(eQParams, queryParams) {\n        if (!eQParams) {\n            return {};\n        }\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((_value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n        // remove empty string parameters\n        return Object.fromEntries(Object.entries(eQParams).filter((kv) => kv[1] !== \"\"));\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass RequestParameterBuilder {\n    constructor() {\n        this.parameters = new Map();\n    }\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode() {\n        this.parameters.set(RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\n    }\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken() {\n        this.parameters.set(RESPONSE_TYPE, encodeURIComponent(`${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`));\n    }\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode) {\n        this.parameters.set(RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY));\n    }\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker() {\n        this.parameters.set(NATIVE_BROKER, encodeURIComponent(\"1\"));\n    }\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes, addOidcScopes = true, defaultScopes = OIDC_DEFAULT_SCOPES) {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId) {\n        this.parameters.set(CLIENT_ID, encodeURIComponent(clientId));\n    }\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri) {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri) {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint) {\n        this.parameters.set(ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint) {\n        this.parameters.set(DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint) {\n        this.parameters.set(LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint) {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo) {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid) {\n        this.parameters.set(SID, encodeURIComponent(sid));\n    }\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims, clientCapabilities) {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(CLAIMS, encodeURIComponent(mergedClaims));\n    }\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId) {\n        this.parameters.set(CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo) {\n        // Telemetry Info\n        this.parameters.set(X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(X_CLIENT_VER, libraryInfo.version);\n        if (libraryInfo.os) {\n            this.parameters.set(X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(X_CLIENT_CPU, libraryInfo.cpu);\n        }\n    }\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry) {\n        if (appTelemetry?.appName) {\n            this.parameters.set(X_APP_NAME, appTelemetry.appName);\n        }\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(X_APP_VER, appTelemetry.appVersion);\n        }\n    }\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt) {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${PROMPT}`, encodeURIComponent(prompt));\n    }\n    /**\n     * add state\n     * @param state\n     */\n    addState(state) {\n        if (state) {\n            this.parameters.set(STATE, encodeURIComponent(state));\n        }\n    }\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce) {\n        this.parameters.set(NONCE, encodeURIComponent(nonce));\n    }\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        }\n        else {\n            throw createClientConfigurationError(pkceParamsMissing);\n        }\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code) {\n        this.parameters.set(CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code) {\n        this.parameters.set(DEVICE_CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken) {\n        this.parameters.set(REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier) {\n        this.parameters.set(CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret) {\n        this.parameters.set(CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion) {\n        if (clientAssertion) {\n            this.parameters.set(CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n        }\n    }\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType) {\n        if (clientAssertionType) {\n            this.parameters.set(CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n        }\n    }\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion) {\n        this.parameters.set(OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse) {\n        this.parameters.set(REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType) {\n        this.parameters.set(GRANT_TYPE, encodeURIComponent(grantType));\n    }\n    /**\n     * add client info\n     *\n     */\n    addClientInfo() {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams) {\n        const sanitizedEQParams = RequestValidator.sanitizeEQParams(eQParams, this.parameters);\n        Object.keys(sanitizedEQParams).forEach((key) => {\n            this.parameters.set(key, eQParams[key]);\n        });\n    }\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\n        let mergedClaims;\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        }\n        else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            }\n            catch (e) {\n                throw createClientConfigurationError(invalidClaims);\n            }\n        }\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities,\n            };\n        }\n        return JSON.stringify(mergedClaims);\n    }\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username) {\n        this.parameters.set(PasswordGrantConstants.username, encodeURIComponent(username));\n    }\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password) {\n        this.parameters.set(PasswordGrantConstants.password, encodeURIComponent(password));\n    }\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString) {\n        if (cnfString) {\n            this.parameters.set(TOKEN_TYPE, AuthenticationScheme.POP);\n            this.parameters.set(REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString) {\n        if (sshJwkString) {\n            this.parameters.set(TOKEN_TYPE, AuthenticationScheme.SSH);\n            this.parameters.set(REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager) {\n        this.parameters.set(X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling() {\n        this.parameters.set(X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint) {\n        this.parameters.set(LOGOUT_HINT, encodeURIComponent(logoutHint));\n    }\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString() {\n        const queryParameterArray = new Array();\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n        return queryParameterArray.join(\"&\");\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isOpenIdConfigResponse(response) {\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\"));\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryResponse(response) {\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\"));\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\n    return (response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\"));\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n    InitializeClientApplication: \"initializeClientApplication\",\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponse: \"handleCodeResponse\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    DeserializeResponse: \"deserializeResponse\",\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromiseMeasurement\",\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n    RemoveHiddenIframe: \"removeHiddenIframe\",\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n};\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\n    return (...args) => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        }\n        catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            }\n            catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            });\n            throw e;\n        }\n    };\n};\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\n    return (...args) => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n            logger.trace(`Returning result from ${eventName}`);\n            inProgressEvent?.end({\n                success: true,\n            });\n            return response;\n        })\n            .catch((e) => {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            }\n            catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            });\n            throw e;\n        });\n    };\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RegionDiscovery {\n    constructor(networkInterface, logger, performanceClient, correlationId) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n            try {\n                const localIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status ===\n                    ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        RegionDiscoverySources.IMDS;\n                }\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (localIMDSVersionResponse.status ===\n                    ResponseCodes.httpBadRequest) {\n                    const currentIMDSVersion = await invokeAsync(this.getCurrentVersion.bind(this), PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n                    const currentIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\n                    if (currentIMDSVersionResponse.status ===\n                        ResponseCodes.httpSuccess) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.IMDS;\n                    }\n                }\n            }\n            catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        }\n        else {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n        return autodetectedRegionName || null;\n    }\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    async getRegionFromIMDS(version, options) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\n        return this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, Constants.IMDS_TIMEOUT);\n    }\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    async getCurrentVersion(options) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?format=json`, options);\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n}\n// Options for the IMDS endpoint request\nRegionDiscovery.IMDS_OPTIONS = {\n    headers: {\n        Metadata: \"true\",\n    },\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nclass Authority {\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.regionDiscovery = new RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\n    }\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    getAuthorityType(authorityUri) {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            return AuthorityType.Ciam;\n        }\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case Constants.ADFS:\n                    return AuthorityType.Adfs;\n                case Constants.DSTS:\n                    return AuthorityType.Dsts;\n            }\n        }\n        return AuthorityType.Default;\n    }\n    // See above for AuthorityType\n    get authorityType() {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    get protocolMode() {\n        return this.authorityOptions.protocolMode;\n    }\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    get options() {\n        return this.authorityOptions;\n    }\n    /**\n     * A URL that is the authority set by the developer\n     */\n    get canonicalAuthority() {\n        return this._canonicalAuthority.urlString;\n    }\n    /**\n     * Sets canonical authority.\n     */\n    set canonicalAuthority(url) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n    /**\n     * Get authority components.\n     */\n    get canonicalAuthorityUrlComponents() {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n        return this._canonicalAuthorityUrlComponents;\n    }\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    get hostnameAndPort() {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n    /**\n     * Get tenant for authority.\n     */\n    get tenant() {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    get authorizationEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth /token endpoint for requests\n     */\n    get tokenEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    get deviceCodeEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth logout endpoint for requests\n     */\n    get endSessionEndpoint() {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw createClientAuthError(endSessionEndpointNotSupported);\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth issuer for requests\n     */\n    get selfSignedJwtAudience() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Jwks_uri for token signing keys\n     */\n    get jwksUri() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    canReplaceTenant(authorityUri) {\n        return (authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\n            this.protocolMode === ProtocolMode.AAD);\n    }\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    replaceTenant(urlString) {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    replacePath(urlString) {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\n                const tenantId = new UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n        return this.replaceTenant(endpoint);\n    }\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    get defaultOpenIdConfigurationEndpoint() {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === AuthorityType.Adfs ||\n            (this.protocolMode !== ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete() {\n        return !!this.metadata;\n    }\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    async resolveEndpointsAsync() {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\n        const metadataEntity = this.getCurrentMetadataEntity();\n        const cloudDiscoverySource = await invokeAsync(this.updateCloudDiscoveryMetadata.bind(this), PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        const endpointSource = await invokeAsync(this.updateEndpointMetadata.bind(this), PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\n            source: endpointSource,\n        });\n    }\n    /**\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\n     * from the configured canonical authority\n     * @returns\n     */\n    getCurrentMetadataEntity() {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = {\n                aliases: [],\n                preferred_cache: this.hostnameAndPort,\n                preferred_network: this.hostnameAndPort,\n                canonical_authority: this.canonicalAuthority,\n                authorization_endpoint: \"\",\n                token_endpoint: \"\",\n                end_session_endpoint: \"\",\n                issuer: \"\",\n                aliasesFromNetwork: false,\n                endpointsFromNetwork: false,\n                expiresAt: generateAuthorityMetadataExpiresAt(),\n                jwks_uri: \"\",\n            };\n        }\n        return metadataEntity;\n    }\n    /**\n     * Updates cached metadata based on metadata source and sets the instance's metadata\n     * property to the same value\n     * @param metadataEntity\n     * @param cloudDiscoverySource\n     * @param endpointMetadataResult\n     */\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.expiresAt =\n                generateAuthorityMetadataExpiresAt();\n            metadataEntity.canonical_authority = this.canonicalAuthority;\n        }\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    async updateEndpointMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\n        if (localMetadata) {\n            if (localMetadata.source ===\n                AuthorityMetadataSource.HARDCODED_VALUES) {\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                    if (localMetadata.metadata) {\n                        const hardcodedMetadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\n                        updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);\n                        metadataEntity.canonical_authority =\n                            this.canonicalAuthority;\n                    }\n                }\n            }\n            return localMetadata.source;\n        }\n        // Get metadata from network if local sources aren't available\n        let metadata = await invokeAsync(this.getEndpointMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\n            }\n            updateAuthorityEndpointMetadata(metadataEntity, metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }\n        else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw createClientAuthError(openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\n        }\n    }\n    /**\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\n     * response if the source is hardcoded metadata\n     * @param metadataEntity\n     * @returns\n     */\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\n        const configMetadata = this.getEndpointMetadataFromConfig();\n        if (configMetadata) {\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\n            updateAuthorityEndpointMetadata(metadataEntity, configMetadata, false);\n            return {\n                source: AuthorityMetadataSource.CONFIG,\n            };\n        }\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);\n                return {\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\n                    metadata: hardcodedMetadata,\n                };\n            }\n            else {\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\n            }\n        }\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return { source: AuthorityMetadataSource.CACHE };\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        return null;\n    }\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    isAuthoritySameType(metadataEntity) {\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        return (cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\n    }\n    /**\n     * Parse authorityMetadata config option\n     */\n    getEndpointMetadataFromConfig() {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata);\n            }\n            catch (e) {\n                throw createClientConfigurationError(invalidAuthorityMetadata);\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getEndpointMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\n            const isValidResponse = isOpenIdConfigResponse(response.body);\n            if (isValidResponse) {\n                return response.body;\n            }\n            else {\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\n                return null;\n            }\n        }\n        catch (e) {\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\n            return null;\n        }\n    }\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    getEndpointMetadataFromHardcodedValues() {\n        if (this.canonicalAuthority in EndpointMetadata) {\n            return EndpointMetadata[this.canonicalAuthority];\n        }\n        return null;\n    }\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    async updateMetadataWithRegionalInformation(metadata) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\n        if (userConfiguredAzureRegion) {\n            if (userConfiguredAzureRegion !==\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\n            }\n            const autodetectedRegionName = await invokeAsync(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\n                ?.environmentRegion, this.regionDiscoveryMetadata);\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\n            }\n            this.regionDiscoveryMetadata.region_outcome =\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n        return metadata;\n    }\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    async updateCloudDiscoveryMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\n        if (localMetadataSource) {\n            return localMetadataSource;\n        }\n        // Fallback to network as metadata source\n        const metadata = await invokeAsync(this.getCloudDiscoveryMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\n        if (metadata) {\n            updateCloudDiscoveryMetadata(metadataEntity, metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw createClientConfigurationError(untrustedAuthority);\n    }\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\n            Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\n            Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || Constants.NOT_APPLICABLE}`);\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\n            updateCloudDiscoveryMetadata(metadataEntity, metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = getCloudDiscoveryMetadataFromHardcodedValues(this.hostnameAndPort);\n            if (hardcodedMetadata) {\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\n                updateCloudDiscoveryMetadata(metadataEntity, hardcodedMetadata, false);\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        return null;\n    }\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    getCloudDiscoveryMetadataFromConfig() {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === AuthorityType.Ciam) {\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\n            try {\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\n                    return metadata;\n                }\n                else {\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\n                }\n            }\n            catch (e) {\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\n                throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\n            }\n        }\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return null;\n    }\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getCloudDiscoveryMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\n            let typedResponseBody;\n            let metadata;\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\n                typedResponseBody =\n                    response.body;\n                metadata = typedResponseBody.metadata;\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\n            }\n            else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\n                typedResponseBody =\n                    response.body;\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\n                    return null;\n                }\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\n                metadata = [];\n            }\n            else {\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\n                return null;\n            }\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            match = getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\n        }\n        catch (error) {\n            if (error instanceof AuthError) {\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\n            }\n            else {\n                const typedError = error;\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\n            }\n            return null;\n        }\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return match;\n    }\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    isInKnownAuthorities() {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return (authority &&\n                UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                    this.hostnameAndPort);\n        });\n        return matches.length > 0;\n    }\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(authorityString, azureCloudOptions) {\n        let authorityAzureCloudInstance;\n        if (azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(host) {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache() {\n        if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        }\n        else {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host) {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host) {\n        return InstanceDiscoveryMetadataAliases.has(host);\n    }\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host) {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(host, region, queryString) {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n        // Add the query string if a query string was provided\n        if (queryString)\n            return `${url}?${queryString}`;\n        return url;\n    }\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata, azureRegion) {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\n        }\n        return regionalMetadata;\n    }\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority) {\n        let ciamAuthority = authority;\n        const authorityUrl = new UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n        // check if transformation is needed\n        if (authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n        return ciamAuthority;\n    }\n}\n// Reserved tenant domain names that will not be replaced with tenant id\nAuthority.reservedTenantDomains = new Set([\n    \"{tenant}\",\n    \"{tenantid}\",\n    AADAuthorityConstants.COMMON,\n    AADAuthorityConstants.CONSUMERS,\n    AADAuthorityConstants.ORGANIZATIONS,\n]);\n/**\n * Extract tenantId from authority\n */\nfunction getTenantFromAuthorityString(authority) {\n    const authorityUrl = new UrlString(authority);\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\n    /**\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\n     */\n    const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0].toLowerCase();\n    switch (tenantId) {\n        case AADAuthorityConstants.COMMON:\n        case AADAuthorityConstants.ORGANIZATIONS:\n        case AADAuthorityConstants.CONSUMERS:\n            return undefined;\n        default:\n            return tenantId;\n    }\n}\nfunction formatAuthorityUri(authorityUri) {\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\n        ? authorityUri\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\n}\nfunction buildStaticAuthorityOptions(authOptions) {\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\n    let cloudDiscoveryMetadata = undefined;\n    if (rawCloudDiscoveryMetadata) {\n        try {\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\n        }\n        catch (e) {\n            throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\n        }\n    }\n    return {\n        canonicalAuthority: authOptions.authority\n            ? formatAuthorityUri(authOptions.authority)\n            : undefined,\n        knownAuthorities: authOptions.knownAuthorities,\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\n    };\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityFactory {\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\n        const authorityUriFinal = Authority.transformCIAMAuthority(formatAuthorityUri(authorityUri));\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority = AuthorityFactory.createInstance(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n        try {\n            await invokeAsync(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\n            return acquireTokenAuthority;\n        }\n        catch (e) {\n            throw createClientAuthError(endpointResolutionError);\n        }\n    }\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n        // Throw error if authority url is empty\n        if (!authorityUrl) {\n            throw createClientConfigurationError(urlEmptyError);\n        }\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nclass BaseClient {\n    constructor(configuration, performanceClient) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name$3, version$4);\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(this.networkClient, this.cacheManager);\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    createTokenRequestHeaders(ccsCred) {\n        const headers = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\n        if (queuedEvent) {\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\n        }\n        const response = await this.networkManager.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers });\n        this.performanceClient?.addFields({\n            refreshTokenSize: response.body.refresh_token?.length || 0,\n            httpVerToken: response.headers?.[HeaderNames.X_MS_HTTP_VERSION] || \"\",\n        }, correlationId);\n        if (this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n        return response;\n    }\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    async updateAuthority(cloudInstanceHostname, correlationId) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\n        const cloudInstanceAuthority = await AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, this.performanceClient, correlationId);\n        this.authority = cloudInstanceAuthority;\n    }\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request) {\n        const parameterBuilder = new RequestParameterBuilder();\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Codes defined by MSAL\nconst noTokensFound = \"no_tokens_found\";\nconst nativeAccountUnavailable = \"native_account_unavailable\";\nconst refreshTokenExpired = \"refresh_token_expired\";\n// Codes potentially returned by server\nconst interactionRequired = \"interaction_required\";\nconst consentRequired = \"consent_required\";\nconst loginRequired = \"login_required\";\nconst badToken = \"bad_token\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nconst InteractionRequiredServerErrorMessage = [\n    interactionRequired,\n    consentRequired,\n    loginRequired,\n    badToken,\n];\nconst InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n    \"bad_token\",\n];\nconst InteractionRequiredAuthErrorMessages = {\n    [noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\n    [nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n    [refreshTokenExpired]: \"Refresh token has expired.\",\n    [badToken]: \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\n};\n/**\n * Error thrown when user interaction is required.\n */\nclass InteractionRequiredAuthError extends AuthError {\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n    }\n}\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\n    const isInteractionRequiredErrorCode = !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError = !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc = !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n    return (isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError);\n}\n/**\n * Creates an InteractionRequiredAuthError\n */\nfunction createInteractionRequiredAuthError(errorCode) {\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass CacheRecord {\n    constructor(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity, appMetadataEntity) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nclass ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(cryptoObj, userState, meta) {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return userState\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(cryptoObj, meta) {\n        if (!cryptoObj) {\n            throw createClientAuthError(noCryptoObject);\n        }\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj = {\n            id: cryptoObj.createNewGuid(),\n        };\n        if (meta) {\n            stateObj.meta = meta;\n        }\n        const stateString = JSON.stringify(stateObj);\n        return cryptoObj.base64Encode(stateString);\n    }\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(cryptoObj, state) {\n        if (!cryptoObj) {\n            throw createClientAuthError(noCryptoObject);\n        }\n        if (!state) {\n            throw createClientAuthError(invalidState);\n        }\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1\n                ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\n                : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString);\n            return {\n                userRequestState: userState || Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        }\n        catch (e) {\n            throw createClientAuthError(invalidState);\n        }\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n};\n/** @internal */\nclass PopTokenGenerator {\n    constructor(cryptoUtils, performanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request, logger) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n        const reqCnf = await invokeAsync(this.generateKid.bind(this), PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\n        const reqCnfString = this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString),\n        };\n    }\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken, keyId, request) {\n        return this.signPayload(accessToken, keyId, request);\n    }\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload, keyId, request, claims) {\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions, } = request;\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return this.cryptoUtils.signJwt({\n            at: payload,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: resourceUrlComponents?.QueryString\n                ? [[], resourceUrlComponents.QueryString]\n                : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims,\n        }, keyId, shrOptions, request.correlationId);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ class TokenCacheContext {\n    constructor(tokenCache, hasChanged) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged() {\n        return this.hasChanged;\n    }\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache() {\n        return this.cache;\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class that handles response parsing.\n * @internal\n */\nclass ResponseHandler {\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param requestState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponse, requestState) {\n        if (!serverResponse.state || !requestState) {\n            throw serverResponse.state\n                ? createClientAuthError(stateNotFound, \"Cached State\")\n                : createClientAuthError(stateNotFound, \"Server State\");\n        }\n        let decodedServerResponseState;\n        let decodedRequestState;\n        try {\n            decodedServerResponseState = decodeURIComponent(serverResponse.state);\n        }\n        catch (e) {\n            throw createClientAuthError(invalidState, serverResponse.state);\n        }\n        try {\n            decodedRequestState = decodeURIComponent(requestState);\n        }\n        catch (e) {\n            throw createClientAuthError(invalidState, serverResponse.state);\n        }\n        if (decodedServerResponseState !== decodedRequestState) {\n            throw createClientAuthError(stateMismatch);\n        }\n        // Check for error\n        if (serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror) {\n            if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || \"\", serverResponse.trace_id || \"\", serverResponse.correlation_id || \"\", serverResponse.claims || \"\");\n            }\n            throw new ServerError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror);\n        }\n    }\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(serverResponse, refreshAccessToken) {\n        // Check for error\n        if (serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror) {\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            const serverError = new ServerError(serverResponse.error, errString, serverResponse.suberror);\n            // check if 500 error\n            if (refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END) {\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            }\n            else if (refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END) {\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n            if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || Constants.EMPTY_STRING, serverResponse.trace_id || Constants.EMPTY_STRING, serverResponse.correlation_id || Constants.EMPTY_STRING, serverResponse.claims || Constants.EMPTY_STRING);\n            }\n            throw serverError;\n        }\n    }\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\n        // create an idToken object (not entity)\n        let idTokenClaims;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = extractTokenClaims(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw createClientAuthError(nonceMismatch);\n                }\n            }\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw createClientAuthError(authTimeNotFound);\n                }\n                checkMaxAge(authTime, request.maxAge);\n            }\n        }\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\n        // save the response tokens\n        let requestStateObj;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key, this.logger);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return await ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.storeInCache);\n        }\n        finally {\n            if (this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\n    }\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw createClientAuthError(invalidCacheEnvironment);\n        }\n        const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken;\n        let cachedAccount;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || \"\");\n            cachedAccount = buildAccountToCache(this.cacheStorage, authority, this.homeAccountIdentifier, idTokenClaims, this.cryptoObj.base64Decode, serverTokenResponse.client_info, env, claimsTenantId, authCodePayload, undefined, // nativeAccountId\n            this.logger);\n        }\n        // AccessToken\n        let cachedAccessToken = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? ScopeSet.fromString(serverTokenResponse.scope)\n                : new ScopeSet(request.scopes || []);\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\n                ? parseInt(serverTokenResponse.expires_in, 10)\n                : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\n                ? parseInt(serverTokenResponse.refresh_in, 10)\n                : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0\n                ? reqTimestamp + refreshIn\n                : undefined;\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant, responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\n        }\n        // refreshToken\n        let cachedRefreshToken = null;\n        if (serverTokenResponse.refresh_token) {\n            let rtExpiresOn;\n            if (serverTokenResponse.refresh_token_expires_in) {\n                const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in ===\n                    \"string\"\n                    ? parseInt(serverTokenResponse.refresh_token_expires_in, 10)\n                    : serverTokenResponse.refresh_token_expires_in;\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\n            }\n            cachedRefreshToken = createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);\n        }\n        // appMetadata\n        let cachedAppMetadata = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = {\n                clientId: this.clientId,\n                environment: env,\n                familyId: serverTokenResponse.foci,\n            };\n        }\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\n    }\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\n        let accessToken = Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        let refreshOn;\n        let familyId = Constants.EMPTY_STRING;\n        if (cacheRecord.accessToken) {\n            if (cacheRecord.accessToken.tokenType === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n                if (!keyId) {\n                    throw createClientAuthError(keyIdMissing);\n                }\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\n            }\n            else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = new Date(Number(cacheRecord.accessToken.refreshOn) * 1000);\n            }\n        }\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\n                    ? THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n        const accountInfo = cacheRecord.account\n            ? updateAccountTenantProfileData(cacheRecord.account.getAccountInfo(), undefined, // tenantProfile optional\n            idTokenClaims)\n            : null;\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountInfo,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\n                Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\nfunction buildAccountToCache(cacheStorage, authority, homeAccountId, idTokenClaims, base64Decode, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {\n    logger?.verbose(\"setCachedAccount called\");\n    // Check if base account is already cached\n    const accountKeys = cacheStorage.getAccountKeys();\n    const baseAccountKey = accountKeys.find((accountKey) => {\n        return accountKey.startsWith(homeAccountId);\n    });\n    let cachedAccount = null;\n    if (baseAccountKey) {\n        cachedAccount = cacheStorage.getAccount(baseAccountKey, logger);\n    }\n    const baseAccount = cachedAccount ||\n        AccountEntity.createAccount({\n            homeAccountId,\n            idTokenClaims,\n            clientInfo,\n            environment,\n            cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n            msGraphHost: authCodePayload?.msgraph_host,\n            nativeAccountId: nativeAccountId,\n        }, authority, base64Decode);\n    const tenantProfiles = baseAccount.tenantProfiles || [];\n    if (claimsTenantId &&\n        !tenantProfiles.find((tenantProfile) => {\n            return tenantProfile.tenantId === claimsTenantId;\n        })) {\n        const newTenantProfile = buildTenantProfileFromIdTokenClaims(homeAccountId, idTokenClaims);\n        tenantProfiles.push(newTenantProfile);\n    }\n    baseAccount.tenantProfiles = tenantProfiles;\n    return baseAccount;\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nclass AuthorizationCodeClient extends BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n        // Flag to indicate if client is for hybrid spa auth code redemption\n        this.includeRedirectUri = true;\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.GetAuthCodeUrl, request.correlationId);\n        const queryString = await invokeAsync(this.createAuthCodeUrlQueryString.bind(this), PerformanceEvents.AuthClientCreateQueryString, this.logger, this.performanceClient, request.correlationId)(request);\n        return UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request, authCodePayload) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientAcquireToken, request.correlationId);\n        if (!request.code) {\n            throw createClientAuthError(requestCannotBeMade);\n        }\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\n    }\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(serverParams, cachedState) {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState);\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw createClientAuthError(authorizationCodeMissingFromServerResponse);\n        }\n        return serverParams;\n    }\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest) {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw createClientConfigurationError(logoutRequestEmpty);\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n        // Construct logout URI\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    async executeTokenRequest(authority, request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\n        let ccsCredential = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils.base64Decode);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const thumbprint = {\n            clientId: request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\n    }\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\n        const parameterBuilder = new RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        }\n        else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        }\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw createClientConfigurationError(missingSshJwk);\n            }\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        if (!StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        let ccsCred = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils.base64Decode);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        else {\n            ccsCred = request.ccsCredential;\n        }\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        // Add hybrid spa parameters if not already provided\n        if (request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[RETURN_SPA_CODE])) {\n            parameterBuilder.addExtraQueryParameters({\n                [RETURN_SPA_CODE]: \"1\",\n            });\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    async createAuthCodeUrlQueryString(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateQueryString, request.correlationId);\n        const parameterBuilder = new RequestParameterBuilder();\n        parameterBuilder.addClientId(request.extraQueryParameters?.[CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!isOidcProtocolMode(this.config)) {\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        }\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            }\n            else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                const accountLoginHintClaim = this.extractLoginHint(request.account);\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (accountSid && request.prompt === PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                }\n                else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n            }\n            else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        }\n        else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    createLogoutUrlQueryString(request) {\n        const parameterBuilder = new RequestParameterBuilder();\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    extractAccountSid(account) {\n        return account.idTokenClaims?.sid || null;\n    }\n    extractLoginHint(account) {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nclass RefreshTokenClient extends BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    async acquireToken(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        responseHandler.validateTokenResponse(response.body);\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\n    }\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    async acquireTokenByRefreshToken(request) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(tokenRequestEmpty);\n        }\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(noAccountInSilentRequest);\n        }\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return await invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\n            }\n            catch (e) {\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        noTokensFound;\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError &&\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\n                    // throw in all other cases\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\n    }\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    async acquireTokenWithCachedRefreshToken(request, foci) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = invoke(this.cacheManager.getRefreshToken.bind(this.cacheManager), PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci, undefined, this.performanceClient, request.correlationId);\n        if (!refreshToken) {\n            throw createInteractionRequiredAuthError(noTokensFound);\n        }\n        if (refreshToken.expiresOn &&\n            TimeUtils.isTokenExpired(refreshToken.expiresOn, request.refreshTokenExpirationOffsetSeconds ||\n                DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {\n            throw createInteractionRequiredAuthError(refreshTokenExpired);\n        }\n        // attach cached RT size to the current measurement\n        const refreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n        try {\n            return await invokeAsync(this.acquireToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\n        }\n        catch (e) {\n            if (e instanceof InteractionRequiredAuthError &&\n                e.subError === badToken) {\n                // Remove bad refresh token from cache\n                this.logger.verbose(\"acquireTokenWithRefreshToken: bad refresh token, removing from cache\");\n                const badRefreshTokenKey = generateCredentialKey(refreshToken);\n                this.cacheManager.removeRefreshToken(badRefreshTokenKey);\n            }\n            throw e;\n        }\n    }\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    async executeTokenRequest(request, authority) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint = {\n            clientId: request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\n    }\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n        const correlationId = request.correlationId;\n        const parameterBuilder = new RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        if (request.redirectUri) {\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n        parameterBuilder.addClientInfo();\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        parameterBuilder.addCorrelationId(correlationId);\n        parameterBuilder.addRefreshToken(request.refreshToken);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        }\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw createClientConfigurationError(missingSshJwk);\n            }\n        }\n        if (!StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass SilentFlowClient extends BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request) {\n        try {\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken(request);\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\n                // refresh the access token in the background\n                const refreshTokenClient = new RefreshTokenClient(this.config, this.performanceClient);\n                refreshTokenClient\n                    .acquireTokenByRefreshToken(request)\n                    .catch(() => {\n                    // do nothing, this is running in the background and no action is to be taken upon success or failure\n                });\n            }\n            // return the cached token\n            return authResponse;\n        }\n        catch (e) {\n            if (e instanceof ClientAuthError &&\n                e.errorCode === tokenRefreshRequired) {\n                const refreshTokenClient = new RefreshTokenClient(this.config, this.performanceClient);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\n        let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;\n        if (request.forceRefresh ||\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n                !StringUtils.isEmptyObj(request.claims))) {\n            // Must refresh due to present force_refresh flag.\n            this.setCacheOutcome(CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\n            throw createClientAuthError(tokenRefreshRequired);\n        }\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(noAccountInSilentRequest);\n        }\n        const requestTenantId = request.account.tenantId ||\n            getTenantFromAuthorityString(request.authority);\n        const tokenKeys = this.cacheManager.getTokenKeys();\n        const cachedAccessToken = this.cacheManager.getAccessToken(request.account, request, tokenKeys, requestTenantId, this.performanceClient, request.correlationId);\n        if (!cachedAccessToken) {\n            // must refresh due to non-existent access_token\n            this.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\n            throw createClientAuthError(tokenRefreshRequired);\n        }\n        else if (TimeUtils.wasClockTurnedBack(cachedAccessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\n            // must refresh due to the expires_in value\n            this.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\n            throw createClientAuthError(tokenRefreshRequired);\n        }\n        else if (cachedAccessToken.refreshOn &&\n            TimeUtils.isTokenExpired(cachedAccessToken.refreshOn, 0)) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n        const environment = request.authority || this.authority.getPreferredCache();\n        const cacheRecord = {\n            account: this.cacheManager.readAccountFromCache(request.account),\n            accessToken: cachedAccessToken,\n            idToken: this.cacheManager.getIdToken(request.account, tokenKeys, requestTenantId, this.performanceClient, request.correlationId),\n            refreshToken: null,\n            appMetadata: this.cacheManager.readAppMetadataFromCache(environment),\n        };\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n        return [\n            await invokeAsync(this.generateResultFromCacheRecord.bind(this), PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n    setCacheOutcome(cacheOutcome, correlationId) {\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\n        this.performanceClient?.addFields({\n            cacheOutcome: cacheOutcome,\n        }, correlationId);\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\n            this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\n        }\n    }\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    async generateResultFromCacheRecord(cacheRecord, request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\n        let idTokenClaims;\n        if (cacheRecord.idToken) {\n            idTokenClaims = extractTokenClaims(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\n        }\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw createClientAuthError(authTimeNotFound);\n            }\n            checkMaxAge(authTime, request.maxAge);\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst StubbedNetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(createClientAuthError(methodNotImplemented));\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(createClientAuthError(methodNotImplemented));\n    },\n};\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst missingKidError = \"missing_kid_error\";\nconst missingAlgError = \"missing_alg_error\";\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst JoseHeaderErrorMessages = {\n    [missingKidError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    [missingAlgError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass JoseHeaderError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n}\n/** Returns JoseHeaderError object */\nfunction createJoseHeaderError(code) {\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass JoseHeader {\n    constructor(options) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions) {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw createJoseHeaderError(missingKidError);\n        }\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw createJoseHeaderError(missingAlgError);\n        }\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonWebTokenTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n        return JSON.stringify(shrHeader);\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ServerTelemetryManager {\n    constructor(telemetryRequest, cacheManager) {\n        this.cacheOutcome = CacheOutcome.NOT_APPLICABLE;\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n        this.telemetryCacheKey =\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\n                Separators.CACHE_KEY_SEPARATOR +\n                telemetryRequest.clientId;\n    }\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue() {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue() {\n        const lastRequests = this.getLastRequests();\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount\n            ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n            : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error) {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >=\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                }\n                else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                }\n                else {\n                    lastRequests.errors.push(error.toString());\n                }\n            }\n            else {\n                lastRequests.errors.push(error.toString());\n            }\n        }\n        else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return;\n    }\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits() {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests() {\n        const initialValue = {\n            failedRequests: [],\n            errors: [],\n            cacheHits: 0,\n        };\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\n        return lastRequests || initialValue;\n    }\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache() {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        }\n        else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = {\n                failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),\n                errors: lastRequests.errors.slice(numErrorsFlushed),\n                cacheHits: 0,\n            };\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity) {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\n                Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                    correlationId.toString().length +\n                    errorCode.length +\n                    3;\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            }\n            else {\n                break;\n            }\n        }\n        return maxErrors;\n    }\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields() {\n        const regionDiscoveryFields = [];\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);\n        return regionDiscoveryFields.join(\",\");\n    }\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome) {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n\n/*! @azure/msal-common v14.6.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StubPerformanceMeasurement {\n    startMeasurement() {\n        return;\n    }\n    endMeasurement() {\n        return;\n    }\n    flushMeasurement() {\n        return null;\n    }\n}\nclass StubPerformanceClient {\n    generateId() {\n        return \"callback-id\";\n    }\n    startMeasurement(measureName, correlationId) {\n        return {\n            end: () => null,\n            discard: () => { },\n            add: () => { },\n            increment: () => { },\n            event: {\n                eventId: this.generateId(),\n                status: PerformanceEventStatus.InProgress,\n                authority: \"\",\n                libraryName: \"\",\n                libraryVersion: \"\",\n                clientId: \"\",\n                name: measureName,\n                startTimeMs: Date.now(),\n                correlationId: correlationId || \"\",\n            },\n            measurement: new StubPerformanceMeasurement(),\n        };\n    }\n    startPerformanceMeasurement() {\n        return new StubPerformanceMeasurement();\n    }\n    calculateQueuedTime() {\n        return 0;\n    }\n    addQueueMeasurement() {\n        return;\n    }\n    setPreQueueTime() {\n        return;\n    }\n    endMeasurement() {\n        return null;\n    }\n    discardMeasurements() {\n        return;\n    }\n    removePerformanceCallback() {\n        return true;\n    }\n    addPerformanceCallback() {\n        return \"\";\n    }\n    emitEvents() {\n        return;\n    }\n    addFields() {\n        return;\n    }\n    incrementFields() {\n        return;\n    }\n    cacheEventByCorrelationId() {\n        return;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst pkceNotCreated = \"pkce_not_created\";\nconst cryptoNonExistent = \"crypto_nonexistent\";\nconst emptyNavigateUri = \"empty_navigate_uri\";\nconst hashEmptyError = \"hash_empty_error\";\nconst noStateInHash = \"no_state_in_hash\";\nconst hashDoesNotContainKnownProperties = \"hash_does_not_contain_known_properties\";\nconst unableToParseState = \"unable_to_parse_state\";\nconst stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\nconst interactionInProgress = \"interaction_in_progress\";\nconst popupWindowError = \"popup_window_error\";\nconst emptyWindowError = \"empty_window_error\";\nconst userCancelled = \"user_cancelled\";\nconst monitorPopupTimeout = \"monitor_popup_timeout\";\nconst monitorWindowTimeout = \"monitor_window_timeout\";\nconst redirectInIframe = \"redirect_in_iframe\";\nconst blockIframeReload = \"block_iframe_reload\";\nconst blockNestedPopups = \"block_nested_popups\";\nconst iframeClosedPrematurely = \"iframe_closed_prematurely\";\nconst silentLogoutUnsupported = \"silent_logout_unsupported\";\nconst noAccountError = \"no_account_error\";\nconst silentPromptValueError = \"silent_prompt_value_error\";\nconst noTokenRequestCacheError = \"no_token_request_cache_error\";\nconst unableToParseTokenRequestCacheError = \"unable_to_parse_token_request_cache_error\";\nconst noCachedAuthorityError = \"no_cached_authority_error\";\nconst authRequestNotSetError = \"auth_request_not_set_error\";\nconst invalidCacheType = \"invalid_cache_type\";\nconst nonBrowserEnvironment = \"non_browser_environment\";\nconst databaseNotOpen = \"database_not_open\";\nconst noNetworkConnectivity = \"no_network_connectivity\";\nconst postRequestFailed = \"post_request_failed\";\nconst getRequestFailed = \"get_request_failed\";\nconst failedToParseResponse = \"failed_to_parse_response\";\nconst unableToLoadToken = \"unable_to_load_token\";\nconst cryptoKeyNotFound = \"crypto_key_not_found\";\nconst authCodeRequired = \"auth_code_required\";\nconst authCodeOrNativeAccountIdRequired = \"auth_code_or_nativeAccountId_required\";\nconst spaCodeAndNativeAccountIdPresent = \"spa_code_and_nativeAccountId_present\";\nconst databaseUnavailable = \"database_unavailable\";\nconst unableToAcquireTokenFromNativePlatform = \"unable_to_acquire_token_from_native_platform\";\nconst nativeHandshakeTimeout = \"native_handshake_timeout\";\nconst nativeExtensionNotInstalled = \"native_extension_not_installed\";\nconst nativeConnectionNotEstablished = \"native_connection_not_established\";\nconst uninitializedPublicClientApplication = \"uninitialized_public_client_application\";\nconst nativePromptNotSupported = \"native_prompt_not_supported\";\nconst invalidBase64String = \"invalid_base64_string\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserAuthErrorMessages = {\n    [pkceNotCreated]: \"The PKCE code challenge and verifier could not be generated.\",\n    [cryptoNonExistent]: \"The crypto object or function is not available.\",\n    [emptyNavigateUri]: \"Navigation URI is empty. Please check stack trace for more info.\",\n    [hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\n    [noStateInHash]: \"Hash does not contain state. Please verify that the request originated from msal.\",\n    [hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\n    [unableToParseState]: \"Unable to parse state. Please verify that the request originated from msal.\",\n    [stateInteractionTypeMismatch]: \"Hash contains state but the interaction type does not match the caller.\",\n    [interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\n    [popupWindowError]: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    [emptyWindowError]: \"window.open returned null or undefined window object.\",\n    [userCancelled]: \"User cancelled the flow.\",\n    [monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\n    [monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\n    [redirectInIframe]: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    [blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\n    [blockNestedPopups]: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    [iframeClosedPrematurely]: \"The iframe being monitored was closed prematurely.\",\n    [silentLogoutUnsupported]: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    [noAccountError]: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    [silentPromptValueError]: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    [noTokenRequestCacheError]: \"No token request found in cache.\",\n    [unableToParseTokenRequestCacheError]: \"The cached token request could not be parsed.\",\n    [noCachedAuthorityError]: \"No cached authority found.\",\n    [authRequestNotSetError]: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    [invalidCacheType]: \"Invalid cache type\",\n    [nonBrowserEnvironment]: \"Login and token requests are not supported in non-browser environments.\",\n    [databaseNotOpen]: \"Database is not open!\",\n    [noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\n    [postRequestFailed]: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    [getRequestFailed]: \"Network request failed. Please check the network trace to determine root cause.\",\n    [failedToParseResponse]: \"Failed to parse network response. Check network trace.\",\n    [unableToLoadToken]: \"Error loading token to cache.\",\n    [cryptoKeyNotFound]: \"Cryptographic Key or Keypair not found in browser storage.\",\n    [authCodeRequired]: \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    [authCodeOrNativeAccountIdRequired]: \"An authorization code or nativeAccountId must be provided to this flow.\",\n    [spaCodeAndNativeAccountIdPresent]: \"Request cannot contain both spa code and native account id.\",\n    [databaseUnavailable]: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    [unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\n    [nativeHandshakeTimeout]: \"Timed out while attempting to establish connection to browser extension\",\n    [nativeExtensionNotInstalled]: \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    [nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\n    [uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\n    [nativePromptNotSupported]: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    [invalidBase64String]: \"Invalid base64 encoded string.\",\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserAuthError extends AuthError {\n    constructor(errorCode) {\n        super(errorCode, BrowserAuthErrorMessages[errorCode]);\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n}\nfunction createBrowserAuthError(errorCode) {\n    return new BrowserAuthError(errorCode);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Constants\n */\nconst BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\nconst NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n};\nconst NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n};\nconst BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n};\n/**\n * HTTP Request types supported by MSAL.\n */\nconst HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n};\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nconst TemporaryCacheKeys = {\n    AUTHORITY: \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\n    SESSION_STATE: \"session.state\",\n    REQUEST_STATE: \"request.state\",\n    NONCE_IDTOKEN: \"nonce.id_token\",\n    ORIGIN_URI: \"request.origin\",\n    RENEW_STATUS: \"token.renew.status\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    SCOPES: \"scopes\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    CCS_CREDENTIAL: \"ccs.credential\",\n    CORRELATION_ID: \"request.correlationId\",\n    NATIVE_REQUEST: \"request.native\",\n    REDIRECT_CONTEXT: \"request.redirect.context\",\n};\nconst StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n};\n/**\n * Cache keys stored in-memory\n */\nconst InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n};\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nconst ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n};\n/*\n * Interaction type of the API - used for state and telemetry\n */\nvar InteractionType;\n(function (InteractionType) {\n    InteractionType[\"Redirect\"] = \"redirect\";\n    InteractionType[\"Popup\"] = \"popup\";\n    InteractionType[\"Silent\"] = \"silent\";\n    InteractionType[\"None\"] = \"none\";\n})(InteractionType || (InteractionType = {}));\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nconst InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n};\nconst DEFAULT_REQUEST = {\n    scopes: OIDC_DEFAULT_SCOPES,\n};\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nconst KEY_FORMAT_JWK = \"jwk\";\n// Supported wrapper SKUs\nconst WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n};\n// DatabaseStorage Constants\nconst DB_NAME = \"msal.db\";\nconst DB_VERSION = 1;\nconst DB_TABLE_NAME = `${DB_NAME}.keys`;\nconst CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0,\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n};\nconst iFrameRenewalPolicies = [\n    CacheLookupPolicy.Default,\n    CacheLookupPolicy.Skip,\n    CacheLookupPolicy.RefreshTokenAndNetwork,\n];\nconst LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\nconst LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Clears hash from window url.\n */\nfunction clearHash(contentWindow) {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = \"\";\n    if (typeof contentWindow.history.replaceState === \"function\") {\n        // Full removes \"#\" from url\n        contentWindow.history.replaceState(null, \"\", `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\n    }\n}\n/**\n * Replaces current hash with hash from provided url\n */\nfunction replaceHash(url) {\n    const urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n}\n/**\n * Returns boolean of whether the current window is in an iframe or not.\n */\nfunction isInIframe() {\n    return window.parent !== window;\n}\n/**\n * Returns boolean of whether or not the current window is a popup opened by msal\n */\nfunction isInPopup() {\n    return (typeof window !== \"undefined\" &&\n        !!window.opener &&\n        window.opener !== window &&\n        typeof window.name === \"string\" &&\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0);\n}\n// #endregion\n/**\n * Returns current window URL as redirect uri\n */\nfunction getCurrentUri() {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n}\n/**\n * Gets the homepage url for the current window location.\n */\nfunction getHomepage() {\n    const currentUrl = new UrlString(window.location.href);\n    const urlComponents = currentUrl.getUrlComponents();\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n}\n/**\n * Throws error if we have completed an auth and are\n * attempting another auth request inside an iframe.\n */\nfunction blockReloadInHiddenIframes() {\n    const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\n    // return an error if called from the hidden iframe created by the msal js silent calls\n    if (isResponseHash && isInIframe()) {\n        throw createBrowserAuthError(blockIframeReload);\n    }\n}\n/**\n * Block redirect operations in iframes unless explicitly allowed\n * @param interactionType Interaction type for the request\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n */\nfunction blockRedirectInIframe(interactionType, allowRedirectInIframe) {\n    const isIframedApp = isInIframe();\n    if (interactionType === InteractionType.Redirect &&\n        isIframedApp &&\n        !allowRedirectInIframe) {\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n        throw createBrowserAuthError(redirectInIframe);\n    }\n}\n/**\n * Block redirectUri loaded in popup from calling AcquireToken APIs\n */\nfunction blockAcquireTokenInPopups() {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (isInPopup()) {\n        throw createBrowserAuthError(blockNestedPopups);\n    }\n}\n/**\n * Throws error if token requests are made in non-browser environment\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\n */\nfunction blockNonBrowserEnvironment(isBrowserEnvironment) {\n    if (!isBrowserEnvironment) {\n        throw createBrowserAuthError(nonBrowserEnvironment);\n    }\n}\n/**\n * Throws error if initialize hasn't been called\n * @param initialized\n */\nfunction blockAPICallsBeforeInitialize(initialized) {\n    if (!initialized) {\n        throw createBrowserAuthError(uninitializedPublicClientApplication);\n    }\n}\n/**\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\n * @returns\n */\nfunction preconnect(authority) {\n    const link = document.createElement(\"link\");\n    link.rel = \"preconnect\";\n    link.href = new URL(authority).origin;\n    link.crossOrigin = \"anonymous\";\n    document.head.appendChild(link);\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\n    window.setTimeout(() => {\n        try {\n            document.head.removeChild(link);\n        }\n        catch { }\n    }, 10000); // 10s Timeout\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(url, options) {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(url, options) {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    static defaultNavigateWindow(url, options) {\n        if (options.noHistory) {\n            window.location.replace(url);\n        }\n        else {\n            window.location.assign(url);\n        }\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nclass FetchClient {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync(url, options) {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options),\n            });\n        }\n        catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(getRequestFailed);\n            }\n            else {\n                throw createBrowserAuthError(noNetworkConnectivity);\n            }\n        }\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()),\n                status: response.status,\n            };\n        }\n        catch (e) {\n            throw createBrowserAuthError(failedToParseResponse);\n        }\n    }\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync(url, options) {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody,\n            });\n        }\n        catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(postRequestFailed);\n            }\n            else {\n                throw createBrowserAuthError(noNetworkConnectivity);\n            }\n        }\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()),\n                status: response.status,\n            };\n        }\n        catch (e) {\n            throw createBrowserAuthError(failedToParseResponse);\n        }\n    }\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders\n     */\n    getFetchHeaders(options) {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n    getHeaderDict(headers) {\n        const headerDict = {};\n        headers.forEach((value, key) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Default timeout for popup windows and iframes in milliseconds\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\nconst DEFAULT_IFRAME_TIMEOUT_MS = 10000;\nconst DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nconst DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nfunction buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry, }, isBrowserEnvironment) {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                Constants.OPENID_SCOPE,\n                Constants.PROFILE_SCOPE,\n                Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n        supportsNestedAppAuth: false,\n    };\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled: userInputCache &&\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\n            ? true\n            : false,\n        claimsBasedCachingEnabled: false,\n    };\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: () => {\n            // allow users to not set logger call back\n        },\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? new FetchClient()\n            : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n    const providedSystemOptions = {\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n    const DEFAULT_TELEMETRY_OPTIONS = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING,\n        },\n        client: new StubPerformanceClient(),\n    };\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions) {\n        const logger = new Logger(providedSystemOptions.loggerOptions);\n        logger.warning(JSON.stringify(createClientConfigurationError(cannotSetOIDCOptions)));\n    }\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\n    if (userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\n        providedSystemOptions?.allowNativeBroker) {\n        throw createClientConfigurationError(cannotAllowNativeBroker);\n    }\n    const overlayedConfig = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: providedSystemOptions,\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n    return overlayedConfig;\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/* eslint-disable header/header */\nconst name$2 = \"@azure/msal-browser\";\nconst version$3 = \"3.7.0\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nclass BaseOperatingContext {\n    static loggerCallback(level, message) {\n        switch (level) {\n            case LogLevel.Error:\n                // eslint-disable-next-line no-console\n                console.error(message);\n                return;\n            case LogLevel.Info:\n                // eslint-disable-next-line no-console\n                console.info(message);\n                return;\n            case LogLevel.Verbose:\n                // eslint-disable-next-line no-console\n                console.debug(message);\n                return;\n            case LogLevel.Warning:\n                // eslint-disable-next-line no-console\n                console.warn(message);\n                return;\n            default:\n                // eslint-disable-next-line no-console\n                console.log(message);\n                return;\n        }\n    }\n    constructor(config) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n        this.config = buildConfiguration(config, this.browserEnvironment);\n        let sessionStorage;\n        try {\n            sessionStorage = window[BrowserCacheLocation.SessionStorage];\n            // Mute errors if it's a non-browser environment or cookies are blocked.\n        }\n        catch (e) { }\n        const logLevelKey = sessionStorage?.getItem(LOG_LEVEL_CACHE_KEY);\n        const piiLoggingKey = sessionStorage\n            ?.getItem(LOG_PII_CACHE_KEY)\n            ?.toLowerCase();\n        const piiLoggingEnabled = piiLoggingKey === \"true\"\n            ? true\n            : piiLoggingKey === \"false\"\n                ? false\n                : undefined;\n        const loggerOptions = { ...this.config.system.loggerOptions };\n        const logLevel = logLevelKey && Object.keys(LogLevel).includes(logLevelKey)\n            ? LogLevel[logLevelKey]\n            : undefined;\n        if (logLevel) {\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\n            loggerOptions.logLevel = logLevel;\n        }\n        if (piiLoggingEnabled !== undefined) {\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\n        }\n        this.logger = new Logger(loggerOptions, name$2, version$3);\n        this.available = false;\n    }\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig() {\n        return this.config;\n    }\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger() {\n        return this.logger;\n    }\n    isAvailable() {\n        return this.available;\n    }\n    isBrowserEnvironment() {\n        return this.browserEnvironment;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StandardOperatingContext extends BaseOperatingContext {\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName() {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId() {\n        return StandardOperatingContext.ID;\n    }\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize() {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n/*\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n * containing the implementation for this operating context\n */\nStandardOperatingContext.MODULE_NAME = \"\";\n/**\n * Unique identifier for the operating context\n */\nStandardOperatingContext.ID = \"StandardOperatingContext\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nasync function createV3Controller(config) {\n    const standard = new StandardOperatingContext(config);\n    await standard.initialize();\n    const controller = await Promise.resolve().then(function () { return StandardController$1; });\n    return controller.StandardController.createController(standard);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nfunction urlEncode(input) {\n    return encodeURIComponent(base64Encode(input)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\"));\n}\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nfunction urlEncodeArr(inputArr) {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nfunction base64Encode(input) {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes) {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\"\");\n    return btoa(binString);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\n/**\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\n * @param input\n */\nfunction base64Decode(input) {\n    return new TextDecoder().decode(base64DecToArr(input));\n}\n/**\n * Decodes base64 into Uint8Array\n * @param base64String\n */\nfunction base64DecToArr(base64String) {\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (encodedString.length % 4) {\n        case 0:\n            break;\n        case 2:\n            encodedString += \"==\";\n            break;\n        case 3:\n            encodedString += \"=\";\n            break;\n        default:\n            throw createBrowserAuthError(invalidBase64String);\n    }\n    const binString = atob(encodedString);\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This file defines functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT = new Uint8Array([0x01, 0x00, 0x01]);\nconst keygenAlgorithmOptions = {\n    name: PKCS1_V15_KEYGEN_ALG,\n    hash: S256_HASH_ALG,\n    modulusLength: MODULUS_LENGTH,\n    publicExponent: PUBLIC_EXPONENT,\n};\n/**\n * Check whether browser crypto is available.\n */\nfunction validateCryptoAvailable(logger) {\n    if (\"crypto\" in window) {\n        logger.verbose(\"BrowserCrypto: modern crypto interface available\");\n    }\n    else {\n        logger.error(\"BrowserCrypto: crypto interface is unavailable\");\n        throw createBrowserAuthError(cryptoNonExistent);\n    }\n}\n/**\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n * @param dataString\n */\nasync function sha256Digest(dataString, performanceClient, correlationId) {\n    performanceClient?.addQueueMeasurement(PerformanceEvents.Sha256Digest, correlationId);\n    const encoder = new TextEncoder();\n    const data = encoder.encode(dataString);\n    return window.crypto.subtle.digest(S256_HASH_ALG, data);\n}\n/**\n * Populates buffer with cryptographically random values.\n * @param dataBuffer\n */\nfunction getRandomValues$1(dataBuffer) {\n    return window.crypto.getRandomValues(dataBuffer);\n}\n/**\n * Creates a new random GUID\n * @returns\n */\nfunction createNewGuid() {\n    return window.crypto.randomUUID();\n}\n/**\n * Generates a keypair based on current keygen algorithm config.\n * @param extractable\n * @param usages\n */\nasync function generateKeyPair(extractable, usages) {\n    return window.crypto.subtle.generateKey(keygenAlgorithmOptions, extractable, usages);\n}\n/**\n * Export key as Json Web Key (JWK)\n * @param key\n */\nasync function exportJwk(key) {\n    return window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n}\n/**\n * Imports key as Json Web Key (JWK), can set extractable and usages.\n * @param key\n * @param extractable\n * @param usages\n */\nasync function importJwk(key, extractable, usages) {\n    return window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, keygenAlgorithmOptions, extractable, usages);\n}\n/**\n * Signs given data with given key\n * @param key\n * @param data\n */\nasync function sign(key, data) {\n    return window.crypto.subtle.sign(keygenAlgorithmOptions, key, data);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nclass DatabaseStorage {\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open() {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\"upgradeneeded\", (e) => {\n                const event = e;\n                event.target.result.createObjectStore(this.tableName);\n            });\n            openDB.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () => reject(createBrowserAuthError(databaseUnavailable)));\n        });\n    }\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection() {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n    /**\n     * Opens database if it's not already open\n     */\n    async validateDbIsOpen() {\n        if (!this.dbOpen) {\n            return this.open();\n        }\n    }\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n            dbGet.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n            dbGet.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key, payload) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbPut = objectStore.put(payload, key);\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys() {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n            dbGetKeys.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n            dbGetKeys.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key) {\n        await this.validateDbIsOpen();\n        return new Promise((resolve, reject) => {\n            if (!this.db) {\n                return reject(createBrowserAuthError(databaseNotOpen));\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n            dbContainsKey.addEventListener(\"success\", (e) => {\n                const event = e;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n            dbContainsKey.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase() {\n        // Check if database being deleted exists\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n        return new Promise((resolve, reject) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"blocked\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"error\", () => reject(false));\n        });\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass MemoryStorage {\n    constructor() {\n        this.cache = new Map();\n    }\n    getItem(key) {\n        return this.cache.get(key) || null;\n    }\n    setItem(key, value) {\n        this.cache.set(key, value);\n    }\n    removeItem(key) {\n        this.cache.delete(key);\n    }\n    getKeys() {\n        const cacheKeys = [];\n        this.cache.forEach((value, key) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n    containsKey(key) {\n        return this.cache.has(key);\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nclass AsyncMemoryStorage {\n    constructor(logger, storeName) {\n        this.inMemoryCache = new MemoryStorage();\n        this.indexedDBCache = new DatabaseStorage();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n    handleDatabaseAccessError(error) {\n        if (error instanceof BrowserAuthError &&\n            error.errorCode === databaseUnavailable) {\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key) {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.getItem(key);\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key, value) {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key) {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys() {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n                return await this.indexedDBCache.getKeys();\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key) {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.containsKey(key);\n            }\n            catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory() {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n    }\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent() {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n            return dbDeleted;\n        }\n        catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CryptoKeyStoreNames = {\n    asymmetricKeys: \"asymmetricKeys\",\n    symmetricKeys: \"symmetricKeys\",\n};\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nclass CryptoKeyStore {\n    constructor(logger) {\n        this.logger = logger;\n        this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n        this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n    }\n    async clear() {\n        // Delete in-memory keystores\n        this.asymmetricKeys.clearInMemory();\n        this.symmetricKeys.clearInMemory();\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.asymmetricKeys.clearPersistent();\n            return true;\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n            }\n            else {\n                this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            return false;\n        }\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nclass CryptoOps {\n    constructor(logger, performanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        validateCryptoAvailable(logger);\n        this.cache = new CryptoKeyStore(this.logger);\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid() {\n        return createNewGuid();\n    }\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input) {\n        return base64Encode(input);\n    }\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input) {\n        return base64Decode(input);\n    }\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(request) {\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\n        // Generate Keypair\n        const keyPair = await generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk = await exportJwk(keyPair.publicKey);\n        const pubKeyThumprintObj = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n        const publicJwkString = getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk = await exportJwk(keyPair.privateKey);\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey = await importJwk(privateKeyJwk, false, [\"sign\"]);\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n        return publicJwkHash;\n    }\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid) {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore() {\n        return this.cache.clear();\n    }\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(payload, kid, shrOptions, correlationId) {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsSignJwt, correlationId);\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n        if (!cachedKeyPair) {\n            throw createBrowserAuthError(cryptoKeyNotFound);\n        }\n        // Get public key as JWK\n        const publicKeyJwk = await exportJwk(cachedKeyPair.publicKey);\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({\n            ...shrOptions?.header,\n            alg: publicKeyJwk.alg,\n            kid: encodedKeyIdThumbprint,\n        });\n        const encodedShrHeader = urlEncode(shrHeader);\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = urlEncode(JSON.stringify(payload));\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n        // Sign token\n        const encoder = new TextEncoder();\n        const tokenBuffer = encoder.encode(tokenString);\n        const signatureBuffer = await sign(cachedKeyPair.privateKey, tokenBuffer);\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n        return signedJwt;\n    }\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText) {\n        const hashBuffer = await sha256Digest(plainText);\n        const hashBytes = new Uint8Array(hashBuffer);\n        return urlEncodeArr(hashBytes);\n    }\n}\nCryptoOps.POP_KEY_USAGES = [\"sign\", \"verify\"];\nCryptoOps.EXTRACTABLE = true;\nfunction getSortedObjectString(obj) {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst storageNotSupported = \"storage_not_supported\";\nconst stubbedPublicClientApplicationCalled = \"stubbed_public_client_application_called\";\nconst inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst BrowserConfigurationAuthErrorMessages = {\n    [storageNotSupported]: \"Given storage configuration option was not supported.\",\n    [stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\n({\n    storageNotSupportedError: {\n        code: storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[storageNotSupported],\n    },\n    stubPcaInstanceCalled: {\n        code: stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[stubbedPublicClientApplicationCalled],\n    },\n    inMemRedirectUnavailable: {\n        code: inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[inMemRedirectUnavailable],\n    },\n});\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\nfunction createBrowserConfigurationAuthError(errorCode) {\n    return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserStorage {\n    constructor(cacheLocation) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n    validateWindowStorage(cacheLocation) {\n        if ((cacheLocation !== BrowserCacheLocation.LocalStorage &&\n            cacheLocation !== BrowserCacheLocation.SessionStorage) ||\n            !window[cacheLocation]) {\n            throw createBrowserConfigurationAuthError(storageNotSupported);\n        }\n    }\n    getItem(key) {\n        return this.windowStorage.getItem(key);\n    }\n    setItem(key, value) {\n        this.windowStorage.setItem(key, value);\n    }\n    removeItem(key) {\n        this.windowStorage.removeItem(key);\n    }\n    getKeys() {\n        return Object.keys(this.windowStorage);\n    }\n    containsKey(key) {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Extracts the BrowserStateObject from the state string.\n * @param browserCrypto\n * @param state\n */\nfunction extractBrowserRequestState(browserCrypto, state) {\n    if (!state) {\n        return null;\n    }\n    try {\n        const requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\n        return requestStateObj.libraryState.meta;\n    }\n    catch (e) {\n        throw createClientAuthError(invalidState);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nclass BrowserCacheManager extends CacheManager {\n    constructor(clientId, cacheConfig, cryptoImpl, logger, staticAuthorityOptions) {\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\n        // Cookie life calculation (hours * minutes * seconds * ms)\n        this.COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation, this.cacheConfig.cacheLocation);\n        // Migrate cache entries from older versions of MSAL.\n        if (cacheConfig.cacheMigrationEnabled) {\n            this.migrateCacheEntries();\n            this.createKeyMaps();\n        }\n    }\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    setupBrowserStorage(cacheLocation) {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    return new BrowserStorage(cacheLocation);\n                }\n                catch (e) {\n                    this.logger.verbose(e);\n                    break;\n                }\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\n     * @param temporaryCacheLocation\n     * @param cacheLocation\n     */\n    setupTemporaryCacheStorage(temporaryCacheLocation, cacheLocation) {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(temporaryCacheLocation ||\n                        BrowserCacheLocation.SessionStorage);\n                }\n                catch (e) {\n                    this.logger.verbose(e);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    migrateCacheEntries() {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n        const values = [\n            idTokenValue,\n            clientInfoValue,\n            errorValue,\n            errorDescValue,\n        ];\n        const keysToMigrate = [\n            PersistentCacheKeys.ID_TOKEN,\n            PersistentCacheKeys.CLIENT_INFO,\n            PersistentCacheKeys.ERROR,\n            PersistentCacheKeys.ERROR_DESC,\n        ];\n        keysToMigrate.forEach((cacheKey, index) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    migrateCacheEntry(newKey, value) {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n    /**\n     * Searches all cache entries for MSAL accounts and creates the account key map\n     * This is used to migrate users from older versions of MSAL which did not create the map.\n     * @returns\n     */\n    createKeyMaps() {\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        const tokenKeys = this.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\n        if (accountKeys && tokenKeys) {\n            this.logger.verbose(\"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\");\n            // Key maps already exist, no need to iterate through cache\n            return;\n        }\n        const allKeys = this.browserStorage.getKeys();\n        allKeys.forEach((key) => {\n            if (this.isCredentialKey(key)) {\n                // Get item, parse, validate and write key to map\n                const value = this.getItem(key);\n                if (value) {\n                    const credObj = this.validateAndParseJson(value);\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\n                        switch (credObj[\"credentialType\"]) {\n                            case CredentialType.ID_TOKEN:\n                                if (isIdTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`);\n                                    const idTokenEntity = credObj;\n                                    const newKey = this.updateCredentialCacheKey(key, idTokenEntity);\n                                    this.addTokenKey(newKey, CredentialType.ID_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`);\n                                }\n                                break;\n                            case CredentialType.ACCESS_TOKEN:\n                            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                                if (isAccessTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`);\n                                    const accessTokenEntity = credObj;\n                                    const newKey = this.updateCredentialCacheKey(key, accessTokenEntity);\n                                    this.addTokenKey(newKey, CredentialType.ACCESS_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`);\n                                }\n                                break;\n                            case CredentialType.REFRESH_TOKEN:\n                                if (isRefreshTokenEntity(credObj)) {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`);\n                                    const refreshTokenEntity = credObj;\n                                    const newKey = this.updateCredentialCacheKey(key, refreshTokenEntity);\n                                    this.addTokenKey(newKey, CredentialType.REFRESH_TOKEN);\n                                    return;\n                                }\n                                else {\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\");\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`);\n                                }\n                                break;\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\n                        }\n                    }\n                }\n            }\n            if (this.isAccountKey(key)) {\n                const value = this.getItem(key);\n                if (value) {\n                    const accountObj = this.validateAndParseJson(value);\n                    if (accountObj &&\n                        AccountEntity.isAccountEntity(accountObj)) {\n                        this.logger.trace(\"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\");\n                        this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`);\n                        this.addAccountKeyToMap(key);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    validateAndParseJson(jsonValue) {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key) {\n        return this.browserStorage.getItem(key);\n    }\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key, value) {\n        this.browserStorage.setItem(key, value);\n    }\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey, logger) {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const accountEntity = this.getCachedAccountEntity(accountKey);\n        return this.updateOutdatedCachedAccount(accountKey, accountEntity, logger);\n    }\n    /**\n     * Reads account from cache, deserializes it into an account entity and returns it.\n     * If account is not found from the key, returns null and removes key from map.\n     * @param accountKey\n     * @returns\n     */\n    getCachedAccountEntity(accountKey) {\n        const serializedAccount = this.getItem(accountKey);\n        if (!serializedAccount) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n        return CacheManager.toObject(new AccountEntity(), parsedAccount);\n    }\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    setAccount(account) {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n        this.addAccountKeyToMap(key);\n    }\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys() {\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        if (accountKeys) {\n            return JSON.parse(accountKeys);\n        }\n        this.logger.verbose(\"BrowserCacheManager.getAccountKeys - No account keys found\");\n        return [];\n    }\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key) {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${key}`);\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key added\");\n        }\n        else {\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key already exists in map\");\n        }\n    }\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key) {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`);\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap account key removed\");\n        }\n        else {\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\");\n        }\n    }\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key) {\n        void super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n    /**\n     * Remove account entity from the platform cache if it's outdated\n     * @param accountKey\n     */\n    removeOutdatedAccount(accountKey) {\n        this.removeItem(accountKey);\n        this.removeAccountKeyFromMap(accountKey);\n    }\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key) {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\n    }\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key) {\n        void super.removeAccessToken(key);\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\n    }\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key) {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\n    }\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys() {\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\n        const item = this.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\n        if (item) {\n            const tokenKeys = this.validateAndParseJson(item);\n            if (tokenKeys &&\n                tokenKeys.hasOwnProperty(\"idToken\") &&\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\n                tokenKeys.hasOwnProperty(\"refreshToken\")) {\n                return tokenKeys;\n            }\n            else {\n                this.logger.error(\"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\");\n            }\n        }\n        else {\n            this.logger.verbose(\"BrowserCacheManager.getTokenKeys - No token keys found\");\n        }\n        return {\n            idToken: [],\n            accessToken: [],\n            refreshToken: [],\n        };\n    }\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key, type) {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - idToken added to map\");\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - accessToken added to map\");\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - refreshToken added to map\");\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\n                throw createClientAuthError(unexpectedCredentialType);\n        }\n        this.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\n    }\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key, type) {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`);\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken removed from map\");\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`);\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken removed from map\");\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`);\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken removed from map\");\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                }\n                else {\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\");\n                }\n                break;\n            default:\n                this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\n                throw createClientAuthError(unexpectedCredentialType);\n        }\n        this.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\n    }\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey) {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\n        return parsedIdToken;\n    }\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken) {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = generateCredentialKey(idToken);\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n    }\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey) {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (!parsedAccessToken ||\n            !isAccessTokenEntity(parsedAccessToken)) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\n        return parsedAccessToken;\n    }\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken) {\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\n        const accessTokenKey = generateCredentialKey(accessToken);\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n    }\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(refreshTokenKey) {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (!parsedRefreshToken ||\n            !isRefreshTokenEntity(parsedRefreshToken)) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\n        return parsedRefreshToken;\n    }\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken) {\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\n        const refreshTokenKey = generateCredentialKey(refreshToken);\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n    }\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey) {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata ||\n            !isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return parsedMetadata;\n    }\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata) {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = generateAppMetadataKey(appMetadata);\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(serverTelemetryKey) {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        const parsedEntity = this.validateAndParseJson(value);\n        if (!parsedEntity ||\n            !isServerTelemetryEntity(serverTelemetryKey, parsedEntity)) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return parsedEntity;\n    }\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n    /**\n     *\n     */\n    getAuthorityMetadata(key) {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (parsedMetadata &&\n            isAuthorityMetadataEntity(key, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\n            return parsedMetadata;\n        }\n        return null;\n    }\n    /**\n     *\n     */\n    getAuthorityMetadataKeys() {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU, wrapperVersion) {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\n    }\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata() {\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\n            Constants.EMPTY_STRING;\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\n            Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key, entity) {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n    /**\n     * Gets the active account\n     */\n    getActiveAccount() {\n        const activeAccountKeyFilters = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) {\n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\");\n            const activeAccountKeyLocal = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if (!activeAccountValueLocal) {\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\n                return null;\n            }\n            const activeAccount = this.getAccountInfoFilteredBy({\n                localAccountId: activeAccountValueLocal,\n            });\n            if (activeAccount) {\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\");\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\");\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters);\n        if (activeAccountValueObj) {\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: Active account filters schema found\");\n            return this.getAccountInfoFilteredBy({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId,\n                tenantId: activeAccountValueObj.tenantId,\n            });\n        }\n        this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\n        return null;\n    }\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account) {\n        const activeAccountKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\n        const activeAccountKeyLocal = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n                tenantId: account.tenantId,\n            };\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\n            this.browserStorage.setItem(activeAccountKeyLocal, account.localAccountId);\n        }\n        else {\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey) {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (!parsedThrottlingCache ||\n            !isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return parsedThrottlingCache;\n    }\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey, generateKey) {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\n                return itemCookie;\n            }\n        }\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\n                    return item;\n                }\n            }\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\n        return value;\n    }\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(cacheKey, value, generateKey) {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\n            this.setItemCookie(key, value);\n        }\n    }\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key) {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\n            this.clearItemCookie(key);\n        }\n    }\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key) {\n        return (this.browserStorage.containsKey(key) ||\n            this.temporaryCacheStorage.containsKey(key));\n    }\n    /**\n     * Gets all keys in window.\n     */\n    getKeys() {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys(),\n        ];\n    }\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear() {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if ((this.browserStorage.containsKey(cacheKey) ||\n                this.temporaryCacheStorage.containsKey(cacheKey)) &&\n                (cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                    cacheKey.indexOf(this.clientId) !== -1)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        this.internalStorage.clear();\n    }\n    /**\n     * Clears all access tokes that have claims prior to saving the current one\n     * @param performanceClient {IPerformanceClient}\n     * @returns\n     */\n    async clearTokensAndKeysWithClaims(performanceClient) {\n        performanceClient.addQueueMeasurement(PerformanceEvents.ClearTokensAndKeysWithClaims);\n        const tokenKeys = this.getTokenKeys();\n        const removedAccessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            // if the access token has claims in its key, remove the token key and the token\n            const credential = this.getAccessTokenCredential(key);\n            if (credential?.requestedClaimsHash &&\n                key.includes(credential.requestedClaimsHash.toLowerCase())) {\n                removedAccessTokens.push(this.removeAccessToken(key));\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        // warn if any access tokens are removed\n        if (removedAccessTokens.length > 0) {\n            this.logger.warning(`${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`);\n        }\n    }\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName, cookieValue, expires) {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n        document.cookie = cookieStr;\n    }\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName) {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies() {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie) => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName) {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays) {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache() {\n        return this.browserStorage;\n    }\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache() {\n        // sets nothing\n    }\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key) {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) ||\n                StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n        return JSON.stringify(key);\n    }\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString) {\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\n    }\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString) {\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\n    }\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString) {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\n    }\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState) {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(state, nonce, authorityInstance, loginHint, account) {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n        if (account) {\n            const ccsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n        else if (loginHint) {\n            const ccsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN,\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n    }\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state) {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (state) {\n            this.getKeys().forEach((key) => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n            // delete generic interactive request parameters\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n        this.setInteractionInProgress(false);\n    }\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString) {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType) {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = extractBrowserRequestState(this.cryptoImpl, stateValue);\n            if (parsedState &&\n                parsedState.interactionType === interactionType) {\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n    cacheCodeRequest(authCodeRequest) {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\n    }\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state) {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\n        if (!encodedTokenRequest) {\n            throw createBrowserAuthError(noTokenRequestCacheError);\n        }\n        let parsedRequest;\n        try {\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\n        }\n        catch (e) {\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\n            this.logger.error(`Parsing cached token request threw with error: ${e}`);\n            throw createBrowserAuthError(unableToParseTokenRequestCacheError);\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        // Get cached authority and use if no authority is cached with request.\n        if (!parsedRequest.authority) {\n            const authorityCacheKey = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw createBrowserAuthError(noCachedAuthorityError);\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n        return parsedRequest;\n    }\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest() {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, true);\n        if (!cachedRequest) {\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\n            return null;\n        }\n        const parsedRequest = this.validateAndParseJson(cachedRequest);\n        if (!parsedRequest) {\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\n            return null;\n        }\n        return parsedRequest;\n    }\n    isInteractionInProgress(matchClientId) {\n        const clientId = this.getInteractionInProgress();\n        if (matchClientId) {\n            return clientId === this.clientId;\n        }\n        else {\n            return !!clientId;\n        }\n    }\n    getInteractionInProgress() {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n    setInteractionInProgress(inProgress) {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw createBrowserAuthError(interactionInProgress);\n            }\n            else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        }\n        else if (!inProgress &&\n            this.getInteractionInProgress() === this.clientId) {\n            this.removeItem(key);\n        }\n    }\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     * @deprecated\n     */\n    getLegacyLoginHint() {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ADAL_ID_TOKEN);\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ID_TOKEN, true);\n        if (msalIdTokenString) {\n            this.removeItem(this.generateCacheKey(PersistentCacheKeys.ID_TOKEN));\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const idTokenClaims = extractTokenClaims(cachedIdTokenString, base64Decode);\n            if (idTokenClaims.preferred_username) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\n                return idTokenClaims.preferred_username;\n            }\n            else if (idTokenClaims.upn) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\n                return idTokenClaims.upn;\n            }\n            else {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(currentCacheKey, credential) {\n        const updatedCacheKey = generateCredentialKey(credential);\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\n                return updatedCacheKey;\n            }\n            else {\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\n            }\n        }\n        return currentCacheKey;\n    }\n    /**\n     * Returns application id as redirect context during AcquireTokenRedirect flow.\n     */\n    getRedirectRequestContext() {\n        return this.getTemporaryCache(TemporaryCacheKeys.REDIRECT_CONTEXT, true);\n    }\n    /**\n     * Sets application id as the redirect context during AcquireTokenRedirect flow.\n     * @param value\n     */\n    setRedirectRequestContext(value) {\n        this.setTemporaryCache(TemporaryCacheKeys.REDIRECT_CONTEXT, value, true);\n    }\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(result, request) {\n        const idTokenEntity = createIdTokenEntity(result.account?.homeAccountId, result.account?.environment, result.idToken, this.clientId, result.tenantId);\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n        const accessTokenEntity = createAccessTokenEntity(result.account?.homeAccountId, result.account.environment, result.accessToken, this.clientId, result.tenantId, result.scopes.join(\" \"), result.expiresOn?.getTime() || 0, result.extExpiresOn?.getTime() || 0, base64Decode, undefined, // refreshOn\n        result.tokenType, undefined, // userAssertionHash\n        request.sshKid, request.claims, claimsHash);\n        const cacheRecord = new CacheRecord(undefined, idTokenEntity, accessTokenEntity);\n        return this.saveCacheRecord(cacheRecord);\n    }\n}\nconst DEFAULT_BROWSER_CACHE_MANAGER = (clientId, logger) => {\n    const cacheOptions = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger);\n};\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n};\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventHandler {\n    constructor(logger, browserCrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        if (typeof window !== \"undefined\") {\n            const callbackId = createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n            return callbackId;\n        }\n        return null;\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        }\n        else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        }\n        else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType, interactionType, payload, error) {\n        if (typeof window !== \"undefined\") {\n            const message = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n            this.logger.info(`Emitting event: ${eventType}`);\n            this.eventCallbacks.forEach((callback, callbackId) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    handleAccountCacheChange(e) {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" ||\n                !AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject(new AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            }\n            else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        }\n        catch (e) {\n            return;\n        }\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BaseInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || createNewGuid();\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version$3, this.correlationId);\n        this.performanceClient = performanceClient;\n    }\n    async clearCacheOnLogout(account) {\n        if (account) {\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            }\n            catch (error) {\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            }\n        }\n        else {\n            try {\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            }\n            catch (e) {\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            }\n        }\n    }\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    async initializeBaseRequest(request, account) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, this.correlationId);\n        const authority = request.authority || this.config.auth.authority;\n        if (account) {\n            await this.validateRequestAuthority(authority, account);\n        }\n        const scopes = [...((request && request.scopes) || [])];\n        const validatedRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes,\n        };\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose('Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request');\n        }\n        else {\n            if (validatedRequest.authenticationScheme ===\n                AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                    throw createClientConfigurationError(missingSshJwk);\n                }\n                if (!request.sshKid) {\n                    throw createClientConfigurationError(missingSshKid);\n                }\n            }\n            this.logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\n        }\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\n        if (this.config.cache.claimsBasedCachingEnabled &&\n            request.claims &&\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n            !StringUtils.isEmptyObj(request.claims)) {\n            validatedRequest.requestedClaimsHash =\n                await this.browserCrypto.hashString(request.claims);\n        }\n        return validatedRequest;\n    }\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri) {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri ||\n            this.config.auth.redirectUri ||\n            getCurrentUri();\n        return UrlString.getAbsoluteUrl(redirectUri, getCurrentUri());\n    }\n    /*\n     * If authority provided in the request does not match environment/authority specified\n     * in the account or MSAL config, we throw an error.\n     */\n    async validateRequestAuthority(authority, account) {\n        const discoveredAuthority = await this.getDiscoveredAuthority(authority);\n        if (!discoveredAuthority.isAlias(account.environment)) {\n            throw createClientConfigurationError(authorityMismatch);\n        }\n    }\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    initializeServerTelemetryManager(apiId, forceRefresh) {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n    }\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     */\n    async getDiscoveredAuthority(requestAuthority) {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n        };\n        if (requestAuthority) {\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger);\n        }\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\n        return AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n/**\n * This file defines APIs to generate PKCE codes and code verifiers.\n */\n/**\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n */\nasync function generatePkceCodes(performanceClient, logger, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.GeneratePkceCodes, correlationId);\n    const codeVerifier = invoke(generateCodeVerifier, PerformanceEvents.GenerateCodeVerifier, logger, performanceClient, correlationId)(performanceClient, logger, correlationId);\n    const codeChallenge = await invokeAsync(generateCodeChallengeFromVerifier, PerformanceEvents.GenerateCodeChallengeFromVerifier, logger, performanceClient, correlationId)(codeVerifier, performanceClient, logger, correlationId);\n    return {\n        verifier: codeVerifier,\n        challenge: codeChallenge,\n    };\n}\n/**\n * Generates a random 32 byte buffer and returns the base64\n * encoded string to be used as a PKCE Code Verifier\n */\nfunction generateCodeVerifier(performanceClient, logger, correlationId) {\n    try {\n        // Generate random values as utf-8\n        const buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n        invoke(getRandomValues$1, PerformanceEvents.GetRandomValues, logger, performanceClient, correlationId)(buffer);\n        // encode verifier as base64\n        const pkceCodeVerifierB64 = urlEncodeArr(buffer);\n        return pkceCodeVerifierB64;\n    }\n    catch (e) {\n        throw createBrowserAuthError(pkceNotCreated);\n    }\n}\n/**\n * Creates a base64 encoded PKCE Code Challenge string from the\n * hash created from the PKCE Code Verifier supplied\n */\nasync function generateCodeChallengeFromVerifier(pkceCodeVerifier, performanceClient, logger, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.GenerateCodeChallengeFromVerifier, correlationId);\n    try {\n        // hashed verifier\n        const pkceHashedCodeVerifier = await invokeAsync(sha256Digest, PerformanceEvents.Sha256Digest, logger, performanceClient, correlationId)(pkceCodeVerifier, performanceClient, correlationId);\n        // encode hash as base64\n        return urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n    }\n    catch (e) {\n        throw createBrowserAuthError(pkceNotCreated);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nclass StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    async initializeAuthorizationCodeRequest(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.correlationId);\n        const generatedPkceParams = await invokeAsync(generatePkceCodes, PerformanceEvents.GeneratePkceCodes, this.logger, this.performanceClient, this.correlationId)(this.performanceClient, this.logger, this.correlationId);\n        const authCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier,\n        };\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n        return authCodeRequest;\n    }\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    initializeLogoutRequest(logoutRequest) {\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\n        const validLogoutRequest = {\n            correlationId: this.correlationId || createNewGuid(),\n            ...logoutRequest,\n        };\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\n                    if (logoutHint) {\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                }\n                else {\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\n                }\n            }\n            else {\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\n            }\n        }\n        else {\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\n        }\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, getCurrentUri());\n            }\n            else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\n            }\n            else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, getCurrentUri());\n            }\n            else {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(getCurrentUri(), getCurrentUri());\n            }\n        }\n        else {\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\n        }\n        return validLogoutRequest;\n    }\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    getLogoutHintFromIdTokenClaims(account) {\n        const idTokenClaims = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            }\n            else {\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\n            }\n        }\n        else {\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\n        }\n        return null;\n    }\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createAuthCodeClient(serverTelemetryManager, authorityUrl, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.correlationId);\n        // Create auth module.\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new AuthorizationCodeClient(clientConfig, this.performanceClient);\n    }\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getClientConfiguration(serverTelemetryManager, requestAuthority, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        const discoveredAuthority = await invokeAsync(this.getDiscoveredAuthority.bind(this), PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.logger, this.performanceClient, this.correlationId)(requestAuthority, requestAzureCloudOptions);\n        const logger = this.config.system.loggerOptions;\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version$3,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    async getDiscoveredAuthority(requestAuthority, requestAzureCloudOptions) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n        };\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority\n            ? requestAuthority\n            : this.config.auth.authority;\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority(userAuthority, requestAzureCloudOptions || this.config.auth.azureCloudOptions);\n        return invokeAsync(AuthorityFactory.createDiscoveredInstance.bind(AuthorityFactory), PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, this.logger, this.performanceClient, this.correlationId)(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger, this.performanceClient, this.correlationId);\n    }\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    async initializeAuthorizationRequest(request, interactionType) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.correlationId);\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState = {\n            interactionType: interactionType,\n        };\n        const state = ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || Constants.EMPTY_STRING, browserState);\n        const baseRequest = await invokeAsync(this.initializeBaseRequest.bind(this), PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)(request);\n        const validatedRequest = {\n            ...baseRequest,\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType,\n        };\n        const account = request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\n            validatedRequest.account = account;\n        }\n        // Check for ADAL/MSAL v1 SSO\n        if (!validatedRequest.loginHint && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n        return validatedRequest;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst contentError = \"ContentError\";\nconst userSwitch = \"user_switch\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Status Codes that can be thrown by WAM\nconst USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\nconst USER_CANCEL = \"USER_CANCEL\";\nconst NO_NETWORK = \"NO_NETWORK\";\nconst PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\nconst DISABLED = \"DISABLED\";\nconst ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeAuthErrorMessages = {\n    [userSwitch]: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n};\nclass NativeAuthError extends AuthError {\n    constructor(errorCode, description, ext) {\n        super(errorCode, description);\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n}\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nfunction isFatalNativeAuthError(error) {\n    if (error.ext &&\n        error.ext.status &&\n        (error.ext.status === PERSISTENT_ERROR ||\n            error.ext.status === DISABLED)) {\n        return true;\n    }\n    if (error.ext &&\n        error.ext.error &&\n        error.ext.error === INVALID_METHOD_ERROR) {\n        return true;\n    }\n    switch (error.errorCode) {\n        case contentError:\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nfunction createNativeAuthError(code, description, ext) {\n    if (ext && ext.status) {\n        switch (ext.status) {\n            case ACCOUNT_UNAVAILABLE:\n                return createInteractionRequiredAuthError(nativeAccountUnavailable);\n            case USER_INTERACTION_REQUIRED:\n                return new InteractionRequiredAuthError(code, description);\n            case USER_CANCEL:\n                return createBrowserAuthError(userCancelled);\n            case NO_NETWORK:\n                return createBrowserAuthError(noNetworkConnectivity);\n        }\n    }\n    return new NativeAuthError(code, NativeAuthErrorMessages[code] || description, ext);\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(silentRequest) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Silent auth client created\");\n        try {\n            const response = await invokeAsync(silentAuthClient.acquireCachedToken.bind(silentAuthClient), PerformanceEvents.SilentFlowClientAcquireCachedToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\n            const authResponse = response[0];\n            this.performanceClient.addFields({\n                fromCache: true,\n            }, silentRequest.correlationId);\n            return authResponse;\n        }\n        catch (error) {\n            if (error instanceof BrowserAuthError &&\n                error.errorCode === cryptoKeyNotFound) {\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n            }\n            throw error;\n        }\n    }\n    /**\n     * API to silenty clear the browser cache.\n     * @param logoutRequest\n     */\n    logout(logoutRequest) {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\n    }\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createSilentFlowClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new SilentFlowClient(clientConfig, this.performanceClient);\n    }\n    async initializeSilentRequest(request, account) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeSilentRequest, this.correlationId);\n        const baseRequest = await invokeAsync(this.initializeBaseRequest.bind(this), PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)(request, account);\n        return {\n            ...request,\n            ...baseRequest,\n            account: account,\n            forceRefresh: request.forceRefresh || false,\n        };\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst BrokerServerParamKeys = {\n    BROKER_CLIENT_ID: \"brk_client_id\",\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\n};\nclass NativeInteractionClient extends BaseInteractionClient {\n    constructor(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n    }\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        const reqTimestamp = TimeUtils.nowSeconds();\n        // initialize native request\n        const nativeRequest = await this.initializeNativeRequest(request);\n        // check if the tokens can be retrieved from internal cache\n        try {\n            const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: false,\n                fromCache: true,\n            });\n            return result;\n        }\n        catch (e) {\n            // continue with a native call for any and all errors\n            this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\n        }\n        // fall back to native calls\n        const messageBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n        const response = await this.nativeMessageHandler.sendMessage(messageBody);\n        const validatedResponse = this.validateNativeResponse(response);\n        return this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\n            .then((result) => {\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: true,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((error) => {\n            nativeATMeasurement.end({\n                success: false,\n                errorCode: error.errorCode,\n                subErrorCode: error.subError,\n                isNativeBroker: true,\n            });\n            throw error;\n        });\n    }\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    createSilentCacheRequest(request, cachedAccount) {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    async acquireTokensFromCache(nativeAccountId, request) {\n        if (!nativeAccountId) {\n            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\n            throw createClientAuthError(noAccountFound);\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getBaseAccountInfo({\n            nativeAccountId,\n        });\n        if (!account) {\n            throw createClientAuthError(noAccountFound);\n        }\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(request, account);\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\n            const fullAccount = {\n                ...account,\n                idTokenClaims: result?.idTokenClaims,\n            };\n            return {\n                ...result,\n                account: fullAccount,\n            };\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request) {\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n        const nativeRequest = await this.initializeNativeRequest(request);\n        const messageBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n        try {\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        }\n        catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n        const navigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise() {\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n            return null;\n        }\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n            return null;\n        }\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\n        }\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n        const messageBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: request,\n        };\n        const reqTimestamp = TimeUtils.nowSeconds();\n        try {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(response, request, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return await result;\n        }\n        catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout() {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    async handleNativeResponse(response, request, reqTimestamp) {\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw createNativeAuthError(userSwitch);\n        }\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n        // generate identifiers\n        const idTokenClaims = extractTokenClaims(response.id_token, base64Decode);\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenClaims);\n        const baseAccount = buildAccountToCache(this.browserStorage, authority, homeAccountIdentifier, idTokenClaims, base64Decode, response.client_info, undefined, // environment\n        idTokenClaims.tid, undefined, // auth code payload\n        response.account.id, this.logger);\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(response, request, idTokenClaims, baseAccount, authority.canonicalAuthority, reqTimestamp);\n        // cache accounts and tokens in the appropriate storage\n        this.cacheAccount(baseAccount);\n        this.cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, result.accessToken, result.tenantId, reqTimestamp);\n        return result;\n    }\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    createHomeAccountIdentifier(response, idTokenClaims) {\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenClaims);\n        return homeAccountIdentifier;\n    }\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(response, request) {\n        return response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n    }\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(response, request) {\n        if (request.tokenType === AuthenticationScheme.POP) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n                return response.shr;\n            }\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const shrParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw createClientAuthError(keyIdMissing);\n            }\n            return popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\n        }\n        else {\n            return response.access_token;\n        }\n    }\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    async generateAuthenticationResult(response, request, idTokenClaims, accountEntity, authority, reqTimestamp) {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(response);\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n        const accountProperties = response.account.properties || {};\n        const uid = accountProperties[\"UID\"] ||\n            idTokenClaims.oid ||\n            idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n        const tid = accountProperties[\"TenantId\"] ||\n            idTokenClaims.tid ||\n            Constants.EMPTY_STRING;\n        const accountInfo = updateAccountTenantProfileData(accountEntity.getAccountInfo(), undefined, // tenantProfile optional\n        idTokenClaims);\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(response, request);\n        const tokenType = request.tokenType === AuthenticationScheme.POP\n            ? AuthenticationScheme.POP\n            : AuthenticationScheme.BEARER;\n        const result = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountInfo,\n            idToken: response.id_token,\n            idTokenClaims: idTokenClaims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n        return result;\n    }\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    cacheAccount(accountEntity) {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        this.browserStorage.setAccount(accountEntity);\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\n        });\n    }\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, responseAccessToken, tenantId, reqTimestamp) {\n        const cachedIdToken = createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || \"\", request.clientId, idTokenClaims.tid || \"\");\n        // cache accessToken in inmemory storage\n        const expiresIn = request.tokenType === AuthenticationScheme.POP\n            ? Constants.SHR_NONCE_VALIDITY\n            : (typeof response.expires_in === \"string\"\n                ? parseInt(response.expires_in, 10)\n                : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(response, request);\n        const cachedAccessToken = createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenClaims.tid || tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, base64Decode);\n        const nativeCacheRecord = new CacheRecord(undefined, cachedIdToken, cachedAccessToken);\n        void this.nativeStorageManager.saveCacheRecord(nativeCacheRecord, request.storeInCache);\n    }\n    addTelemetryFromNativeResponse(response) {\n        const mats = this.getMATSFromResponse(response);\n        if (!mats) {\n            return null;\n        }\n        this.performanceClient.addFields({\n            extensionId: this.nativeMessageHandler.getExtensionId(),\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\n            matsBrokerVersion: mats.broker_version,\n            matsAccountJoinOnStart: mats.account_join_on_start,\n            matsAccountJoinOnEnd: mats.account_join_on_end,\n            matsDeviceJoin: mats.device_join,\n            matsPromptBehavior: mats.prompt_behavior,\n            matsApiErrorCode: mats.api_error_code,\n            matsUiVisible: mats.ui_visible,\n            matsSilentCode: mats.silent_code,\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\n            matsSilentMessage: mats.silent_message,\n            matsSilentStatus: mats.silent_status,\n            matsHttpStatus: mats.http_status,\n            matsHttpEventCount: mats.http_event_count,\n        }, this.correlationId);\n        return mats;\n    }\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    validateNativeResponse(response) {\n        if (response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")) {\n            return response;\n        }\n        else {\n            throw createAuthError(unexpectedError, \"Response missing expected properties.\");\n        }\n    }\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    getMATSFromResponse(response) {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            }\n            catch (e) {\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    isResponseFromCache(mats) {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\n            return false;\n        }\n        return !!mats.is_cached;\n    }\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    async initializeNativeRequest(request) {\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n        const authority = request.authority || this.config.auth.authority;\n        if (request.account) {\n            await this.validateRequestAuthority(authority, request.account);\n        }\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\n                    return PromptValue.NONE;\n            }\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\n                return undefined;\n            }\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                    return request.prompt;\n                default:\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\n                    throw createBrowserAuthError(nativePromptNotSupported);\n            }\n        };\n        const validatedRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n        };\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            NativeConstants.MATS_TELEMETRY;\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, this.correlationId)(shrParameters, this.logger);\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n        return validatedRequest;\n    }\n    /**\n     * Handles extra broker request parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    handleExtraBrokerParams(request) {\n        if (!request.extraParameters) {\n            return;\n        }\n        if (request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_CLIENT_ID) &&\n            request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_REDIRECT_URI) &&\n            request.extraParameters.hasOwnProperty(CLIENT_ID)) {\n            const child_client_id = request.extraParameters[CLIENT_ID];\n            const child_redirect_uri = request.redirectUri;\n            const brk_redirect_uri = request.extraParameters[BrokerServerParamKeys.BROKER_REDIRECT_URI];\n            request.extraParameters = {\n                child_client_id,\n                child_redirect_uri,\n            };\n            request.redirectUri = brk_redirect_uri;\n        }\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NativeMessageHandler {\n    constructor(logger, handshakeTimeoutMs, performanceClient, extensionId) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(PerformanceEvents.NativeMessageHandlerHandshake);\n    }\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body\n     */\n    async sendMessage(body) {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: body,\n        };\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\n        this.messageChannel.port1.postMessage(req);\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n    }\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(logger, handshakeTimeoutMs, performanceClient) {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, NativeConstants.PREFERRED_EXTENSION_ID);\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        }\n        catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient);\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n    /**\n     * Send handshake request helper.\n     */\n    async sendHandshakeRequest() {\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n        const req = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\"message\", this.windowListener, false);\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(createBrowserAuthError(nativeHandshakeTimeout));\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    onWindowMessage(event) {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n        const request = event.data;\n        if (!request.channel ||\n            request.channel !== NativeConstants.CHANNEL_ID) {\n            return;\n        }\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`);\n                return;\n            }\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(request.extensionId\n                ? `Extension with id: ${request.extensionId} not installed`\n                : \"No extension installed\");\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(createBrowserAuthError(nativeExtensionNotInstalled));\n        }\n    }\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    onChannelMessage(event) {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\n        try {\n            const method = request.body.method;\n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\n                if (response.status !== \"Success\") {\n                    resolver.reject(createNativeAuthError(response.code, response.description, response.ext));\n                }\n                else if (response.result) {\n                    if (response.result[\"code\"] &&\n                        response.result[\"description\"]) {\n                        resolver.reject(createNativeAuthError(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\n                    }\n                    else {\n                        resolver.resolve(response.result);\n                    }\n                }\n                else {\n                    throw createAuthError(unexpectedError, \"Event does not contain result.\");\n                }\n                this.resolvers.delete(request.responseId);\n            }\n            else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`);\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        }\n        catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err}`);\n            this.logger.errorPii(`Unable to parse ${event}`);\n            if (resolver) {\n                resolver.reject(err);\n            }\n            else if (handshakeResolver) {\n                handshakeResolver.reject(err);\n            }\n        }\n    }\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId() {\n        return this.extensionId;\n    }\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion() {\n        return this.extensionVersion;\n    }\n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme\n     */\n    static isNativeAvailable(config, logger, nativeExtensionProvider, authenticationScheme) {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\n            // Developer disabled WAM\n            return false;\n        }\n        if (!nativeExtensionProvider) {\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\n            // Extension is not available\n            return false;\n        }\n        if (authenticationScheme) {\n            switch (authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\n                    return true;\n                default:\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\n                    return false;\n            }\n        }\n        return true;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nclass InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponse(response, request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.HandleCodeResponse, request.correlationId);\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(response, request.state);\n        }\n        catch (e) {\n            if (e instanceof ServerError &&\n                e.subError === userCancelled) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(userCancelled);\n            }\n            else {\n                throw e;\n            }\n        }\n        return invokeAsync(this.handleCodeResponseFromServer.bind(this), PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)(authCodeResponse, request);\n    }\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(authCodeResponse, request, validateNonce = true) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.HandleCodeResponseFromServer, request.correlationId);\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(this.authModule.updateAuthority.bind(this.authModule), PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, request.correlationId)(authCodeResponse.cloud_instance_host_name, request.correlationId);\n        }\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\n            authCodeResponse.nonce = request.nonce || undefined;\n        }\n        authCodeResponse.state = request.state;\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        }\n        else {\n            const ccsCred = this.createCcsCredentials(request);\n            if (ccsCred) {\n                this.authCodeRequest.ccsCredential = ccsCred;\n            }\n        }\n        // Acquire token with retrieved code.\n        const tokenResponse = (await invokeAsync(this.authModule.acquireToken.bind(this.authModule), PerformanceEvents.AuthClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(this.authCodeRequest, authCodeResponse));\n        return tokenResponse;\n    }\n    /**\n     * Build ccs creds if available\n     */\n    createCcsCredentials(request) {\n        if (request.account) {\n            return {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n        }\n        else if (request.loginHint) {\n            return {\n                credential: request.loginHint,\n                type: CcsCredentialType.UPN,\n            };\n        }\n        return null;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction deserializeResponse(responseString, responseLocation, logger) {\n    // Deserialize hash fragment response parameters.\n    const serverParams = getDeserializedResponse(responseString);\n    if (!serverParams) {\n        if (!stripLeadingHashOrQuery(responseString)) {\n            // Hash or Query string is empty\n            logger.error(`The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`);\n            throw createBrowserAuthError(hashEmptyError);\n        }\n        else {\n            logger.error(`A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`);\n            logger.errorPii(`The ${responseLocation} detected is: ${responseString}`);\n            throw createBrowserAuthError(hashDoesNotContainKnownProperties);\n        }\n    }\n    return serverParams;\n}\n/**\n * Returns the interaction type that the response object belongs to\n */\nfunction validateInteractionType(response, browserCrypto, interactionType) {\n    if (!response.state) {\n        throw createBrowserAuthError(noStateInHash);\n    }\n    const platformStateObj = extractBrowserRequestState(browserCrypto, response.state);\n    if (!platformStateObj) {\n        throw createBrowserAuthError(unableToParseState);\n    }\n    if (platformStateObj.interactionType !== interactionType) {\n        throw createBrowserAuthError(stateInteractionTypeMismatch);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass PopupClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request) {\n        try {\n            const popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n            }\n            else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n            }\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest) {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n            }\n            else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n            }\n        }\n        catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup) {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n        const validRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, InteractionType.Popup);\n        preconnect(validRequest.authority);\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\n            // Initialize the client\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement =\n                    this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n            }\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker,\n            });\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters = {\n                popup,\n                popupName,\n                popupWindowAttributes,\n            };\n            const popupWindow = this.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow }, null);\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const responseString = await this.monitorPopupForHash(popupWindow);\n            const serverParams = invoke(deserializeResponse, PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, this.config.auth.OIDCOptions.serverResponseType, this.logger);\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n            if (serverParams.accountId) {\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                    });\n                }\n                if (!this.nativeMessageHandler) {\n                    throw createBrowserAuthError(nativeConnectionNotEstablished);\n                }\n                const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\n                const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, validRequest.state);\n                return await nativeInteractionClient.acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                });\n            }\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponse(serverParams, validRequest);\n            return result;\n        }\n        catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    async logoutPopupAsync(validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n            // Initialize the client\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, requestAuthority);\n            try {\n                authClient.authority.endSessionEndpoint;\n            }\n            catch {\n                if (validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                    void this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\n                    this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions = {\n                            apiId: ApiId.logoutPopup,\n                            timeout: this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, getCurrentUri());\n                        await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n                    }\n                    if (popup) {\n                        popup.close();\n                    }\n                    return;\n                }\n            }\n            // Create logout string and navigate user window to logout.\n            const logoutUri = authClient.getLogoutUri(validRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {\n                popupName,\n                popupWindowAttributes,\n                popup,\n            });\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow }, null);\n            await this.monitorPopupForHash(popupWindow).catch(() => {\n                // Swallow any errors related to monitoring the window. Server logout is best effort\n            });\n            if (mainWindowRedirectUri) {\n                const navigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, getCurrentUri());\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\n                await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            }\n            else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        }\n        catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            throw e;\n        }\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n    }\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl, params) {\n        // Check that request url is not empty.\n        if (requestUrl) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        }\n        else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw createBrowserAuthError(emptyNavigateUri);\n        }\n    }\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow) {\n        return new Promise((resolve, reject) => {\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n                    clearInterval(intervalId);\n                    reject(createBrowserAuthError(userCancelled));\n                    return;\n                }\n                let href = \"\";\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                }\n                catch (e) { }\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                clearInterval(intervalId);\n                let responseString = \"\";\n                const responseType = this.config.auth.OIDCOptions.serverResponseType;\n                if (popupWindow) {\n                    if (responseType === ServerResponseType.QUERY) {\n                        responseString = popupWindow.location.search;\n                    }\n                    else {\n                        responseString = popupWindow.location.hash;\n                    }\n                }\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n                resolve(responseString);\n            }, this.config.system.pollIntervalMilliseconds);\n        }).finally(() => {\n            this.cleanPopup(popupWindow);\n        });\n    }\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate, popupParams) {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n                popupWindow.location.assign(urlNavigate);\n            }\n            else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n            }\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw createBrowserAuthError(emptyWindowError);\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n            return popupWindow;\n        }\n        catch (e) {\n            this.logger.error(\"error opening popup \" + e.message);\n            this.browserStorage.setInteractionInProgress(false);\n            throw createBrowserAuthError(popupWindowError);\n        }\n    }\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(urlNavigate, popupName, popupWindowAttributes) {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth = window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight = window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n            top = Math.max(0, winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop);\n        }\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n            left = Math.max(0, winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft);\n        }\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n    }\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e) {\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow) {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes, authority) {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request) {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RedirectHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(requestUrl, params) {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (requestUrl) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\n            const navigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false,\n            };\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n                const navigate = params.onRedirectNavigate(requestUrl);\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                    return;\n                }\n                else {\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n                    return;\n                }\n            }\n            else {\n                // Navigate window to request URL\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                return;\n            }\n        }\n        else {\n            // Throw error if request URL is empty.\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw createBrowserAuthError(emptyNavigateUri);\n        }\n    }\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponse(response, state) {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(stateNotFound, \"Cached State\");\n        }\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(response, requestState);\n        }\n        catch (e) {\n            if (e instanceof ServerError &&\n                e.subError === userCancelled) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(userCancelled);\n            }\n            else {\n                throw e;\n            }\n        }\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(this.authModule.updateAuthority.bind(this.authModule), PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(authCodeResponse.cloud_instance_host_name, this.authCodeRequest.correlationId);\n        }\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        }\n        else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n        // Acquire token with retrieved code.\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n    /**\n     * Looks up ccs creds in the cache\n     */\n    checkCcsCredentials() {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred);\n            }\n            catch (e) {\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\n            }\n        }\n        return null;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RedirectClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request) {\n        const validRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, InteractionType.Redirect);\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || \"\", validRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\n        const handleBackButton = (event) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\n                this.browserStorage.cleanRequestByState(validRequest.state);\n                this.eventHandler.emitEvent(EventType.RESTORE_FROM_BFCACHE, InteractionType.Redirect);\n            }\n        };\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\n            // Initialize the client\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme),\n            });\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate,\n            });\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(hash) {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n                return null;\n            }\n            const [serverParams, responseString] = this.getRedirectResponse(hash || \"\");\n            if (!serverParams) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\");\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\n            if (loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\"Current page is loginRequestUrl, handling response\");\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    replaceHash(loginRequestUrl);\n                }\n                const handleHashResult = await this.handleResponse(serverParams, serverTelemetryManager);\n                return handleHashResult;\n            }\n            else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling response\");\n                return await this.handleResponse(serverParams, serverTelemetryManager);\n            }\n            else if (!isInIframe() ||\n                this.config.system.allowRedirectInIframe) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseString, true);\n                const navigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(homepage, navigationOptions);\n                }\n                else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\n                }\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return await this.handleResponse(serverParams, serverTelemetryManager);\n                }\n            }\n            return null;\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n            throw e;\n        }\n    }\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    getRedirectResponse(userProvidedResponse) {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        let responseString = userProvidedResponse;\n        if (!responseString) {\n            if (this.config.auth.OIDCOptions.serverResponseType ===\n                ServerResponseType.QUERY) {\n                responseString = window.location.search;\n            }\n            else {\n                responseString = window.location.hash;\n            }\n        }\n        let response = getDeserializedResponse(responseString);\n        if (response) {\n            try {\n                validateInteractionType(response, this.browserCrypto, InteractionType.Redirect);\n            }\n            catch (e) {\n                if (e instanceof AuthError) {\n                    this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`);\n                }\n                return [null, \"\"];\n            }\n            clearHash(window);\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\n            return [response, responseString];\n        }\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        if (cachedHash) {\n            response = getDeserializedResponse(cachedHash);\n            if (response) {\n                this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\n                return [response, cachedHash];\n            }\n        }\n        return [null, \"\"];\n    }\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    async handleResponse(serverParams, serverTelemetryManager) {\n        const state = serverParams.state;\n        if (!state) {\n            throw createBrowserAuthError(noStateInHash);\n        }\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(nativeConnectionNotEstablished);\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, cachedRequest.correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n            return nativeInteractionClient\n                .acquireToken({\n                ...cachedRequest,\n                state: userRequestState,\n                prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n            })\n                .finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw createBrowserAuthError(noCachedAuthorityError);\n        }\n        const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, currentAuthority);\n        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.performanceClient);\n        return interactionHandler.handleCodeResponse(serverParams, state);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest) {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\n        try {\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n            const navigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                }\n                catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        void this.browserStorage.removeAccount(validLogoutRequest.account?.homeAccountId);\n                        this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n                        return;\n                    }\n                }\n            }\n            // Create logout string and navigate user window to logout.\n            const logoutUri = authClient.getLogoutUri(validLogoutRequest);\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\") {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n                if (navigate !== false) {\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                    return;\n                }\n                else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\n                }\n            }\n            else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                return;\n            }\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n            throw e;\n        }\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n    }\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    getRedirectStartPage(requestStartPage) {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(redirectStartPage, getCurrentUri());\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\n * @param urlNavigate\n * @param userRequestScopes\n */\nasync function initiateAuthRequest(requestUrl, performanceClient, logger, correlationId, navigateFrameWait) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, correlationId);\n    if (!requestUrl) {\n        // Throw error if request URL is empty.\n        logger.info(\"Navigate url is empty\");\n        throw createBrowserAuthError(emptyNavigateUri);\n    }\n    if (navigateFrameWait) {\n        return invokeAsync(loadFrame, PerformanceEvents.SilentHandlerLoadFrame, logger, performanceClient, correlationId)(requestUrl, navigateFrameWait, performanceClient, correlationId);\n    }\n    return invoke(loadFrameSync, PerformanceEvents.SilentHandlerLoadFrameSync, logger, performanceClient, correlationId)(requestUrl);\n}\n/**\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n * @param iframe\n * @param timeout\n */\nasync function monitorIframeForHash(iframe, timeout, pollIntervalMilliseconds, performanceClient, logger, correlationId, responseType) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, correlationId);\n    return new Promise((resolve, reject) => {\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n            logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n        }\n        /*\n         * Polling for iframes can be purely timing based,\n         * since we don't need to account for interaction.\n         */\n        const timeoutId = window.setTimeout(() => {\n            window.clearInterval(intervalId);\n            reject(createBrowserAuthError(monitorWindowTimeout));\n        }, timeout);\n        const intervalId = window.setInterval(() => {\n            let href = \"\";\n            const contentWindow = iframe.contentWindow;\n            try {\n                /*\n                 * Will throw if cross origin,\n                 * which should be caught and ignored\n                 * since we need the interval to keep running while on STS UI.\n                 */\n                href = contentWindow ? contentWindow.location.href : \"\";\n            }\n            catch (e) { }\n            if (!href || href === \"about:blank\") {\n                return;\n            }\n            let responseString = \"\";\n            if (contentWindow) {\n                if (responseType === ServerResponseType.QUERY) {\n                    responseString = contentWindow.location.search;\n                }\n                else {\n                    responseString = contentWindow.location.hash;\n                }\n            }\n            window.clearTimeout(timeoutId);\n            window.clearInterval(intervalId);\n            resolve(responseString);\n        }, pollIntervalMilliseconds);\n    }).finally(() => {\n        invoke(removeHiddenIframe, PerformanceEvents.RemoveHiddenIframe, logger, performanceClient, correlationId)(iframe);\n    });\n}\n/**\n * @hidden\n * Loads iframe with authorization endpoint URL\n * @ignore\n * @deprecated\n */\nfunction loadFrame(urlNavigate, navigateFrameWait, performanceClient, correlationId) {\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, correlationId);\n    /*\n     * This trick overcomes iframe navigation in IE\n     * IE does not load the page consistently in iframe\n     */\n    return new Promise((resolve, reject) => {\n        const frameHandle = createHiddenIframe();\n        window.setTimeout(() => {\n            if (!frameHandle) {\n                reject(\"Unable to load iframe\");\n                return;\n            }\n            frameHandle.src = urlNavigate;\n            resolve(frameHandle);\n        }, navigateFrameWait);\n    });\n}\n/**\n * @hidden\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n * @param urlNavigate\n * @param frameName\n * @param logger\n */\nfunction loadFrameSync(urlNavigate) {\n    const frameHandle = createHiddenIframe();\n    frameHandle.src = urlNavigate;\n    return frameHandle;\n}\n/**\n * @hidden\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\n * @ignore\n */\nfunction createHiddenIframe() {\n    const authFrame = document.createElement(\"iframe\");\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n    document.body.appendChild(authFrame);\n    return authFrame;\n}\n/**\n * @hidden\n * Removes a hidden iframe from the page.\n * @ignore\n */\nfunction removeHiddenIframe(iframe) {\n    if (document.body === iframe.parentNode) {\n        document.body.removeChild(iframe);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentIframeClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n        // Check that we have some SSO data\n        if (!request.loginHint &&\n            !request.sid &&\n            (!request.account || !request.account.username)) {\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n        }\n        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n        if (request.prompt &&\n            request.prompt !== PromptValue.NONE &&\n            request.prompt !== PromptValue.NO_SESSION) {\n            throw createBrowserAuthError(silentPromptValueError);\n        }\n        // Create silent request\n        const silentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)({\n            ...request,\n            prompt: request.prompt || PromptValue.NONE,\n        }, InteractionType.Silent);\n        preconnect(silentRequest.authority);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Initialize the client\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, request.correlationId)(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n            return await invokeAsync(this.silentTokenHelper.bind(this), PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, request.correlationId)(authClient, silentRequest);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    async silentTokenHelper(authClient, silentRequest) {\n        const correlationId = silentRequest.correlationId;\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, correlationId);\n        // Create auth code request and generate PKCE params\n        const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, correlationId)(silentRequest);\n        // Create authorize request url\n        const navigateUrl = await invokeAsync(authClient.getAuthCodeUrl.bind(authClient), PerformanceEvents.GetAuthCodeUrl, this.logger, this.performanceClient, correlationId)({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme),\n        });\n        // Create silent handler\n        const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n        // Get the frame handle for the silent request\n        const msalFrame = await invokeAsync(initiateAuthRequest, PerformanceEvents.SilentHandlerInitiateAuthRequest, this.logger, this.performanceClient, correlationId)(navigateUrl, this.performanceClient, this.logger, correlationId, this.config.system.navigateFrameWait);\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const responseString = await invokeAsync(monitorIframeForHash, PerformanceEvents.SilentHandlerMonitorIframeForHash, this.logger, this.performanceClient, correlationId)(msalFrame, this.config.system.iframeHashTimeout, this.config.system.pollIntervalMilliseconds, this.performanceClient, this.logger, correlationId, responseType);\n        const serverParams = invoke(deserializeResponse, PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, responseType, this.logger);\n        if (serverParams.accountId) {\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(nativeConnectionNotEstablished);\n            }\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, correlationId);\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, silentRequest.state);\n            return invokeAsync(nativeInteractionClient.acquireToken.bind(nativeInteractionClient), PerformanceEvents.NativeInteractionClientAcquireToken, this.logger, this.performanceClient, correlationId)({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE,\n            });\n        }\n        // Handle response from hash string\n        return invokeAsync(interactionHandler.handleCodeResponse.bind(interactionHandler), PerformanceEvents.HandleCodeResponse, this.logger, this.performanceClient, correlationId)(serverParams, silentRequest);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n        const baseRequest = await invokeAsync(this.initializeBaseRequest.bind(this), PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, request.correlationId)(request, request.account);\n        const silentRequest = {\n            ...request,\n            ...baseRequest,\n        };\n        if (request.redirectUri) {\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\n            silentRequest.redirectUri = this.getRedirectUri(request.redirectUri);\n        }\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return invokeAsync(refreshTokenClient.acquireTokenByRefreshToken.bind(refreshTokenClient), PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, this.logger, this.performanceClient, request.correlationId)(silentRequest).catch((e) => {\n            e.setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        });\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Token cache manager\n */\nclass TokenCache {\n    constructor(configuration, storage, logger, cryptoObj) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n    // Move getAllAccounts here and cache utility APIs\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    loadExternalTokens(request, response, options) {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n        if (!response.id_token) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        const idTokenClaims = extractTokenClaims(response.id_token, base64Decode);\n        let cacheRecord;\n        let authority;\n        let cacheRecordAccount;\n        if (request.account) {\n            cacheRecordAccount = AccountEntity.createFromAccountInfo(request.account);\n            cacheRecord = new CacheRecord(cacheRecordAccount, this.loadIdToken(response.id_token, cacheRecordAccount.homeAccountId, request.account.environment, request.account.tenantId), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, request.account.environment, request.account.tenantId, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, request.account.environment));\n        }\n        else if (request.authority) {\n            const authorityUrl = Authority.generateAuthority(request.authority, request.azureCloudOptions);\n            const authorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n            };\n            authority = new Authority(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions, this.logger);\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                cacheRecordAccount = this.loadAccount(idTokenClaims, authority, options.clientInfo);\n                cacheRecord = new CacheRecord(cacheRecordAccount, this.loadIdToken(response.id_token, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort));\n            }\n            else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                cacheRecordAccount = this.loadAccount(idTokenClaims, authority, response.client_info);\n                cacheRecord = new CacheRecord(cacheRecordAccount, this.loadIdToken(response.id_token, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant), this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort, authority.tenant, options), this.loadRefreshToken(request, response, cacheRecordAccount.homeAccountId, authority.hostnameAndPort));\n            }\n            else {\n                throw createBrowserAuthError(unableToLoadToken);\n            }\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        return this.generateAuthenticationResult(request, idTokenClaims, cacheRecord, cacheRecordAccount, authority);\n    }\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    loadAccount(idTokenClaims, authority, clientInfo, requestHomeAccountId) {\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading account\");\n            let homeAccountId;\n            if (requestHomeAccountId) {\n                homeAccountId = requestHomeAccountId;\n            }\n            else if (authority.authorityType !== undefined && clientInfo) {\n                homeAccountId = AccountEntity.generateHomeAccountId(clientInfo, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\n            }\n            if (!homeAccountId) {\n                throw createBrowserAuthError(unableToLoadToken);\n            }\n            const claimsTenantId = idTokenClaims.tid;\n            const cachedAccount = buildAccountToCache(this.storage, authority, homeAccountId, idTokenClaims, base64Decode, clientInfo, authority.hostnameAndPort, claimsTenantId, undefined, // authCodePayload\n            undefined, // nativeAccountId\n            this.logger);\n            this.storage.setAccount(cachedAccount);\n            return cachedAccount;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    loadIdToken(idToken, homeAccountId, environment, tenantId) {\n        const idTokenEntity = createIdTokenEntity(homeAccountId, environment, idToken, this.config.auth.clientId, tenantId);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setIdTokenCredential(idTokenEntity);\n            return idTokenEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    loadAccessToken(request, response, homeAccountId, environment, tenantId, options) {\n        if (!response.access_token) {\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\n            return null;\n        }\n        if (!response.expires_in) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        if (!options.extendedExpiresOn) {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn = options.expiresOn ||\n            response.expires_in + new Date().getTime() / 1000;\n        const extendedExpiresOn = options.extendedExpiresOn;\n        const accessTokenEntity = createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, base64Decode);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n            return accessTokenEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    loadRefreshToken(request, response, homeAccountId, environment) {\n        if (!response.refresh_token) {\n            this.logger.verbose(\"TokenCache - No refresh token provided for caching\");\n            return null;\n        }\n        const refreshTokenEntity = createRefreshTokenEntity(homeAccountId, environment, response.refresh_token, this.config.auth.clientId);\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading refresh token\");\n            this.storage.setRefreshTokenCredential(refreshTokenEntity);\n            return refreshTokenEntity;\n        }\n        else {\n            throw createBrowserAuthError(unableToLoadToken);\n        }\n    }\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    generateAuthenticationResult(request, idTokenClaims, cacheRecord, accountEntity, authority) {\n        let accessToken = Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n        const uid = idTokenClaims.oid || idTokenClaims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenClaims.tid || Constants.EMPTY_STRING;\n        return {\n            authority: authority\n                ? authority.canonicalAuthority\n                : Constants.EMPTY_STRING,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: cacheRecord.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || Constants.EMPTY_STRING,\n            requestId: Constants.EMPTY_STRING,\n            extExpiresOn: extExpiresOn,\n            familyId: Constants.EMPTY_STRING,\n            tokenType: cacheRecord?.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: Constants.EMPTY_STRING,\n            cloudGraphHostName: accountEntity.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: accountEntity.msGraphHost || Constants.EMPTY_STRING,\n            code: undefined,\n            fromNativeBroker: false,\n        };\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\n    constructor(config) {\n        super(config);\n        this.includeRedirectUri = false;\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentAuthCodeClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(request) {\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(authCodeRequired);\n        }\n        // Create silent request\n        const silentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(request, InteractionType.Silent);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n            // Initialize the client\n            const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, request.correlationId)(serverTelemetryManager, silentRequest.authority);\n            const authClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n            // Create silent handler\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n            // Handle auth code parameters from request\n            return await invokeAsync(interactionHandler.handleCodeResponseFromServer.bind(interactionHandler), PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)({\n                code: request.code,\n                msgraph_host: request.msGraphHost,\n                cloud_graph_host_name: request.cloudGraphHostName,\n                cloud_instance_host_name: request.cloudInstanceHostName,\n            }, silentRequest, false);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass StandardController {\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext) {\n        this.atsAsyncMeasurement = undefined;\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, buildStaticAuthorityOptions(this.config.auth))\n            : DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\n        // initialize in memory storage for native flows\n        const nativeCacheOptions = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger);\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\n        this.activeSilentTokenRequests = new Map();\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n    static async createController(operatingContext) {\n        const controller = new StandardController(operatingContext);\n        await controller.initialize();\n        return controller;\n    }\n    trackPageVisibility() {\n        if (!this.atsAsyncMeasurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.atsAsyncMeasurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\"initialize has already been called, exiting early.\");\n            return;\n        }\n        const allowNativeBroker = this.config.system.allowNativeBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.InitializeClientApplication);\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n        if (allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider =\n                    await NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout, this.performanceClient);\n            }\n            catch (e) {\n                this.logger.verbose(e);\n            }\n        }\n        if (!this.config.cache.claimsBasedCachingEnabled) {\n            this.logger.verbose(\"Claims-based caching is disabled. Clearing the previous cache with claims\");\n            await invokeAsync(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage), PerformanceEvents.ClearTokensAndKeysWithClaims, this.logger, this.performanceClient)(this.performanceClient);\n        }\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n        initMeasurement.end({ allowNativeBroker, success: true });\n    }\n    // #region Redirect Flow\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(hash) {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        blockAPICallsBeforeInitialize(this.initialized);\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || \"\";\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\n                const request = this.browserStorage.getCachedNativeRequest();\n                let redirectResponse;\n                if (request &&\n                    NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) &&\n                    this.nativeExtensionProvider &&\n                    !hash) {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\n                    const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                }\n                else {\n                    this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\n                    const correlationId = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || Constants.EMPTY_STRING;\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    redirectResponse =\n                        redirectClient.handleRedirectPromise(hash);\n                }\n                response = redirectResponse\n                    .then((result) => {\n                    if (result) {\n                        // Emit login event if number of accounts change\n                        const isLoggingIn = loggedInAccounts.length <\n                            this.getAllAccounts().length;\n                        if (isLoggingIn) {\n                            this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, login success\");\n                        }\n                        else {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\n                            this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\n                        }\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n                    return result;\n                })\n                    .catch((e) => {\n                    // Emit login event if there is an account\n                    if (loggedInAccounts.length > 0) {\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n                    }\n                    else {\n                        this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n                    }\n                    this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n                    throw e;\n                });\n                this.redirectResponse.set(redirectResponseKey, response);\n            }\n            else {\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\n            }\n            return response;\n        }\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\n        return null;\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request) {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\n        }\n        else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\n        }\n        let result;\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, correlationId);\n            result = nativeClient\n                .acquireTokenRedirect(request)\n                .catch((e) => {\n                if (e instanceof NativeAuthError &&\n                    isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const redirectClient = this.createRedirectClient(correlationId);\n                    return redirectClient.acquireToken(request);\n                }\n                this.getBrowserStorage().setInteractionInProgress(false);\n                throw e;\n            });\n        }\n        else {\n            const redirectClient = this.createRedirectClient(correlationId);\n            result = redirectClient.acquireToken(request);\n        }\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            throw e;\n        });\n    }\n    // #endregion\n    // #region Popup Flow\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, correlationId);\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n        }\n        catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        }\n        else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\n        }\n        let result;\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative({\n                ...request,\n                correlationId,\n            }, ApiId.acquireTokenPopup)\n                .then((response) => {\n                this.getBrowserStorage().setInteractionInProgress(false);\n                atPopupMeasurement.end({\n                    success: true,\n                    isNativeBroker: true,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n                .catch((e) => {\n                if (e instanceof NativeAuthError &&\n                    isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const popupClient = this.createPopupClient(correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                else if (e instanceof InteractionRequiredAuthError) {\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\n                    const popupClient = this.createPopupClient(correlationId);\n                    return popupClient.acquireToken(request);\n                }\n                this.getBrowserStorage().setInteractionInProgress(false);\n                throw e;\n            });\n        }\n        else {\n            const popupClient = this.createPopupClient(correlationId);\n            result = popupClient.acquireToken(request);\n        }\n        return result\n            .then((result) => {\n            /*\n             *  If logged in, emit acquire token events\n             */\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n            if (isLoggingIn) {\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\n            }\n            else {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            }\n            atPopupMeasurement.add({\n                accessTokenSize: result.accessToken.length,\n                idTokenSize: result.idToken.length,\n            });\n            atPopupMeasurement.end({\n                success: true,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((e) => {\n            if (loggedInAccounts.length > 0) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            }\n            else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\n            }\n            atPopupMeasurement.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        });\n    }\n    trackPageVisibilityWithMeasurement() {\n        const measurement = this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected in \", measurement.event.name);\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n    // #region Silent Flow\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, correlationId);\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, validRequest);\n        let result;\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(validRequest, ApiId.ssoSilent).catch((e) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        }\n        else {\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n        return result\n            .then((response) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, response);\n            this.ssoSilentMeasurement?.add({\n                accessTokenSize: response.accessToken.length,\n                idTokenSize: response.idToken.length,\n            });\n            this.ssoSilentMeasurement?.end({\n                success: true,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((e) => {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\n            this.ssoSilentMeasurement?.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            throw e;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        });\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_START, InteractionType.Silent, request);\n        const atbcMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCode, correlationId);\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw createBrowserAuthError(spaCodeAndNativeAccountIdPresent);\n            }\n            else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result) => {\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, InteractionType.Silent, result);\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                        atbcMeasurement.add({\n                            accessTokenSize: result.accessToken.length,\n                            idTokenSize: result.idToken.length,\n                        });\n                        atbcMeasurement.end({\n                            success: true,\n                            isNativeBroker: result.fromNativeBroker,\n                            requestId: result.requestId,\n                        });\n                        return result;\n                    })\n                        .catch((error) => {\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, error);\n                        atbcMeasurement.end({\n                            errorCode: error.errorCode,\n                            subErrorCode: error.subError,\n                            success: false,\n                        });\n                        throw error;\n                    });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                }\n                else {\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", correlationId);\n                    atbcMeasurement.discard();\n                }\n                return await response;\n            }\n            else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return await this.acquireTokenNative({\n                        ...request,\n                        correlationId,\n                    }, ApiId.acquireTokenByCode, request.nativeAccountId).catch((e) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                }\n                else {\n                    throw createBrowserAuthError(unableToAcquireTokenFromNativePlatform);\n                }\n            }\n            else {\n                throw createBrowserAuthError(authCodeOrNativeAccountIdRequired);\n            }\n        }\n        catch (e) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, e);\n            atbcMeasurement.end({\n                errorCode: (e instanceof AuthError && e.errorCode) || undefined,\n                subErrorCode: (e instanceof AuthError && e.subError) || undefined,\n                success: false,\n            });\n            throw e;\n        }\n    }\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    async acquireTokenByCodeAsync(request) {\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCodeAsync, request.correlationId);\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n            this.acquireTokenByCodeAsyncMeasurement?.end({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((tokenRenewalError) => {\n            this.acquireTokenByCodeAsyncMeasurement?.end({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false,\n            });\n            throw tokenRenewalError;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\n        });\n        return silentTokenResult;\n    }\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenFromCache(silentCacheClient, commonRequest, cacheLookupPolicy) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenFromCache, commonRequest.correlationId);\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessToken:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n                return invokeAsync(silentCacheClient.acquireToken.bind(silentCacheClient), PerformanceEvents.SilentCacheClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\n            default:\n                throw createClientAuthError(tokenRefreshRequired);\n        }\n    }\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param cacheLookupPolicy CacheLookupPolicy\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenByRefreshToken(commonRequest, cacheLookupPolicy) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenByRefreshToken, commonRequest.correlationId);\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case CacheLookupPolicy.RefreshToken:\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(commonRequest.correlationId);\n                return invokeAsync(silentRefreshClient.acquireToken.bind(silentRefreshClient), PerformanceEvents.SilentRefreshClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\n            default:\n                throw createClientAuthError(tokenRefreshRequired);\n        }\n    }\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    async acquireTokenBySilentIframe(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenBySilentIframe, request.correlationId);\n        const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n        return invokeAsync(silentIframeClient.acquireToken.bind(silentIframeClient), PerformanceEvents.SilentIframeClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(request);\n    }\n    // #endregion\n    // #region Logout\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        }\n        catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Creates a cache interaction client to clear broswer cache.\n     * @param logoutRequest\n     */\n    async clearCache(logoutRequest) {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        const cacheClient = this.createSilentCacheClient(correlationId);\n        return cacheClient.logout(logoutRequest);\n    }\n    // #endregion\n    // #region Account APIs\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment\n            ? this.browserStorage.getAllAccounts(accountFilter)\n            : [];\n    }\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter) {\n        this.logger.trace(\"getAccount called\");\n        if (Object.keys(accountFilter).length === 0) {\n            this.logger.warning(\"getAccount: No accountFilter provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy(accountFilter);\n        if (account) {\n            this.logger.verbose(\"getAccount: Account matching provided filter found, returning\");\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccount: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username) {\n        this.logger.trace(\"getAccountByUsername called\");\n        if (!username) {\n            this.logger.warning(\"getAccountByUsername: No username provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            username,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByUsername: Account matching username found, returning\");\n            this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${username}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId) {\n        this.logger.trace(\"getAccountByHomeId called\");\n        if (!homeAccountId) {\n            this.logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            homeAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByHomeId: Account matching homeAccountId found, returning\");\n            this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId) {\n        this.logger.trace(\"getAccountByLocalId called\");\n        if (!localAccountId) {\n            this.logger.warning(\"getAccountByLocalId: No localAccountId provided\");\n            return null;\n        }\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            localAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\"getAccountByLocalId: Account matching localAccountId found, returning\");\n            this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`);\n            return account;\n        }\n        else {\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\n            return null;\n        }\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.browserStorage.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.browserStorage.getActiveAccount();\n    }\n    // #endregion\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        this.logger.verbose(\"hydrateCache called\");\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\n        this.browserStorage.setAccount(accountEntity);\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\"Response was from native broker, storing in-memory\");\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        }\n        else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n    // #region Helpers\n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [isAppEmbedded=false] Whether to set interaction in progress temp cache flag\n     */\n    preflightBrowserEnvironmentCheck(interactionType, isAppEmbedded = false) {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        blockNonBrowserEnvironment(this.isBrowserEnvironment);\n        // Block redirects if in an iframe\n        blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\n        // Block auth requests inside a hidden iframe\n        blockReloadInHiddenIframes();\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        blockAcquireTokenInPopups();\n        // Block token acquisition before initialize has been called\n        blockAPICallsBeforeInitialize(this.initialized);\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation ===\n                BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie) {\n            throw createBrowserConfigurationAuthError(inMemRedirectUnavailable);\n        }\n        if (interactionType === InteractionType.Redirect ||\n            interactionType === InteractionType.Popup) {\n            this.preflightInteractiveRequest(!isAppEmbedded);\n        }\n    }\n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    preflightInteractiveRequest(setInteractionInProgress) {\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\");\n        // block the reload if it occurred inside a hidden iframe\n        blockReloadInHiddenIframes();\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.getBrowserStorage().setInteractionInProgress(true);\n        }\n    }\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    async acquireTokenNative(request, apiId, accountId) {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw createBrowserAuthError(nativeConnectionNotEstablished);\n        }\n        const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\n        return nativeClient.acquireToken(request);\n    }\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    canUseNative(request, accountId) {\n        this.logger.trace(\"canUseNative called\");\n        if (!NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\n            return false;\n        }\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\n                    break;\n                default:\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\n                    return false;\n            }\n        }\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    getNativeAccountId(request) {\n        const account = request.account ||\n            this.getAccount({\n                loginHint: request.loginHint,\n                sid: request.sid,\n            }) ||\n            this.getActiveAccount();\n        return (account && account.nativeAccountId) || \"\";\n    }\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    createPopupClient(correlationId) {\n        return new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    createRedirectClient(correlationId) {\n        return new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    createSilentIframeClient(correlationId) {\n        return new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    createSilentCacheClient(correlationId) {\n        return new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    createSilentRefreshClient(correlationId) {\n        return new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    createSilentAuthCodeClient(correlationId) {\n        return new SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.eventHandler.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.tokenCache;\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.navigationClient = navigationClient;\n    }\n    /**\n     * Returns the configuration object\n     */\n    getConfiguration() {\n        return this.config;\n    }\n    /**\n     * Returns the performance client\n     */\n    getPerformanceClient() {\n        return this.performanceClient;\n    }\n    /**\n     * Returns the browser storage\n     */\n    getBrowserStorage() {\n        return this.browserStorage;\n    }\n    /**\n     * Returns the browser env indicator\n     */\n    isBrowserEnv() {\n        return this.isBrowserEnvironment;\n    }\n    /**\n     * Returns the event handler\n     */\n    getEventHandler() {\n        return this.eventHandler;\n    }\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    getRequestCorrelationId(request) {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n        if (this.isBrowserEnvironment) {\n            return createNewGuid();\n        }\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n    // #endregion\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(request) {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilent, correlationId);\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n        });\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw createBrowserAuthError(noAccountError);\n        }\n        const thumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n            shrOptions: request.shrOptions,\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\n            const response = invokeAsync(this.acquireTokenSilentAsync.bind(this), PerformanceEvents.AcquireTokenSilentAsync, this.logger, this.performanceClient, correlationId)({\n                ...request,\n                correlationId,\n            }, account)\n                .then((result) => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n                atsMeasurement.add({\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                atsMeasurement.end({\n                    success: true,\n                    fromCache: result.fromCache,\n                    isNativeBroker: result.fromNativeBroker,\n                    cacheLookupPolicy: request.cacheLookupPolicy,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n                .catch((error) => {\n                this.activeSilentTokenRequests.delete(silentRequestKey);\n                atsMeasurement.end({\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    success: false,\n                });\n                throw error;\n            });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        }\n        else {\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discard();\n            return cachedResponse;\n        }\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    async acquireTokenSilentAsync(request, account) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n        this.atsAsyncMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\n        this.atsAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibility);\n        let result;\n        if (NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme) &&\n            account.nativeAccountId) {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\n            const silentRequest = {\n                ...request,\n                account,\n            };\n            result = this.acquireTokenNative(silentRequest, ApiId.acquireTokenSilent_silentFlow).catch(async (e) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(request.correlationId);\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });\n        }\n        else {\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\n            const silentCacheClient = this.createSilentCacheClient(request.correlationId);\n            const silentRequest = await invokeAsync(silentCacheClient.initializeSilentRequest.bind(silentCacheClient), PerformanceEvents.InitializeSilentRequest, this.logger, this.performanceClient, request.correlationId)(request, account);\n            const cacheLookupPolicy = request.cacheLookupPolicy || CacheLookupPolicy.Default;\n            result = invokeAsync(this.acquireTokenFromCache.bind(this), PerformanceEvents.AcquireTokenFromCache, this.logger, this.performanceClient, silentRequest.correlationId)(silentCacheClient, silentRequest, cacheLookupPolicy).catch((cacheError) => {\n                if (request.cacheLookupPolicy ===\n                    CacheLookupPolicy.AccessToken) {\n                    throw cacheError;\n                }\n                // block the reload if it occurred inside a hidden iframe\n                blockReloadInHiddenIframes();\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, silentRequest);\n                return invokeAsync(this.acquireTokenByRefreshToken.bind(this), PerformanceEvents.AcquireTokenByRefreshToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy).catch((refreshTokenError) => {\n                    const shouldTryToResolveSilently = checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, silentRequest, cacheLookupPolicy);\n                    if (shouldTryToResolveSilently) {\n                        this.logger.verbose(\"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\", silentRequest.correlationId);\n                        return invokeAsync(this.acquireTokenBySilentIframe.bind(this), PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\n                    }\n                    else {\n                        // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\n                        throw refreshTokenError;\n                    }\n                });\n            });\n        }\n        return result\n            .then((response) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, response);\n            this.atsAsyncMeasurement?.end({\n                success: true,\n                fromCache: response.fromCache,\n                isNativeBroker: response.fromNativeBroker,\n                requestId: response.requestId,\n            });\n            return response;\n        })\n            .catch((tokenRenewalError) => {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\n            this.atsAsyncMeasurement?.end({\n                errorCode: tokenRenewalError.errorCode,\n                subErrorCode: tokenRenewalError.subError,\n                success: false,\n            });\n            throw tokenRenewalError;\n        })\n            .finally(() => {\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibility);\n        });\n    }\n}\n/**\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\n * @param refreshTokenError\n * @param silentRequest\n * @param cacheLookupPolicy\n * @returns\n */\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, silentRequest, cacheLookupPolicy) {\n    const noInteractionRequired = !(refreshTokenError instanceof InteractionRequiredAuthError &&\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\n        refreshTokenError.subError !==\n            badToken);\n    // Errors that result when the refresh token needs to be replaced\n    const refreshTokenRefreshRequired = refreshTokenError.errorCode === BrowserConstants.INVALID_GRANT_ERROR ||\n        refreshTokenError.errorCode ===\n            tokenRefreshRequired;\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\n    const isSilentlyResolvable = (noInteractionRequired && refreshTokenRefreshRequired) ||\n        refreshTokenError.errorCode ===\n            noTokensFound ||\n        refreshTokenError.errorCode ===\n            refreshTokenExpired;\n    // Only these policies allow for an iframe renewal attempt\n    const tryIframeRenewal = iFrameRenewalPolicies.includes(cacheLookupPolicy);\n    return isSilentlyResolvable && tryIframeRenewal;\n}\n\nvar StandardController$1 = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tStandardController: StandardController\n});\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nclass PublicClientApplication {\n    static async createPublicClientApplication(configuration) {\n        const controller = await createV3Controller(configuration);\n        const pca = new PublicClientApplication(configuration, controller);\n        return pca;\n    }\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    constructor(configuration, controller) {\n        if (controller) {\n            this.controller = controller;\n        }\n        else {\n            const standardOperatingContext = new StandardOperatingContext(configuration);\n            this.controller = new StandardController(standardOperatingContext);\n        }\n    }\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize() {\n        return this.controller.initialize();\n    }\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(request) {\n        return this.controller.acquireTokenPopup(request);\n    }\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request) {\n        return this.controller.acquireTokenRedirect(request);\n    }\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(silentRequest) {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(request) {\n        return this.controller.acquireTokenByCode(request);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        return this.controller.addEventCallback(callback);\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        return this.controller.removeEventCallback(callbackId);\n    }\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback) {\n        return this.controller.addPerformanceCallback(callback);\n    }\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId) {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        this.controller.enableAccountStorageEvents();\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        this.controller.disableAccountStorageEvents();\n    }\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter) {\n        return this.controller.getAccount(accountFilter);\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId) {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId) {\n        return this.controller.getAccountByLocalId(localId);\n    }\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName) {\n        return this.controller.getAccountByUsername(userName);\n    }\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(hash) {\n        return this.controller.handleRedirectPromise(hash);\n    }\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request) {\n        return this.controller.loginPopup(request);\n    }\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request) {\n        return this.controller.loginRedirect(request);\n    }\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest) {\n        return this.controller.logout(logoutRequest);\n    }\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest) {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest) {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request) {\n        return this.controller.ssoSilent(request);\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        return this.controller.getTokenCache();\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.controller.getLogger();\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger) {\n        this.controller.setLogger(logger);\n    }\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account) {\n        this.controller.setActiveAccount(account);\n    }\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount() {\n        return this.controller.getActiveAccount();\n    }\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku, version) {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient) {\n        this.controller.setNavigationClient(navigationClient);\n    }\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration() {\n        return this.controller.getConfiguration();\n    }\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(result, request) {\n        return this.controller.hydrateCache(result, request);\n    }\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest) {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst stubbedPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenRedirect: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenSilent: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    getAllAccounts: () => {\n        return [];\n    },\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\n        return null;\n    },\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    loginPopup: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    loginRedirect: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    logout: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    logoutRedirect: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    logoutPopup: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    ssoSilent: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n    },\n    getLogger: () => {\n        throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n    },\n    hydrateCache: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n    clearCache: () => {\n        return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n    },\n};\n\n/*! @azure/msal-browser v3.7.0 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventMessageUtils {\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message, currentStatus) {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n            case EventType.RESTORE_FROM_BFCACHE:\n                if (message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup) {\n                    if (currentStatus &&\n                        currentStatus !== InteractionStatus.Login &&\n                        currentStatus !== InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n        }\n        return null;\n    }\n}\n\nasync function getBytes(stream, onChunk) {\r\n    const reader = stream.getReader();\r\n    let result;\r\n    while (!(result = await reader.read()).done) {\r\n        onChunk(result.value);\r\n    }\r\n}\r\nfunction getLines(onLine) {\r\n    let buffer;\r\n    let position;\r\n    let fieldLength;\r\n    let discardTrailingNewline = false;\r\n    return function onChunk(arr) {\r\n        if (buffer === undefined) {\r\n            buffer = arr;\r\n            position = 0;\r\n            fieldLength = -1;\r\n        }\r\n        else {\r\n            buffer = concat(buffer, arr);\r\n        }\r\n        const bufLength = buffer.length;\r\n        let lineStart = 0;\r\n        while (position < bufLength) {\r\n            if (discardTrailingNewline) {\r\n                if (buffer[position] === 10) {\r\n                    lineStart = ++position;\r\n                }\r\n                discardTrailingNewline = false;\r\n            }\r\n            let lineEnd = -1;\r\n            for (; position < bufLength && lineEnd === -1; ++position) {\r\n                switch (buffer[position]) {\r\n                    case 58:\r\n                        if (fieldLength === -1) {\r\n                            fieldLength = position - lineStart;\r\n                        }\r\n                        break;\r\n                    case 13:\r\n                        discardTrailingNewline = true;\r\n                    case 10:\r\n                        lineEnd = position;\r\n                        break;\r\n                }\r\n            }\r\n            if (lineEnd === -1) {\r\n                break;\r\n            }\r\n            onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\r\n            lineStart = position;\r\n            fieldLength = -1;\r\n        }\r\n        if (lineStart === bufLength) {\r\n            buffer = undefined;\r\n        }\r\n        else if (lineStart !== 0) {\r\n            buffer = buffer.subarray(lineStart);\r\n            position -= lineStart;\r\n        }\r\n    };\r\n}\r\nfunction getMessages(onId, onRetry, onMessage) {\r\n    let message = newMessage();\r\n    const decoder = new TextDecoder();\r\n    return function onLine(line, fieldLength) {\r\n        if (line.length === 0) {\r\n            onMessage === null || onMessage === void 0 ? void 0 : onMessage(message);\r\n            message = newMessage();\r\n        }\r\n        else if (fieldLength > 0) {\r\n            const field = decoder.decode(line.subarray(0, fieldLength));\r\n            const valueOffset = fieldLength + (line[fieldLength + 1] === 32 ? 2 : 1);\r\n            const value = decoder.decode(line.subarray(valueOffset));\r\n            switch (field) {\r\n                case 'data':\r\n                    message.data = message.data\r\n                        ? message.data + '\\n' + value\r\n                        : value;\r\n                    break;\r\n                case 'event':\r\n                    message.event = value;\r\n                    break;\r\n                case 'id':\r\n                    onId(message.id = value);\r\n                    break;\r\n                case 'retry':\r\n                    const retry = parseInt(value, 10);\r\n                    if (!isNaN(retry)) {\r\n                        onRetry(message.retry = retry);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction concat(a, b) {\r\n    const res = new Uint8Array(a.length + b.length);\r\n    res.set(a);\r\n    res.set(b, a.length);\r\n    return res;\r\n}\r\nfunction newMessage() {\r\n    return {\r\n        data: '',\r\n        event: '',\r\n        id: '',\r\n        retry: undefined,\r\n    };\r\n}\n\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nconst EventStreamContentType = 'text/event-stream';\r\nconst DefaultRetryInterval = 1000;\r\nconst LastEventId = 'last-event-id';\r\nfunction fetchEventSource(input, _a) {\r\n    var { signal: inputSignal, headers: inputHeaders, onopen: inputOnOpen, onmessage, onclose, onerror, openWhenHidden, fetch: inputFetch } = _a, rest = __rest(_a, [\"signal\", \"headers\", \"onopen\", \"onmessage\", \"onclose\", \"onerror\", \"openWhenHidden\", \"fetch\"]);\r\n    return new Promise((resolve, reject) => {\r\n        const headers = Object.assign({}, inputHeaders);\r\n        if (!headers.accept) {\r\n            headers.accept = EventStreamContentType;\r\n        }\r\n        let curRequestController;\r\n        function onVisibilityChange() {\r\n            curRequestController.abort();\r\n            if (!document.hidden) {\r\n                create();\r\n            }\r\n        }\r\n        if (!openWhenHidden) {\r\n            document.addEventListener('visibilitychange', onVisibilityChange);\r\n        }\r\n        let retryInterval = DefaultRetryInterval;\r\n        let retryTimer = 0;\r\n        function dispose() {\r\n            document.removeEventListener('visibilitychange', onVisibilityChange);\r\n            window.clearTimeout(retryTimer);\r\n            curRequestController.abort();\r\n        }\r\n        inputSignal === null || inputSignal === void 0 ? void 0 : inputSignal.addEventListener('abort', () => {\r\n            dispose();\r\n            resolve();\r\n        });\r\n        const fetch = inputFetch !== null && inputFetch !== void 0 ? inputFetch : window.fetch;\r\n        const onopen = inputOnOpen !== null && inputOnOpen !== void 0 ? inputOnOpen : defaultOnOpen;\r\n        async function create() {\r\n            var _a;\r\n            curRequestController = new AbortController();\r\n            try {\r\n                const response = await fetch(input, Object.assign(Object.assign({}, rest), { headers, signal: curRequestController.signal }));\r\n                await onopen(response);\r\n                await getBytes(response.body, getLines(getMessages(id => {\r\n                    if (id) {\r\n                        headers[LastEventId] = id;\r\n                    }\r\n                    else {\r\n                        delete headers[LastEventId];\r\n                    }\r\n                }, retry => {\r\n                    retryInterval = retry;\r\n                }, onmessage)));\r\n                onclose === null || onclose === void 0 ? void 0 : onclose();\r\n                dispose();\r\n                resolve();\r\n            }\r\n            catch (err) {\r\n                if (!curRequestController.signal.aborted) {\r\n                    try {\r\n                        const interval = (_a = onerror === null || onerror === void 0 ? void 0 : onerror(err)) !== null && _a !== void 0 ? _a : retryInterval;\r\n                        window.clearTimeout(retryTimer);\r\n                        retryTimer = window.setTimeout(create, interval);\r\n                    }\r\n                    catch (innerErr) {\r\n                        dispose();\r\n                        reject(innerErr);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        create();\r\n    });\r\n}\r\nfunction defaultOnOpen(response) {\r\n    const contentType = response.headers.get('content-type');\r\n    if (!(contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(EventStreamContentType))) {\r\n        throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: ${contentType}`);\r\n    }\r\n}\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray: isArray$2} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined$1 = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined$1(val) && val.constructor !== null && !isUndefined$1(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer$1 = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer$1(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString$1 = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber$1 = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean$1 = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject$2 = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate$2 = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach$1(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray$2(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey$1(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined$1(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey$1(result, key) || key;\n    if (isPlainObject$2(result[targetKey]) && isPlainObject$2(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject$2(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray$2(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach$1(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach$1(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray$2(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber$1(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray$1 = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp$1 = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach$1(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray$2(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop$1 = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray$2(source) ? [] : {};\n\n        forEach$1(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined$1(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nvar utils$1 = {\n  isArray: isArray$2,\n  isArrayBuffer: isArrayBuffer$1,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString: isString$1,\n  isNumber: isNumber$1,\n  isBoolean: isBoolean$1,\n  isObject,\n  isPlainObject: isPlainObject$2,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined: isUndefined$1,\n  isDate: isDate$2,\n  isFile,\n  isBlob,\n  isRegExp: isRegExp$1,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray: isTypedArray$1,\n  isFileList,\n  forEach: forEach$1,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop: noop$1,\n  toFiniteNumber,\n  findKey: findKey$1,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nvar utils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\thasBrowserEnv: hasBrowserEnv,\n\thasStandardBrowserEnv: hasStandardBrowserEnv,\n\thasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n\tnavigator: _navigator,\n\torigin: origin\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (0, JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data) ||\n      utils$1.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils$1.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  };\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n};\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\n\nconst asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils$1.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nvar resolveConfig = (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils$1.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n};\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    };\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n    }, timeout);\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    };\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils$1.asap(unsubscribe);\n\n    return signal;\n  }\n};\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\n\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n};\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n};\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n};\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n};\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils$1.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils$1.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      });\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils$1.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils$1.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils$1.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils$1.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils$1.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n};\n\nvar fetchAdapter = isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils$1.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils$1.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst VERSION = \"1.7.7\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\nclass InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nfunction jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n\n/*! @azure/msal-react v2.0.9 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext = {\n    instance: stubbedPublicClientApplication,\n    inProgress: InteractionStatus.None,\n    accounts: [],\n    logger: new Logger({}),\n};\nconst MsalContext = React.createContext(defaultMsalContext);\nMsalContext.Consumer;\n\n/*! @azure/msal-react v2.0.9 2024-01-09 */\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA\n * @param arrayB\n */\nfunction accountArraysAreEqual(arrayA, arrayB) {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n    const comparisonArray = [...arrayB];\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n        return (elementA.homeAccountId === elementB.homeAccountId &&\n            elementA.localAccountId === elementB.localAccountId &&\n            elementA.username === elementB.username);\n    });\n}\n\n/*! @azure/msal-react v2.0.9 2024-01-09 */\n/* eslint-disable header/header */\nconst name$1 = \"@azure/msal-react\";\nconst version$2 = \"2.0.9\";\n\n/*! @azure/msal-react v2.0.9 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst MsalProviderActionType = {\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\n    EVENT: \"EVENT\",\n};\n/**\n * Returns the next inProgress and accounts state based on event message\n * @param previousState\n * @param action\n */\nconst reducer = (previousState, action) => {\n    const { type, payload } = action;\n    let newInProgress = previousState.inProgress;\n    switch (type) {\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\n            if (previousState.inProgress === InteractionStatus.Startup) {\n                newInProgress = InteractionStatus.None;\n                payload.logger.info(\"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\");\n            }\n            break;\n        case MsalProviderActionType.EVENT:\n            const message = payload.message;\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message, previousState.inProgress);\n            if (status) {\n                payload.logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`);\n                newInProgress = status;\n            }\n            break;\n        default:\n            throw new Error(`Unknown action type: ${type}`);\n    }\n    const currentAccounts = payload.instance.getAllAccounts();\n    if (newInProgress !== previousState.inProgress &&\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Both inProgress and accounts changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n            accounts: currentAccounts,\n        };\n    }\n    else if (newInProgress !== previousState.inProgress) {\n        // Only only inProgress changed\n        return {\n            ...previousState,\n            inProgress: newInProgress,\n        };\n    }\n    else if (!accountArraysAreEqual(currentAccounts, previousState.accounts)) {\n        // Only accounts changed\n        return {\n            ...previousState,\n            accounts: currentAccounts,\n        };\n    }\n    else {\n        // Nothing changed\n        return previousState;\n    }\n};\n/**\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\n */\nfunction MsalProvider({ instance, children, }) {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version$2);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger = useMemo(() => {\n        return instance.getLogger().clone(name$1, version$2);\n    }, [instance]);\n    const [state, updateState] = useReducer(reducer, undefined, () => {\n        // Lazy initialization of the initial state\n        return {\n            inProgress: InteractionStatus.Startup,\n            accounts: instance.getAllAccounts(),\n        };\n    });\n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message) => {\n            updateState({\n                payload: {\n                    instance,\n                    logger,\n                    message,\n                },\n                type: MsalProviderActionType.EVENT,\n            });\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n        instance\n            .initialize()\n            .then(() => {\n            instance\n                .handleRedirectPromise()\n                .catch(() => {\n                // Errors should be handled by listening to the LOGIN_FAILURE event\n                return;\n            })\n                .finally(() => {\n                /*\n                 * If handleRedirectPromise returns a cached promise the necessary events may not be fired\n                 * This is a fallback to prevent inProgress from getting stuck in 'startup'\n                 */\n                updateState({\n                    payload: {\n                        instance,\n                        logger,\n                    },\n                    type: MsalProviderActionType.UNBLOCK_INPROGRESS,\n                });\n            });\n        })\n            .catch(() => {\n            // Errors should be handled by listening to the LOGIN_FAILURE event\n            return;\n        });\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n    const contextValue = {\n        instance,\n        inProgress: state.inProgress,\n        accounts: state.accounts,\n        logger,\n    };\n    return (React__default.createElement(MsalContext.Provider, { value: contextValue }, children));\n}\n\n/*! @azure/msal-react v2.0.9 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Returns Msal Context values\n */\nconst useMsal = () => useContext(MsalContext);\n\n/*! @azure/msal-react v2.0.9 2024-01-09 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isAuthenticated(allAccounts, matchAccount) {\n    return allAccounts.length > 0;\n}\n/**\n * Returns whether or not a user is currently signed-in. Optionally provide 1 or more accountIdentifiers to determine if a specific user is signed-in\n * @param matchAccount\n */\nfunction useIsAuthenticated(matchAccount) {\n    const { accounts: allAccounts, inProgress } = useMsal();\n    const [hasAuthenticated, setHasAuthenticated] = useState(() => {\n        if (inProgress === InteractionStatus.Startup) {\n            return false;\n        }\n        return isAuthenticated(allAccounts);\n    });\n    useEffect(() => {\n        setHasAuthenticated(isAuthenticated(allAccounts));\n    }, [allAccounts, matchAccount]);\n    return hasAuthenticated;\n}\n\n// Config object to be passed to Msal on creation\nconst msalConfig = {\n    auth: {\n        authority: config.authority,\n        clientId: config.clientId,\n        postLogoutRedirectUri: config.redirectUri,\n        redirectUri: config.redirectUri,\n    },\n    cache: {\n        cacheLocation: 'localStorage',\n        storeAuthStateInCookie: false,\n    },\n    system: {\n        loggerOptions: {\n            logLevel: LogLevel.Warning,\n            piiLoggingEnabled: false,\n        },\n    },\n};\nconst msalInstance$1 = new PublicClientApplication(msalConfig);\nmsalInstance$1.initialize().then(() => {\n    // Default to using the first account if no account is active on page load\n    if (!msalInstance$1.getActiveAccount() && msalInstance$1.getAllAccounts().length > 0) {\n        // Account selection logic is app dependent. Adjust as needed for different use cases.\n        msalInstance$1.setActiveAccount(msalInstance$1.getAllAccounts()[0]);\n    }\n    // Optional - This will update account state if a user signs in from another tab or window\n    msalInstance$1.enableAccountStorageEvents();\n});\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nconst loginRequest = {\n    scopes: [config.scope],\n};\n\nconst msalInstance = new PublicClientApplication(msalConfig);\nconst contentType = 'multipart/form-data';\nconst getTimeZone = () => {\n    let { timeZone } = Intl.DateTimeFormat().resolvedOptions();\n    if (timeZone === 'Asia/Kolkata') {\n        timeZone = 'Asia/Calcutta';\n    }\n    return timeZone;\n};\nclass CustomApiClient {\n    axiosClient;\n    static instance;\n    isRefreshing = false;\n    runningPromise = null;\n    constructor() {\n        this.axiosClient = axios.create({\n            baseURL: config.baseUrl,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        // this.axiosClient.defaults.timeout = 5000\n        this.addInterceptor();\n    }\n    static getInstance() {\n        if (!CustomApiClient.instance) {\n            CustomApiClient.instance = new CustomApiClient();\n        }\n        return CustomApiClient.instance;\n    }\n    async addInterceptor() {\n        this.axiosClient.interceptors.request.use(async (config$1) => {\n            config$1.headers.isV1 = true;\n            // adding employeeId and role\n            const userInfoData = StoreUtil.getData(USERINFO_KEY);\n            if (userInfoData) {\n                config$1.headers.role = userInfoData.role;\n                if (userInfoData.role === RoleName.PANELIST ||\n                    userInfoData.role === RoleName.EL ||\n                    userInfoData.role === RoleName.TA_ASSOCIATE ||\n                    userInfoData.role === RoleName.EXTERNAL_PANELIST) {\n                    config$1.headers.empid = userInfoData.employeeId ?? '';\n                    config$1.headers.roleId = userInfoData.roleId ?? '';\n                    config$1.headers.isV1 = false;\n                    config$1.headers.panelistId = userInfoData.candidateId ?? '';\n                }\n                else {\n                    config$1.headers.candidateid = userInfoData.candidateId ?? '';\n                    if (config$1.url?.includes(JOB_LIST_URL)) {\n                        config$1.headers.candidateid = 1;\n                    }\n                }\n            }\n            else {\n                // temp\n                config$1.headers.role = RoleName.CANDIDATE;\n                config$1.headers.roleId = 12;\n                config$1.headers.candidateid = 1;\n                config$1.headers.isV1 = true;\n                config$1.headers.Authorization = `Bearer ${config.accessToken}`;\n            }\n            const graphToken = StoreUtil.getData(GRAPH_TOKEN_KEY);\n            if (graphToken) {\n                if (this.isTokenValid(graphToken)) {\n                    config$1.headers.Graphapitoken = graphToken;\n                }\n                else {\n                    const account = msalInstance.getActiveAccount();\n                    if (account) {\n                        const result = await this.getGraphApiToken(account);\n                        if (result.accessToken) {\n                            StoreUtil.setData(GRAPH_TOKEN_KEY, result.accessToken);\n                            config$1.headers.Graphapitoken = result.accessToken;\n                        }\n                    }\n                }\n            }\n            config$1.headers.timezone = getTimeZone();\n            if (this.getLoginType()?.accessToken) {\n                config$1.headers.Authorization = `Bearer ${this.getLoginType()?.accessToken}`;\n            }\n            return config$1;\n        });\n        const refreshExpiredToken = this.refreshExpiredTokenClosure();\n        this.axiosClient.interceptors.response.use((response) => {\n            return response;\n        }, async (error) => {\n            const lastRequest = error.config;\n            const userInfoData = StoreUtil.getData(USERINFO_KEY);\n            if (userInfoData && error.response.status === 401) {\n                if (this.getLoginType()?.loginType === LoginType.CUSTOM ||\n                    this.getLoginType()?.loginType === LoginType.GOOGLE) {\n                    const result = await refreshExpiredToken();\n                    if (this.getLoginType()?.loginType === LoginType.CUSTOM) {\n                        if (result?.data?.jwtAccessToken) {\n                            lastRequest.headers.Authorization = `Bearer ${result.data.jwtAccessToken}`;\n                            return this.axiosClient(lastRequest);\n                        }\n                        else {\n                            StoreUtil.clearStorage();\n                            window.location.reload();\n                        }\n                    }\n                    else if (this.getLoginType()?.loginType === LoginType.GOOGLE) {\n                        if (result?.data?.access_token) {\n                            lastRequest.headers.Authorization = `Bearer ${result.data.access_token}`;\n                            return this.axiosClient(lastRequest);\n                        }\n                        else {\n                            StoreUtil.clearStorage();\n                            window.location.reload();\n                        }\n                    }\n                }\n                else if (this.getLoginType()?.loginType === LoginType.AZURE) {\n                    const token = await refreshExpiredToken();\n                    if (token) {\n                        lastRequest.headers.Authorization = `Bearer ${token}`;\n                        return this.axiosClient(lastRequest);\n                    }\n                }\n            }\n            return Promise.reject(error);\n        });\n    }\n    getLoginType() {\n        return StoreUtil.getData(LOGIN_KEY);\n    }\n    refreshExpiredTokenClosure() {\n        return async () => {\n            if (this.isRefreshing) {\n                return this.runningPromise;\n            }\n            else {\n                this.isRefreshing = true;\n                this.runningPromise = this.refreshApiToken().finally(() => {\n                    this.isRefreshing = false;\n                    this.runningPromise = null;\n                });\n                return this.runningPromise;\n            }\n        };\n    }\n    async callApi(url, type, payload, apiHeaders) {\n        let response = null;\n        try {\n            switch (type) {\n                case ApiType.GET:\n                    response = await this.axiosClient.get(encodeURI(url), { headers: apiHeaders, params: payload });\n                    break;\n                case ApiType.PUT:\n                    response = await this.axiosClient.put(encodeURI(url), payload, { headers: apiHeaders });\n                    break;\n                case ApiType.POST:\n                    if (payload !== null) {\n                        response = await this.axiosClient.post(encodeURI(url), payload, { headers: apiHeaders });\n                    }\n                    break;\n                case ApiType.PATCH:\n                    if (payload !== null) {\n                        response = await this.axiosClient.patch(encodeURI(url), payload, { headers: apiHeaders });\n                    }\n                    break;\n                case ApiType.DELETE:\n                    if (payload !== null) {\n                        response = await this.axiosClient.delete(encodeURI(url), { data: payload, headers: apiHeaders });\n                    }\n                    break;\n                default:\n            }\n            if (response?.status === 200 || response?.status === 201) {\n                return { data: response.data, error: '', success: true };\n            }\n            else {\n                return { data: response?.data, error: '', success: false };\n            }\n        }\n        catch (e) {\n            const error = e;\n            if (error.response?.status === 500) {\n                return {\n                    data: undefined,\n                    error: `We're experiencing an unexpected issue on our end. Please try again later.`,\n                    success: false,\n                };\n            }\n            else {\n                const message = error.response?.data.message;\n                return {\n                    data: undefined,\n                    error: message ?? `We're experiencing an unexpected issue on our end. Please try again later.`,\n                    success: false,\n                };\n            }\n        }\n    }\n    async deleteFile(url) {\n        const response = await this.axiosClient.delete(encodeURI(url));\n        if (response.status === 200) {\n            const responseData = response.data;\n            return responseData;\n        }\n        return null;\n    }\n    async deleteFileApi(url, callback) {\n        return this.axiosClient\n            .delete(encodeURI(url))\n            .then((response) => {\n            if (response.status === 200) {\n                const responseData = response.data;\n                callback(responseData);\n            }\n            else {\n                callback({});\n            }\n        })\n            .catch((error) => {\n            callback({});\n        });\n    }\n    async downloadFile(url, fileName, display) {\n        let response = null;\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        const apiHeaders = {\n            'Content-Type': contentType,\n            currentTimeZone: getTimeZone(),\n        };\n        if (userInfoData) {\n            apiHeaders.role = userInfoData.role;\n            if (userInfoData.isV1) {\n                apiHeaders.isV1 = userInfoData.isV1;\n            }\n            if (userInfoData.role === RoleName.PANELIST ||\n                userInfoData.role === RoleName.EL ||\n                userInfoData.role === RoleName.TA_ASSOCIATE ||\n                userInfoData.role === RoleName.EXTERNAL_PANELIST) {\n                apiHeaders.empid = userInfoData.employeeId ?? '';\n                apiHeaders.roleId = userInfoData.roleId ?? '';\n                apiHeaders.isV1 = false;\n                apiHeaders.panelistId = userInfoData.candidateId ?? '';\n            }\n            else {\n                apiHeaders.candidateid = userInfoData.candidateId ?? '';\n            }\n        }\n        try {\n            response = await this.axiosClient.get(encodeURI(url), {\n                headers: apiHeaders,\n                responseType: 'blob',\n            });\n            const href = URL.createObjectURL(response.data);\n            if (display) {\n                return href;\n            }\n            else {\n                const anchorElement = document.createElement('a');\n                anchorElement.href = href;\n                anchorElement.download = fileName;\n                document.body.appendChild(anchorElement);\n                anchorElement.click();\n                document.body.removeChild(anchorElement);\n                URL.revokeObjectURL(href);\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n        return '';\n    }\n    async getEventData(url, callback) {\n        const controller = new AbortController();\n        const { signal } = controller;\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        await fetchEventSource(url, {\n            headers: {\n                Authorization: `Bearer ${this.getLoginType()?.accessToken}`,\n                empid: userInfoData?.employeeId ?? '',\n                role: userInfoData?.role ?? '',\n                roleId: userInfoData?.roleId?.toString() ?? '0',\n                timezone: getTimeZone(),\n            },\n            onclose() {\n                callback('');\n                console.log('close');\n                controller.abort();\n            },\n            onerror() {\n                callback('');\n                console.log('error');\n                controller.abort();\n            },\n            onmessage(ev) {\n                if (ev.data) {\n                    callback(ev.data);\n                }\n            },\n            openWhenHidden: true,\n            signal,\n        });\n    }\n    async getGraphApiToken(account) {\n        await msalInstance.initialize();\n        return msalInstance.acquireTokenSilent({\n            account,\n            scopes: [config.graphScope],\n        });\n    }\n    async getInterviewEventData(controller, url, payload, token, callback) {\n        const { signal } = controller;\n        try {\n            await fetchEventSource(url, {\n                body: JSON.stringify(payload),\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                onclose() {\n                    callback('');\n                    console.log('close');\n                    controller.abort();\n                },\n                onerror(error) {\n                    callback('');\n                    console.log('error', error);\n                    controller.abort();\n                },\n                onmessage(ev) {\n                    if (ev.data) {\n                        callback(ev.data);\n                    }\n                    else {\n                        controller.abort();\n                    }\n                },\n                async onopen(response) {\n                    if (response.ok && response.headers.get('content-type') === EventStreamContentType) {\n                        // valid response\n                    }\n                    else {\n                        controller.abort();\n                    }\n                },\n                openWhenHidden: false,\n                signal,\n            });\n        }\n        catch (e) {\n            controller.abort();\n        }\n    }\n    isTokenValid(tokenStr) {\n        try {\n            const decodedToken = jwtDecode(tokenStr);\n            const currentDate = new Date();\n            return !(decodedToken.exp && decodedToken.exp * 1000 < currentDate.getTime());\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    async refreshApiToken() {\n        if (this.getLoginType()?.loginType === LoginType.AZURE) {\n            await msalInstance.initialize();\n            try {\n                const result = await msalInstance.acquireTokenSilent({\n                    scopes: [config.scope],\n                });\n                const loginModel = StoreUtil.getData(LOGIN_KEY);\n                if (loginModel) {\n                    loginModel.accessToken = result.accessToken;\n                    StoreUtil.setData(LOGIN_KEY, loginModel);\n                }\n                return result.accessToken;\n            }\n            catch (error) {\n                StoreUtil.clearStorage();\n                await msalInstance.logoutRedirect();\n                window.location.reload();\n                return '';\n            }\n        }\n        else {\n            try {\n                const userInfoData = StoreUtil.getData(USERINFO_KEY);\n                const apiUrl = userInfoData?.role === RoleName.CANDIDATE ? CANDIDATE_REFRESH_TOKEN : EXTERNAL_PANELIST_REFRESH_TOKEN;\n                let url = `${config.baseUrl}${apiUrl}`;\n                if (this.getLoginType()?.loginType === LoginType.GOOGLE) {\n                    url = `${config.baseUrl}${GOOGLE_REFRESH_TOKEN}`;\n                }\n                const options = {\n                    body: JSON.stringify({ refresh_token: this.getLoginType()?.refreshToken }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'POST',\n                };\n                const response = await fetch(url, options);\n                if (response.status === 200) {\n                    if (this.getLoginType()?.loginType === LoginType.GOOGLE) {\n                        const data = await response.json();\n                        const loginModel = StoreUtil.getData(LOGIN_KEY);\n                        if (loginModel) {\n                            loginModel.accessToken = data?.data?.access_token ?? '';\n                            StoreUtil.setData(LOGIN_KEY, loginModel);\n                        }\n                        return data;\n                    }\n                    else if (this.getLoginType()?.loginType === LoginType.CUSTOM) {\n                        const data = await response.json();\n                        const loginModel = StoreUtil.getData(LOGIN_KEY);\n                        if (loginModel) {\n                            loginModel.accessToken = data?.data?.jwtAccessToken ?? '';\n                            loginModel.refreshToken = data?.data?.jwtRefreshToken ?? '';\n                            StoreUtil.setData(LOGIN_KEY, loginModel);\n                        }\n                        return data;\n                    }\n                }\n                else {\n                    StoreUtil.clearStorage();\n                    window.location.reload();\n                }\n            }\n            catch (error) {\n                console.log('error', error);\n                StoreUtil.clearStorage();\n                window.location.reload();\n            }\n        }\n        return null;\n    }\n    async uploadFile(url, file, payload, method) {\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        const headers = {\n            'Content-Type': contentType,\n            currentTimeZone: getTimeZone(),\n        };\n        if (userInfoData) {\n            headers.role = userInfoData.role;\n            if (userInfoData.isV1) {\n                headers.isV1 = userInfoData.isV1;\n            }\n            if (userInfoData.role === RoleName.PANELIST ||\n                userInfoData.role === RoleName.EL ||\n                userInfoData.role === RoleName.TA_ASSOCIATE ||\n                userInfoData.role === RoleName.EXTERNAL_PANELIST) {\n                headers.empid = userInfoData.employeeId ?? '';\n                headers.role = userInfoData.role;\n                headers.roleId = userInfoData.roleId ?? '';\n                headers.isV1 = false;\n                headers.panelistId = userInfoData.candidateId ?? '';\n            }\n            else {\n                headers.candidateid = userInfoData.candidateId ?? '';\n            }\n        }\n        const formData = new FormData();\n        if (file) {\n            formData.append('file', file);\n        }\n        if (payload) {\n            Object.keys(payload).forEach((key) => {\n                formData.append(key, payload[key]);\n            });\n        }\n        let response = null;\n        if (method === ApiType.PUT) {\n            response = await this.axiosClient.put(encodeURI(url), formData, { headers });\n        }\n        else {\n            response = await this.axiosClient.post(encodeURI(url), formData, { headers });\n        }\n        if (response.status === 200) {\n            const responseData = response.data;\n            return responseData;\n        }\n        else {\n            return null;\n        }\n    }\n    async uploadFileApi(url, file, payload, callback) {\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        const headers = {\n            'Content-Type': contentType,\n            currentTimeZone: getTimeZone(),\n        };\n        if (userInfoData) {\n            headers.role = userInfoData.role;\n            if (userInfoData.isV1) {\n                headers.isV1 = userInfoData.isV1;\n            }\n            if (userInfoData.role === RoleName.PANELIST ||\n                userInfoData.role === RoleName.EL ||\n                userInfoData.role === RoleName.TA_ASSOCIATE ||\n                userInfoData.role === RoleName.EXTERNAL_PANELIST) {\n                headers.empid = userInfoData.employeeId ?? '';\n                headers.role = userInfoData.role;\n                headers.roleId = userInfoData.roleId ?? '';\n                headers.isV1 = false;\n                headers.panelistId = userInfoData.candidateId ?? '';\n            }\n            else {\n                headers.candidateid = userInfoData.candidateId ?? '';\n            }\n        }\n        const formData = new FormData();\n        if (payload) {\n            formData.append('file', file);\n            Object.keys(payload).forEach((key) => {\n                formData.append(key, payload[key]);\n            });\n        }\n        else {\n            formData.append('file', file);\n        }\n        return this.axiosClient\n            .post(encodeURI(url), formData, { headers })\n            .then((response) => {\n            if (response.status === 200) {\n                const responseData = response.data;\n                callback(responseData);\n            }\n            else {\n                callback({});\n            }\n        })\n            .catch((error) => {\n            callback({});\n        });\n    }\n    async uploadFiles(url, files, payload, method) {\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        const headers = {\n            'Content-Type': contentType,\n            currentTimeZone: getTimeZone(),\n        };\n        if (userInfoData) {\n            headers.role = userInfoData.role;\n            if (userInfoData.isV1) {\n                headers.isV1 = userInfoData.isV1;\n            }\n            if (userInfoData.role === RoleName.PANELIST ||\n                userInfoData.role === RoleName.EL ||\n                userInfoData.role === RoleName.TA_ASSOCIATE ||\n                userInfoData.role === RoleName.EXTERNAL_PANELIST) {\n                headers.empid = userInfoData.employeeId ?? '';\n                headers.role = userInfoData.role;\n                headers.roleId = userInfoData.roleId ?? '';\n                headers.isV1 = false;\n                headers.panelistId = userInfoData.candidateId ?? '';\n            }\n            else {\n                headers.candidateid = userInfoData.candidateId ?? '';\n            }\n        }\n        const formData = new FormData();\n        for (const file of files) {\n            formData.append('files', file);\n        }\n        if (payload) {\n            Object.keys(payload).forEach((key) => {\n                formData.append(key, payload[key]);\n            });\n        }\n        let response = null;\n        if (method === ApiType.PUT) {\n            response = await this.axiosClient.put(encodeURI(url), formData, { headers });\n        }\n        else {\n            response = await this.axiosClient.post(encodeURI(url), formData, { headers });\n        }\n        if (response.status === 200) {\n            const responseData = response.data;\n            return responseData;\n        }\n        else {\n            return null;\n        }\n    }\n}\nconst enabled = process.env.NODE_ENV !== 'test';\n\nconst useApplyJob = () => {\n    const applyJob = useMutation(async (payload) => {\n        const { candidateId, requisitionId } = payload;\n        return CustomApiClient.getInstance().callApi(`${JOB_APPLY_URL}?candidateId=${candidateId}&requisitionId=${requisitionId}`, ApiType.PUT);\n    });\n    return { applyJob };\n};\n\nconst useAwaitingCandidates = () => {\n    const getAwaitingCandidates = () => {\n        return useQuery([AWAITING_CANDIDATES_KEY], async () => CustomApiClient.getInstance().callApi(AWAITING_CANDIDATES_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getAwaitingCandidates };\n};\n\nconst useCalendarSlots = (role) => {\n    const getCalendarSlots = (params) => {\n        if (role === RoleName.CANDIDATE) {\n            return getCandidateCalendarSlots(params);\n        }\n        else {\n            return getPanelistCalendarSlots(params);\n        }\n    };\n    const getPanelistCalendarSlots = ({ endDate, startDate, }) => {\n        return useQuery([CALENDAR_GET_KEY], async () => CustomApiClient.getInstance().callApi(CALENDAR_API_URL, ApiType.GET, {\n            endDateTime: endDate,\n            startDateTime: startDate,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getCandidateCalendarSlots = ({ candidateId, endDate, startDate, }) => {\n        return useQuery([CALENDAR_GET_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_CANDIDATE_SLOTS, ApiType.GET, {\n            candidateId,\n            endDateTime: endDate,\n            startDateTime: startDate,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const createSlots = useMutation(async (payload) => CustomApiClient.getInstance().callApi(INTERVIEW_PANELIST_SLOTS, ApiType.POST, payload));\n    const candidateCreateSlots = useMutation(async (payload) => CustomApiClient.getInstance().callApi(INTERVIEW_CANDIDATE_SLOTS, ApiType.POST, payload));\n    const rescheduleSlots = useMutation(async (payload) => CustomApiClient.getInstance().callApi(RESCHEDULE_SLOTS_API_URL, ApiType.POST, payload));\n    const updateSlots = useMutation(async (payload) => CustomApiClient.getInstance().callApi(role === RoleName.CANDIDATE ? INTERVIEW_CANDIDATE_EDIT_SLOTS : INTERVIEW_PANELIST_EDIT_SLOTS, ApiType.PUT, payload));\n    const deleteSlots = useMutation(async (payload) => CustomApiClient.getInstance().callApi(role === RoleName.CANDIDATE ? INTERVIEW_CANDIDATE_SLOTS : INTERVIEW_PANELIST_SLOTS, ApiType.DELETE, payload));\n    return { candidateCreateSlots, createSlots, deleteSlots, getCalendarSlots, rescheduleSlots, updateSlots };\n};\n\nconst useCandidateBgvDocs = () => {\n    const getCandidateBgvDocs = () => {\n        return useQuery([GET_CANDIDATE_BGV_DOCS_KEY], async () => CustomApiClient.getInstance().callApi(GET_CANDIDATE_BGV_DOC_LIST_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getIsDocsUploadedAlready = (enableOnDemand) => {\n        return useQuery([GET_IS_CANDIDATE_BGV_DOCS_UPLOADED_KEY], async () => CustomApiClient.getInstance().callApi(GET_IS_CANDIDATE_DOCS_UPLOADED_URL, ApiType.GET), {\n            enabled: enableOnDemand,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getCandidateBgvDocFileDetils = () => {\n        return useQuery([GET_CANDIDATE_BGV_DOC_FILE_DETAILS_KEY], async () => CustomApiClient.getInstance().callApi(GET_CANDIDATE_BGV_DOCS_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const deleteDocItem = useMutation(async (payload) => CustomApiClient.getInstance().callApi(`${DELETE_BGV_DOC_ITEM_URL}?fileKey=${payload.fileKey}`, ApiType.DELETE, payload));\n    return { deleteDocItem, getCandidateBgvDocFileDetils, getCandidateBgvDocs, getIsDocsUploadedAlready };\n};\n\nconst useCandidateFeedback = () => {\n    const getCandidateFeedback = (pageNo, pageSize) => {\n        return useQuery([CANDIDATE_FEEDBACK_KEY], async () => CustomApiClient.getInstance().callApi(CANDIDATE_FEEDBACK_API_URL, ApiType.GET, {\n            pageNo,\n            pageSize,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidateFeedback };\n};\n\nconst useCandidateInterviewStageFeedback = () => {\n    const getCandidateInterviewFeedbackHistory = (interviewStageId, empId) => {\n        return useQuery([CANDIDATE_INTERVIEW_STAGE_FEEDBACK_KEY], async () => CustomApiClient.getInstance().callApi(CANDIDATE_INTERVIEW_STAGE_FEEDBACK_API_URL, ApiType.GET, {\n            empId,\n            interviewStageId,\n        }), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidateInterviewFeedbackHistory };\n};\n\nconst useCandidatePlayGroundProcess = () => {\n    const getCandidatePlayGroundStatus = (candidateId) => {\n        return useQuery([CANDIDATE_PLAYGROUND_PROCESS_KEY, candidateId], async () => CustomApiClient.getInstance().callApi(`${CANDIDATE_PLAYGROUND_PROCESS_URL}/${candidateId}`, ApiType.GET), {\n            enabled: Boolean(candidateId),\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getCandidatePastInterviewStages = (candidateId) => {\n        return useQuery([CANDIDATE_PAST_PLAYGROUND_PROCESS_KEY, candidateId], async () => CustomApiClient.getInstance().callApi(`${CANDIDATE_PAST_PLAYGROUND_PROCESS_URL}?candidateId=${candidateId}`, ApiType.GET), {\n            enabled: Boolean(candidateId),\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidatePastInterviewStages, getCandidatePlayGroundStatus };\n};\n\nconst useCandidateRating = () => {\n    const getCandidateRating = () => {\n        return useQuery([CANDIDATE_RATING_KEY], async () => CustomApiClient.getInstance().callApi(CANDIDATE_RATING_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidateRating };\n};\n\nconst useCandidateReject = () => {\n    const getCandidateRejectReasons = () => {\n        return useQuery([GET_CANDIDATE_REJECT_API_KEY], async () => CustomApiClient.getInstance().callApi(GET_CANDIDATE_REJECT_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidateRejectReasons };\n};\n\nconst useCities = () => {\n    const getCitiesData = (countryCode) => {\n        const URL = countryCode ? `${GET_CITIES_URL}?countryCode=${countryCode}` : GET_CITIES_URL;\n        return useQuery([GET_CITIES_API_KEY], async () => CustomApiClient.getInstance().callApi(URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCitiesData };\n};\n\nconst useCodingChallenge = () => {\n    const getCodingChallengeInfo = (interviewStageId) => {\n        return useQuery([CODING_CHALLENGE_KEY], async () => CustomApiClient.getInstance().callApi(CODING_CHALLENGE_URL, ApiType.GET, {\n            interviewStageId,\n        }), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCodingChallengeInfo };\n};\n\nconst useCodingChallengeDetail = () => {\n    const getCodingChallengeResult = (interviewStageId) => {\n        return useQuery([CODING_CHALLENGE_DETAIL_KEY, interviewStageId], async () => CustomApiClient.getInstance().callApi(CODING_CHALLENGE_DETAIL_URL, ApiType.GET, { interviewStageId }), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getUseCase = (interviewStageId) => {\n        return useQuery([USE_CASE_DETAIL_KEY, interviewStageId], async () => CustomApiClient.getInstance().callApi(USE_CASE_DETAIL_URL, ApiType.GET, {\n            interviewStageId,\n        }), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCodingChallengeResult, getUseCase };\n};\n\nconst fetchCountryCodeFromApi = async () => {\n    try {\n        const response = await fetch('https://ipapi.co/json');\n        const data = await response.json();\n        return data?.country_code_iso3 || null;\n    }\n    catch (error) {\n        return null;\n    }\n};\nconst useCurrentCountryCode = () => {\n    const fetchCountryCode = useMutation(fetchCountryCodeFromApi);\n    return { fetchCountryCode };\n};\n\nconst useRole = () => {\n    const getUserRole = () => {\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        return userInfoData?.role || '';\n    };\n    const isEmployeeRole = () => {\n        const role = getUserRole();\n        return (role === RoleName.EL ||\n            role === RoleName.PANELIST ||\n            role === RoleName.TA_ASSOCIATE ||\n            role === RoleName.EXTERNAL_PANELIST);\n    };\n    const isELRole = () => {\n        return getUserRole() === RoleName.EL;\n    };\n    const getUserInfo = () => {\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        return userInfoData;\n    };\n    return { getUserInfo, getUserRole, isELRole, isEmployeeRole };\n};\n\nconst useDescription = () => {\n    const { getUserInfo } = useRole();\n    const getJobDescription = ({ candidateId, jobId, }) => {\n        return useQuery([JOB_INFO_KEY], async () => CustomApiClient.getInstance().callApi(JOB_INFO_URL, ApiType.GET, { jobId }, {\n            positionId: getUserInfo()?.isV1,\n        }), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getJobDescription };\n};\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate$1(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate$1(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}\n\nvar defaultOptions = {};\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nfunction isDate$1(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate$1(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate$1(dirtyDate);\n  return !isNaN(Number(date));\n}\n\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}\n\nvar MILLISECONDS_IN_DAY = 86400000;\nfunction getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}\n\nfunction startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate$1(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}\n\nfunction getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\nfunction startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}\n\nvar MILLISECONDS_IN_WEEK$1 = 604800000;\nfunction getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;\n}\n\nfunction startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate$1(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}\n\nfunction getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\nfunction startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}\n\nvar MILLISECONDS_IN_WEEK = 604800000;\nfunction getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters$1 = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return formatters$1.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return formatters$1.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return formatters$1.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return formatters$1.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return formatters$1.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return formatters$1.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return formatters$1.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return formatters$1.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter;\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nvar dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\n\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nfunction isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nfunction isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nfunction throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\n\nfunction buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\n\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nfunction buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\n\nfunction buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\n\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nfunction format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale$1 = (_ref = (_options$locale = void 0 ) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : locale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = void 0 ) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : void 0 ) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = void 0 ) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : void 0 ) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale$1.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale$1.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = toDate$1(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale$1,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale$1.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = formatters[firstCharacter];\n    if (formatter) {\n      if (isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale$1.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\nconst useUtil = () => {\n    const getFormattedDate = (date, formatType) => {\n        if (!isValid(date)) {\n            return 'Invalid Date';\n        }\n        return format(date, formatType);\n    };\n    const getFormatInput = (input) => {\n        if (input) {\n            const parts = input.split(',').map((part) => part.trim());\n            return parts.join(' | ');\n        }\n        return '';\n    };\n    const getQueryPramas = (payload) => {\n        const params = {\n            endDate: payload.endDate,\n            startDate: payload.startDate,\n        };\n        if (payload.accountIds?.length) {\n            params.accountIds = payload.accountIds.toString();\n        }\n        if (payload.locationIds?.length) {\n            params.locationIds = payload.locationIds.toString();\n        }\n        if (payload.jobOpportunityIds?.length) {\n            params.jobOpportunityIds = payload.jobOpportunityIds.toString();\n        }\n        if (Object.hasOwn(payload, 'allCandidates')) {\n            params.allCandidates = payload.allCandidates;\n        }\n        return params;\n    };\n    return {\n        getFormatInput,\n        getFormattedDate,\n        getQueryPramas,\n    };\n};\n\nconst useELDashboardInfo = () => {\n    const { getQueryPramas } = useUtil();\n    const getElDashboardHiringDetails = (payload) => {\n        return useQuery([EL_DASHBOARD_INFO_KEY], async () => CustomApiClient.getInstance().callApi(EL_HIRING_INFO_URL, ApiType.GET, getQueryPramas(payload)), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getElDashboardHiringDetails };\n};\n\nconst useELHiringJobInfo = () => {\n    const { getQueryPramas } = useUtil();\n    const getElJobHiringInfo = (payload) => {\n        return useQuery([EL_HIRING_JOB_INFO_KEY], async () => CustomApiClient.getInstance().callApi(EL_HIRING_DASHBOARD_INFO_URL, ApiType.GET, getQueryPramas(payload)), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getElJobHiringInfo };\n};\n\nconst useELJobCandidatesApiHook = () => {\n    const getELJobCandidatesData = (queryParams, jobId) => {\n        const params = {\n            jobId,\n            pageNo: queryParams.pageNo,\n            pageSize: queryParams.pageSize,\n        };\n        if (queryParams.filter) {\n            if (queryParams.filter.stage?.length) {\n                params.stage = queryParams.filter.stage.toString();\n            }\n            if (queryParams.filter.currentStatus?.length) {\n                params.currentStatus = queryParams.filter.currentStatus.toString();\n            }\n            if (queryParams.filter.search?.length) {\n                params.searchString = queryParams.filter.search;\n            }\n        }\n        return useQuery([EL_JOB_CANDIDATES_API_KEY], async () => CustomApiClient.getInstance().callApi(EL_JOB_CANDIDATES_API_URL, ApiType.GET, params), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getELJobCandidatesData };\n};\n\nconst useELJobKpiInfo = () => {\n    const getELKpiData = (opportunityIds) => {\n        return useQuery([EL_JOBS_KPI_DETAILS_KEY], async () => CustomApiClient.getInstance().callApi(EL_JOBS_KPI_DETAILS, ApiType.GET, {\n            jobOpportunityIds: opportunityIds.toString(),\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getElJdKpiData = (opportunityId) => {\n        return useQuery([EL_JOB_DESCRIPTION_KPI_DETAILS_KEY], async () => CustomApiClient.getInstance().callApi(EL_JOB_DESCRIPTION_KPI_DETAILS, ApiType.GET, {\n            jobDescriptionId: opportunityId,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getELKpiData, getElJdKpiData };\n};\n\nconst useELJobsInfo = () => {\n    const getElJobsHiringDetails = (jobOpportunityIds) => {\n        return useQuery([EL_DASHBOARD_INFO_KEY], async () => CustomApiClient.getInstance().callApi(EL_HIRING_INFO_URL, ApiType.GET, {\n            jobOpportunityIds: jobOpportunityIds.toString(),\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getElJobsHiringDetails };\n};\n\nconst useExplore = () => {\n    const getExploreTestimonial = () => {\n        return useQuery([EXPLORE_TESTIMONIAL_GET_API_KEY], async () => CustomApiClient.getInstance().callApi(EXPLORE_TESTIMONIAL_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getExploreVideo = () => {\n        return useQuery([EXPLORE_VIDEO_GET_API_KEY], async () => CustomApiClient.getInstance().callApi(EXPLORE_VIDEO_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getExploreTestimonial, getExploreVideo };\n};\n\nconst useFeedbackRating = () => {\n    const feedbackRating = useMutation(async (payload) => {\n        return CustomApiClient.getInstance().callApi(CANDIDATE_SURVEY_API_URL, ApiType.POST, payload);\n    });\n    const getSurveyQuestions = (params) => {\n        return useQuery([CANDIDATE_SURVEY_QUESTIONS_API_KEY], async () => CustomApiClient.getInstance().callApi(CANDIDATE_SURVEY_QUESTION_API_URL, ApiType.GET, params), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { feedbackRating, getSurveyQuestions };\n};\n\nconst useFile = () => {\n    const downloadFile = async (fileKey, fileName, isDisplay) => {\n        return CustomApiClient.getInstance().downloadFile(`${DOWNLOAD_FILE_API_URL}?objectKey=${fileKey}`, fileName, isDisplay);\n    };\n    const downloadAttachment = async (downloadUrl, fileName, isDisplay) => {\n        return CustomApiClient.getInstance().downloadFile(downloadUrl, fileName, isDisplay);\n    };\n    const uploadFile = async (fileKey, file, payload) => {\n        return CustomApiClient.getInstance().uploadFile(`${FILE_UPLOAD_API_URL}?objectType=${fileKey}`, file, payload, ApiType.POST);\n    };\n    const uploadAttachment = async (uploadUrl, file, payload, method) => {\n        return CustomApiClient.getInstance().uploadFile(uploadUrl, file, payload, method);\n    };\n    const deleteFile = async (fileKey) => {\n        return CustomApiClient.getInstance().deleteFile(`${DELETE_FILE_API_URL}?objectKey=${fileKey}`);\n    };\n    const uploadBgvDocs = async (files, payload) => {\n        return CustomApiClient.getInstance().uploadFiles(`${UPLOAD_BGV_DOCS}`, files, payload, ApiType.POST);\n    };\n    return { deleteFile, downloadAttachment, downloadFile, uploadAttachment, uploadBgvDocs, uploadFile };\n};\n\nconst useFilters = () => {\n    const getAllAccountDetails = () => {\n        return useQuery([ALL_ACCOUNT_API_KEY], async () => CustomApiClient.getInstance().callApi(ALL_ACCOUNT_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getAllOfficeLocations = () => {\n        return useQuery([ALL_LOCATION_API_KEY], async () => CustomApiClient.getInstance().callApi(ALL_LOCATION_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getAllProjectDetails = () => {\n        return useQuery([ALL_PROJECTS_API_KEY], async () => CustomApiClient.getInstance().callApi(ALL_PROJECTS_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getJobSourceOptions = () => {\n        return useQuery([JOB_SOURCES_LIST_API_KEY], async () => CustomApiClient.getInstance().callApi(JOB_SOURCES_LIST_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getAllAccountDetails, getAllOfficeLocations, getAllProjectDetails, getJobSourceOptions };\n};\n\nconst useGetActions = () => {\n    const getMyActionData = () => {\n        return useQuery([MYACTION_API_KEY], async () => CustomApiClient.getInstance().callApi(MYACTION_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getMyActionData };\n};\n\nconst useGetRefreshToken = () => {\n    const storeTokenModel = (data) => {\n        const loginModel = StoreUtil.getData(LOGIN_KEY);\n        if (loginModel) {\n            loginModel.accessToken = data?.data?.jwtAccessToken ?? '';\n            StoreUtil.setData(LOGIN_KEY, loginModel);\n        }\n    };\n    const getRefreshToken = async () => {\n        const userInfoData = StoreUtil.getData(USERINFO_KEY);\n        const apiUrl = userInfoData?.role === RoleName.CANDIDATE ? CANDIDATE_REFRESH_TOKEN : EXTERNAL_PANELIST_REFRESH_TOKEN;\n        let url = `${config.baseUrl}${apiUrl}`;\n        if (StoreUtil.getData(LOGIN_KEY).accessToken === LoginType.GOOGLE) {\n            url = `${config.baseUrl}${GOOGLE_REFRESH_TOKEN}`;\n        }\n        const options = {\n            body: JSON.stringify({ refresh_token: StoreUtil.getData(LOGIN_KEY)?.refreshToken }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        };\n        try {\n            const response = await fetch(url, options);\n            if (response.status === 200) {\n                return await response.json();\n            }\n            return null;\n        }\n        catch (error) {\n            return null;\n        }\n    };\n    return { getRefreshToken, storeTokenModel };\n};\n\nconst useGetSkills = () => {\n    const getSkillsInfoData = () => {\n        return useQuery([SKILLS_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(SKILLS_INFO_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getSkillsOptionsByCategory = useMutation(async (payload) => CustomApiClient.getInstance().callApi(SKILLS_BY_CATG_API_URL, ApiType.POST, payload));\n    return { getSkillsInfoData, getSkillsOptionsByCategory };\n};\n\nconst useHackerRank = (enableOnDemand) => {\n    const getHackerRankData = (interviewStageId) => {\n        return useQuery([HACKER_RANK_API_KEY], async () => CustomApiClient.getInstance().callApi(HACKER_RANK_API_URL, ApiType.GET, {\n            interviewStageId,\n        }), {\n            enabled: enableOnDemand,\n            refetchOnWindowFocus: false,\n            retry: 2,\n        });\n    };\n    const generateHackerRankTest = useMutation(async (payload) => CustomApiClient.getInstance().callApi(`${GENERATE_HACKERRANK_TEST_URL}?forceAttempt=false&interviewStageId=${payload.interviewStageId}`, ApiType.POST));\n    const triggerNextRound = useMutation(async (payload) => CustomApiClient.getInstance().callApi(`${CANDIDATE_PROCEED_NEXT_ROUND_API_URL}?interviewStageId=${payload.interviewStageId}`, ApiType.POST, payload));\n    return { generateHackerRankTest, getHackerRankData, triggerNextRound };\n};\n\nconst useHackerRankTestDetail = () => {\n    const getCandidateTestResult = (interviewStageId) => {\n        return useQuery([HACKER_RANK_TEST_DETAIL_KEY, interviewStageId], async () => CustomApiClient.getInstance().callApi(HACKER_RANK_TEST_DETAIL_URL, ApiType.GET, { interviewStageId }), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidateTestResult };\n};\n\nconst useHiringProcess = () => {\n    const getHackerRankOptions = (testName) => {\n        return useQuery([PRIMARY_CHALLENGE_KEY], async () => CustomApiClient.getInstance().callApi(PRIMARY_CHALLENGE_API_URL, ApiType.GET, {\n            testName,\n        }), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getHackerRankOptions };\n};\n\nconst useIncentive = () => {\n    const getIncentiveData = (queryParams) => {\n        const params = {\n            isFilter: false,\n            pageNo: queryParams.pageNo,\n            pageSize: queryParams.pageSize,\n        };\n        if (queryParams.filter) {\n            if (queryParams.filter.status?.length) {\n                params.isFilter = true;\n                params.status = queryParams.filter.status.toString();\n            }\n            if (queryParams.filter.candidateStatus?.length) {\n                params.isFilter = true;\n                params.candidateStatus = queryParams.filter.candidateStatus.toString();\n            }\n            if (queryParams.filter.v1AccountName?.length) {\n                params.isFilter = true;\n                params.accounts = queryParams.filter.v1AccountName.toString();\n            }\n            if (queryParams.filter.startDateTime) {\n                params.isFilter = true;\n                params.startDateTime = queryParams.filter.startDateTime;\n            }\n            if (queryParams.filter.endDateTime) {\n                params.isFilter = true;\n                params.endDateTime = queryParams.filter.endDateTime;\n            }\n            if (queryParams.filter.search?.length) {\n                params.isFilter = true;\n                params.searchString = queryParams.filter.search;\n            }\n        }\n        return useQuery([INCENTIVES_GET_API_KEY], async () => CustomApiClient.getInstance().callApi(INCENTIVES_API_URL, ApiType.GET, params), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getIncentiveData };\n};\n\nconst useInterviewMeetingDetails = () => {\n    const getSearchPanelistData = (params) => {\n        return useQuery([INTERVIEW_MEETING_DETAIL_API_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_MEETING_DETAIL_API_URL, ApiType.GET, params), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const optOutInterview = useMutation(async (payload) => CustomApiClient.getInstance().callApi(INTERVIEW_MEETING_DETAIL_OPT_OUT_API_URL, ApiType.POST, payload));\n    return { getSearchPanelistData, optOutInterview };\n};\n\nconst useInterviewSlots = () => {\n    const getDashboardInterviewSlots = (params) => {\n        return useQuery([INTERVIEW_SLOTS_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_SLOTS_URL, ApiType.GET, params), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getDashboardInterviewSlots };\n};\n\nconst useInterviewSuccessRate = () => {\n    const getInterviewSuccessRate = () => {\n        return useQuery([INTERVIEW_SUCCESS_RATE_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_SUCCESS_RATE_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getInterviewSuccessRate };\n};\n\nconst useJDHiringPipelineInfo = () => {\n    const getJDHiringPipelineDetails = (jobDescriptionId) => {\n        return useQuery([EL_DASHBOARD_INFO_KEY], async () => CustomApiClient.getInstance().callApi(EL_HIRING_INFO_URL, ApiType.GET, {\n            jobDescriptionId: jobDescriptionId.toString(),\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getJDHiringPipelineDetails };\n};\n\nconst useJobDescription = () => {\n    const getJobDescription = (params) => {\n        return useQuery([CANDIDATE_REQUISITION_INFO_KEY], async () => CustomApiClient.getInstance().callApi(CANDIDATE_REQUISITION_INFO_URL, ApiType.GET, params), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getJobDescription };\n};\n\nconst useJobFilterOptions = () => {\n    const getJobFiltersData = () => {\n        return useQuery([JOB_FILTER_OPTIONS_KEY], async () => CustomApiClient.getInstance().callApi(JOB_FILTER_OPTIONS, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getJobFiltersData };\n};\n\nconst useJobList = () => {\n    const getJobList = (jobPayload) => {\n        return useQuery([JOB_LIST_KEY], async () => CustomApiClient.getInstance().callApi(JOB_LIST_URL, ApiType.POST, jobPayload), {\n            enabled: false,\n            refetchOnWindowFocus: true,\n        });\n    };\n    return { getJobList };\n};\n\nconst useJobRefer = () => {\n    const jobRefer = useMutation(async (payload) => {\n        return CustomApiClient.getInstance().callApi(JOB_REFER_API_URL, ApiType.POST, payload);\n    });\n    return { jobRefer };\n};\n\nconst useJobStatus = (enableOnDemand) => {\n    const getJobStatus = (candidateId) => {\n        return useQuery([JOB_STATUS_KEY], async () => CustomApiClient.getInstance().callApi(JOB_STATUS_URL, ApiType.GET, null, {\n            candidateid: candidateId,\n        }), {\n            enabled: enableOnDemand,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const jobStatus = useMutation(async () => CustomApiClient.getInstance().callApi(JOB_STATUS_URL, ApiType.GET));\n    return { getJobStatus, jobStatus };\n};\n\nconst useLogin = () => {\n    const [login, setLogin] = useState(false);\n    const storeTokensInStorage = () => {\n        const keys = Object.keys(localStorage);\n        for (const key of keys) {\n            const credentialObj = StoreUtil.getData(key, false);\n            if (credentialObj?.credentialType === 'AccessToken') {\n                const loginInfo = {\n                    accessToken: credentialObj?.secret,\n                    loginType: LoginType.AZURE,\n                    refreshToken: '',\n                };\n                StoreUtil.setData(LOGIN_KEY, loginInfo);\n            }\n        }\n    };\n    useEffect(() => {\n        const callbackId = msalInstance$1.addEventCallback((event) => {\n            if (event.eventType === EventType.LOGIN_SUCCESS && event.payload !== null) {\n                const payload = event.payload;\n                const { account } = payload;\n                storeTokensInStorage();\n                msalInstance$1.setActiveAccount(account);\n                setLogin(true);\n            }\n        });\n        return () => {\n            if (callbackId) {\n                msalInstance$1.removeEventCallback(callbackId);\n            }\n        };\n    }, []);\n    const candidateLogin = useMutation(async (payload) => CustomApiClient.getInstance().callApi(CANDIDATE_LOGIN_API_URL, ApiType.POST, payload));\n    const otpVerify = useMutation(async (payload) => CustomApiClient.getInstance().callApi(OTP_VERIFY_API_URL, ApiType.POST, payload));\n    const externalPanelistLogin = useMutation(async (payload) => CustomApiClient.getInstance().callApi(EXTERNAL_PANELIST_LOGIN, ApiType.POST, payload));\n    const externalPanelistOtpVerify = useMutation(async (payload) => CustomApiClient.getInstance().callApi(EXTERNAL_PANELIST_OTP_VERIFY, ApiType.POST, payload));\n    const getGoogleToken = (authCode) => {\n        return useQuery([GOOGLE_AUTH_KEY], async () => CustomApiClient.getInstance().callApi(GOOGLE_AUTH_TOKEN_URL, ApiType.GET, { authCode }), {\n            enabled: false,\n            keepPreviousData: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { candidateLogin, externalPanelistLogin, externalPanelistOtpVerify, getGoogleToken, login, otpVerify };\n};\n\nconst useMeetingDetails = () => {\n    const getMeetingDetails = (params) => {\n        return useQuery([MEETING_CANDIDATE_DETAILS_KEY], async () => CustomApiClient.getInstance().callApi(MEETING_CANDIDATE_DETAILS_URL, ApiType.GET, params), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getCandidateDetails = (params) => {\n        return useQuery([INTERVIEW_CANDIDATE_MEETING_DETAIL_API_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_CANDIDATE_MEETING_DETAIL_API_URL, ApiType.GET, params), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCandidateDetails, getMeetingDetails };\n};\n\nconst useNoticePeriod = () => {\n    const getNoticePeriod = () => {\n        return useQuery([GET_NOTICE_PERIOD_API_KEY], async () => CustomApiClient.getInstance().callApi(GET_NOTICE_PERIOD, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getNoticePeriod };\n};\n\nconst usePanelListDetails = () => {\n    const getPanelListDetails = (empId) => {\n        return useQuery([PANELIST_DETAILS_KEY, empId], async () => CustomApiClient.getInstance().callApi(PANELIST_API_URL, ApiType.GET, {\n            empId,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getPanelListDetails };\n};\n\nconst usePanelistCardDetails = () => {\n    const { getQueryPramas } = useUtil();\n    const getPanelistDetails = (payload) => {\n        return useQuery([EL_PANELIST_DETAILS_KEY], async () => CustomApiClient.getInstance().callApi(EL_PANELIST_DETAILS_URL, ApiType.GET, getQueryPramas(payload)), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getPanelistDetails };\n};\n\nconst usePanelistList = () => {\n    const { getQueryPramas } = useUtil();\n    const getPanelistList = () => {\n        return useQuery([PANELIST_LIST_API_KEY], async () => CustomApiClient.getInstance().callApi(PANELIST_LIST_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getSearchPanelist = (searchString) => {\n        return useQuery([PANELIST_LIST_API_KEY, searchString], async () => CustomApiClient.getInstance().callApi(PANELIST_LIST_API_URL, ApiType.GET, {\n            searchString,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getFilterPanelistList = (payload) => {\n        return useQuery([PANELIST_LIST_API_KEY], async () => CustomApiClient.getInstance().callApi(PANELIST_LIST_API_URL, ApiType.GET, getQueryPramas(payload)), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getFilterPanelistList, getPanelistList, getSearchPanelist };\n};\n\nconst usePanelistsApiHook = () => {\n    const getPanelistsData = (queryParams) => {\n        const params = {\n            isFilter: false,\n            pageNo: queryParams.pageNo,\n            pageSize: queryParams.pageSize,\n        };\n        if (queryParams.filter) {\n            if (queryParams.filter.account?.length) {\n                params.isFilter = true;\n                params.account = queryParams.filter.account.toString();\n            }\n            if (queryParams.filter.search?.length) {\n                params.isFilter = true;\n                params.searchString = queryParams.filter.search;\n            }\n        }\n        return useQuery([PANELISTS_GET_API_KEY], async () => CustomApiClient.getInstance().callApi(PANELISTS_GET_API_URL, ApiType.GET, params), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getAllAccounts = () => {\n        return useQuery([EL_MAPPED_ACCOUNTS_API_KEY], async () => CustomApiClient.getInstance().callApi(EL_MAPPED_ACCOUNTS_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const sendAlertToPanelist = useMutation(async (payload) => CustomApiClient.getInstance().callApi(EL_PANELIST_SEND_ALERT_API_URL, ApiType.POST, payload));\n    return { getAllAccounts, getPanelistsData, sendAlertToPanelist };\n};\n\nconst usePastInterview = () => {\n    const getInterviewStageOptions = () => {\n        return useQuery([INTERVIEW_STAGES_API_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_STAGES_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getInterviewStageStatusOptions = () => {\n        return useQuery([INTERVIEW_STATUSES_API_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_STATUSES_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getPastInterviewsData = (queryParams) => {\n        const params = {\n            isFilter: false,\n            pageNo: queryParams.pageNo,\n            pageSize: queryParams.pageSize,\n        };\n        if (queryParams.filter) {\n            if (queryParams.filter.stage?.length) {\n                params.isFilter = true;\n                params.stage = queryParams.filter.stage.toString();\n            }\n            if (queryParams.filter.stageStatus?.length) {\n                params.isFilter = true;\n                params.stageStatus = queryParams.filter.stageStatus.toString();\n            }\n            if (queryParams.filter.candidateFeedback?.length) {\n                params.isFilter = true;\n                params.ratings = queryParams.filter.candidateFeedback.toString();\n            }\n            if (queryParams.filter.v1AccountName?.length) {\n                params.isFilter = true;\n                params.accounts = queryParams.filter.v1AccountName.toString();\n            }\n            if (queryParams.filter.startDateTime) {\n                params.isFilter = true;\n                params.startDateTime = queryParams.filter.startDateTime;\n            }\n            if (queryParams.filter.endDateTime) {\n                params.isFilter = true;\n                params.endDateTime = queryParams.filter.endDateTime;\n            }\n            if (queryParams.filter.search?.length) {\n                params.isFilter = true;\n                params.searchString = queryParams.filter.search;\n            }\n        }\n        return useQuery([PAST_INTERVIEWS_GET_API_KEY], async () => CustomApiClient.getInstance().callApi(PAST_INTERVIEWS_API_URL, ApiType.GET, params), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getInterviewStageOptions, getInterviewStageStatusOptions, getPastInterviewsData };\n};\n\nconst usePendingFeedback = () => {\n    const getPendingFeedback = (pageNo, pageSize) => {\n        return useQuery([PENDING_FEEDBACK_KEY], async () => CustomApiClient.getInstance().callApi(PENDING_FEEDBACK_API_URL, ApiType.GET, {\n            pageNo,\n            pageSize,\n        }), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getPendingFeedback };\n};\n\nconst usePersonalInfo = () => {\n    const getStatesInfoData = (autoFetch, countryCode) => {\n        return useQuery([GET_STATES_API_KEY, countryCode], async () => CustomApiClient.getInstance().callApi(`${GET_STATES_URL}/${countryCode}`, ApiType.GET), {\n            enabled: autoFetch,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getCitiesByStateId = (id) => {\n        return useQuery([GET_CITIES_API_KEY, id], async () => CustomApiClient.getInstance().callApi(`${GET_CITY_BY_STATE_ID_URL}${id}`, ApiType.GET), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getCitiesByStateId, getStatesInfoData };\n};\n\nconst useProfilePopover = () => {\n    const getProfilePopover = () => {\n        const userData = StoreUtil.getData(USERINFO_KEY);\n        let apiUrl = '';\n        switch (userData?.role) {\n            case RoleName.CANDIDATE:\n                apiUrl = CANDIDATE_MINIMUM_INFO_API_URL;\n                break;\n            case RoleName.PANELIST || RoleName.EL || RoleName.EXTERNAL_PANELIST:\n                apiUrl = PANELIST_MINIMUM_INFO_API_URL;\n                break;\n            default:\n                apiUrl = PANELIST_MINIMUM_INFO_API_URL;\n                break;\n        }\n        return useQuery([CANDIDATE_MINIMUM_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(apiUrl, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getProfilePopover };\n};\n\nconst getELJobsFilter = (jobFilters, withJobDescriptions) => {\n    let params = {};\n    if (!withJobDescriptions) {\n        params = {\n            endDate: jobFilters?.endDate,\n            startDate: jobFilters?.startDate,\n            withJobDescriptions,\n        };\n        if (jobFilters?.accountIds?.length) {\n            params.accountIds = jobFilters.accountIds.toString();\n        }\n        if (jobFilters?.projectIds?.length) {\n            params.opportunityIds = jobFilters.projectIds.toString();\n        }\n        return params;\n    }\n};\nconst useProjectList = () => {\n    const getProjectList = (jobFilters, withJobDescriptions) => {\n        let filterPayload = {};\n        if (!withJobDescriptions) {\n            filterPayload = getELJobsFilter(jobFilters, withJobDescriptions);\n        }\n        else if (withJobDescriptions && jobFilters.length) {\n            filterPayload = {\n                opportunityIds: jobFilters?.toString(),\n                withJobDescriptions,\n            };\n        }\n        return useQuery(withJobDescriptions ? [PROJECT_JOB_LIST_KEY] : [PROJECT_LIST_KEY], async () => CustomApiClient.getInstance().callApi(PROJECT_LIST_URL, ApiType.GET, filterPayload), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getSearchProjectList = (searchOpportunityName) => {\n        return useQuery([PROJECT_LIST_KEY, searchOpportunityName], async () => CustomApiClient.getInstance().callApi(PROJECT_LIST_URL, ApiType.GET, {\n            searchOpportunityName,\n        }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getProjectList, getSearchProjectList };\n};\n\nconst useRecommendation = () => {\n    const getRecommendationAvailability = () => {\n        return useQuery([RECOMMENDATION_AVAILABILITY_KEY], async () => CustomApiClient.getInstance().callApi(RECOMMENDATION_AVAILABLITY_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const acceptRecommendation = useMutation(async (payload) => CustomApiClient.getInstance().callApi(RECOMMENDATION_ACCEPT_URL, ApiType.POST, payload));\n    return { acceptRecommendation, getRecommendationAvailability };\n};\n\nconst useRecruiterInfo = () => {\n    const getRecruiterInfo = () => {\n        return useQuery([RECRUITER_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(RECRUITER_INFO_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getRecruiterInfo };\n};\n\nconst useResumeDetails = () => {\n    const getResumeData = (objectKey) => {\n        return useQuery([DEX_PARSER_API_KEY], async () => CustomApiClient.getInstance().callApi(DEX_PARSER_API_URL, ApiType.GET, { objectKey }), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getResumeData };\n};\n\nconst useScheduledDetails = (enableOnDemand) => {\n    const getScheduledDetails = (params) => {\n        return useQuery([CANDIDATE_INTERVIEW_SCHEDULED_DETAIL_API_KEY], async () => CustomApiClient.getInstance().callApi(INTERVIEW_CANDIDATE_MEETING_DETAIL_API_URL, ApiType.GET, params), {\n            enabled: enableOnDemand,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getScheduledDetails };\n};\n\nconst useScreening = () => {\n    const startScreening = useMutation(async (payload) => {\n        return CustomApiClient.getInstance().callApi(`${CANDIDATE_SCREENING_API_URL}`, ApiType.POST, payload);\n    });\n    return { startScreening };\n};\n\nconst useScreeningProceed = () => {\n    const screenigProceedAnyway = useMutation(async (payload) => CustomApiClient.getInstance().callApi(`${CANDIDATE_SCREENING_PROCEEDANYWAY}?candidateId=${payload.candidateId}`, ApiType.PATCH));\n    const candidateDrop = useMutation(async () => {\n        return CustomApiClient.getInstance().callApi(`${CANDIDATE_DROP_API_URL}`, ApiType.PUT);\n    });\n    return { candidateDrop, screenigProceedAnyway };\n};\n\nconst getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    let httpHandler = runtimeConfig.httpHandler;\n    return {\n        setHttpHandler(handler) {\n            httpHandler = handler;\n        },\n        httpHandler() {\n            return httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            httpHandler.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nconst resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n\nvar HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n\nvar HttpApiKeyAuthLocation;\n(function (HttpApiKeyAuthLocation) {\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\n})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));\n\nvar EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n\nvar AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId || (AlgorithmId = {}));\n\nvar FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n\nconst SMITHY_CONTEXT_KEY = \"__smithy_context\";\n\nvar IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n\nvar RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nconst hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nconst loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nconst recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nconst getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n\nconst getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n\nconst normalizeProvider$1 = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nconst httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of options) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n\nconst httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\nconst getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\n    },\n});\n\nconst deserializerMiddleware = (options, deserializer) => (next) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n        }\n        throw error;\n    }\n};\n\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n\nconst deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nconst serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n\n({\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n});\n\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nconst httpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, identity, signingProperties),\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\n\nconst httpSigningMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"HTTP_SIGNING\"],\n    name: \"httpSigningMiddleware\",\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n};\nconst getHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpSigningMiddleware(), httpSigningMiddlewareOptions);\n    },\n});\n\nconst normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n\nconst alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\n\nconst fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n\nconst fromUtf8$2 = (input) => new TextEncoder().encode(input);\n\nconst toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8$2(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n\nconst toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return new TextDecoder(\"utf-8\").decode(input);\n};\n\nfunction toBase64(_input) {\n    let input;\n    if (typeof _input === \"string\") {\n        input = fromUtf8$2(_input);\n    }\n    else {\n        input = _input;\n    }\n    const isArrayLike = typeof input === \"object\" && typeof input.length === \"number\";\n    const isUint8Array = typeof input === \"object\" &&\n        typeof input.byteOffset === \"number\" &&\n        typeof input.byteLength === \"number\";\n    if (!isArrayLike && !isUint8Array) {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n\nfunction transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nfunction transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8$2(str));\n}\n\nclass Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return transformFromString(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n\nfunction requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n\nconst keepAliveSupport = {\n    supported: undefined,\n};\nclass FetchHttpHandler {\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new FetchHttpHandler(instanceOrOptions);\n    }\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n        if (keepAliveSupport.supported === undefined) {\n            keepAliveSupport.supported = Boolean(typeof Request !== \"undefined\" && \"keepalive\" in new Request(\"https://[::1]\"));\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        const keepAlive = this.config.keepAlive === true;\n        const credentials = this.config.credentials;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        const queryString = buildQueryString(request.query || {});\n        if (queryString) {\n            path += `?${queryString}`;\n        }\n        if (request.fragment) {\n            path += `#${request.fragment}`;\n        }\n        let auth = \"\";\n        if (request.username != null || request.password != null) {\n            const username = request.username ?? \"\";\n            const password = request.password ?? \"\";\n            auth = `${username}:${password}@`;\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n            credentials,\n        };\n        if (this.config?.cache) {\n            requestOptions.cache = this.config.cache;\n        }\n        if (body) {\n            requestOptions.duplex = \"half\";\n        }\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions.signal = abortSignal;\n        }\n        if (keepAliveSupport.supported) {\n            requestOptions.keepalive = keepAlive;\n        }\n        if (typeof this.config.requestInit === \"function\") {\n            Object.assign(requestOptions, this.config.requestInit(request));\n        }\n        let removeSignalEventListener = () => { };\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            reason: response.statusText,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        reason: response.statusText,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                const onAbort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    removeSignalEventListener = () => signal.removeEventListener(\"abort\", onAbort);\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }));\n        }\n        return Promise.race(raceOfPromises).finally(removeSignalEventListener);\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            config[key] = value;\n            return config;\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n\nconst streamCollector = async (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return new Uint8Array(await stream.arrayBuffer());\n    }\n    return collectStream(stream);\n};\nasync function collectStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\n\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n\nconst collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n\nfunction setFeature$1(context, feature, value) {\n    if (!context.__smithy_context) {\n        context.__smithy_context = {\n            features: {},\n        };\n    }\n    else if (!context.__smithy_context.features) {\n        context.__smithy_context.features = {};\n    }\n    context.__smithy_context.features[feature] = value;\n}\n\nclass DefaultIdentityProviderConfig {\n    constructor(config) {\n        this.authSchemes = new Map();\n        for (const [key, value] of Object.entries(config)) {\n            if (value !== undefined) {\n                this.authSchemes.set(key, value);\n            }\n        }\n    }\n    getIdentityProvider(schemeId) {\n        return this.authSchemes.get(schemeId);\n    }\n}\n\nconst createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\nconst EXPIRATION_MS = 300000;\nconst isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\nconst doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\nconst memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\n    if (provider === undefined) {\n        return undefined;\n    }\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async (options) => {\n        if (!pending) {\n            pending = normalizedProvider(options);\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider(options);\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider(options);\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (!requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider(options);\n            return resolved;\n        }\n        return resolved;\n    };\n};\n\nconst DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nfunction resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    };\n}\n\nclass EndpointCache {\n    constructor({ size, params }) {\n        this.data = new Map();\n        this.parameters = [];\n        this.capacity = size ?? 50;\n        if (params) {\n            this.parameters = params;\n        }\n    }\n    get(endpointParams, resolver) {\n        const key = this.hash(endpointParams);\n        if (key === false) {\n            return resolver();\n        }\n        if (!this.data.has(key)) {\n            if (this.data.size > this.capacity + 10) {\n                const keys = this.data.keys();\n                let i = 0;\n                while (true) {\n                    const { value, done } = keys.next();\n                    this.data.delete(value);\n                    if (done || ++i > 10) {\n                        break;\n                    }\n                }\n            }\n            this.data.set(key, resolver());\n        }\n        return this.data.get(key);\n    }\n    size() {\n        return this.data.size;\n    }\n    hash(endpointParams) {\n        let buffer = \"\";\n        const { parameters } = this;\n        if (parameters.length === 0) {\n            return false;\n        }\n        for (const param of parameters) {\n            const val = String(endpointParams[param] ?? \"\");\n            if (val.includes(\"|;\")) {\n                return false;\n            }\n            buffer += val + \"|;\";\n        }\n        return buffer;\n    }\n}\n\nconst IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nconst isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n\nconst VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nconst isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n\nconst customEndpointFunctions = {};\n\nconst debugId = \"endpoints\";\n\nfunction toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n\nclass EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n\nconst booleanEquals = (value1, value2) => value1 === value2;\n\nconst getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n\nconst getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n\nconst isSet$1 = (value) => value != null;\n\nconst not = (value) => !value;\n\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nconst parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n\nconst stringEquals = (value1, value2) => value1 === value2;\n\nconst substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n\nconst uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst endpointFunctions = {\n    booleanEquals,\n    getAttr,\n    isSet: isSet$1,\n    isValidHostLabel,\n    not,\n    parseURL,\n    stringEquals,\n    substring,\n    uriEncode,\n};\n\nconst evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n\nconst getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n\nconst evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n\nconst callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    const fnSegments = fn.split(\".\");\n    if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {\n        return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);\n    }\n    return endpointFunctions[fn](...evaluatedArgs);\n};\n\nconst evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(`${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n\nconst evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(`${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n\nconst getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n\nconst getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n\nconst getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n\nconst getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n\nconst evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n\nconst evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n\nconst evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n\nconst evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n\nconst resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n\nconst isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n\nconst ARN_DELIMITER = \":\";\nconst RESOURCE_DELIMITER = \"/\";\nconst parseArn = (value) => {\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\")\n        return null;\n    const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId,\n    };\n};\n\nvar partitions = [\n\t{\n\t\tid: \"aws\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"amazonaws.com\",\n\t\t\tdualStackDnsSuffix: \"api.aws\",\n\t\t\timplicitGlobalRegion: \"us-east-1\",\n\t\t\tname: \"aws\",\n\t\t\tsupportsDualStack: true,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^(us|eu|ap|sa|ca|me|af|il|mx)\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t\t\"af-south-1\": {\n\t\t\t\tdescription: \"Africa (Cape Town)\"\n\t\t\t},\n\t\t\t\"ap-east-1\": {\n\t\t\t\tdescription: \"Asia Pacific (Hong Kong)\"\n\t\t\t},\n\t\t\t\"ap-northeast-1\": {\n\t\t\t\tdescription: \"Asia Pacific (Tokyo)\"\n\t\t\t},\n\t\t\t\"ap-northeast-2\": {\n\t\t\t\tdescription: \"Asia Pacific (Seoul)\"\n\t\t\t},\n\t\t\t\"ap-northeast-3\": {\n\t\t\t\tdescription: \"Asia Pacific (Osaka)\"\n\t\t\t},\n\t\t\t\"ap-south-1\": {\n\t\t\t\tdescription: \"Asia Pacific (Mumbai)\"\n\t\t\t},\n\t\t\t\"ap-south-2\": {\n\t\t\t\tdescription: \"Asia Pacific (Hyderabad)\"\n\t\t\t},\n\t\t\t\"ap-southeast-1\": {\n\t\t\t\tdescription: \"Asia Pacific (Singapore)\"\n\t\t\t},\n\t\t\t\"ap-southeast-2\": {\n\t\t\t\tdescription: \"Asia Pacific (Sydney)\"\n\t\t\t},\n\t\t\t\"ap-southeast-3\": {\n\t\t\t\tdescription: \"Asia Pacific (Jakarta)\"\n\t\t\t},\n\t\t\t\"ap-southeast-4\": {\n\t\t\t\tdescription: \"Asia Pacific (Melbourne)\"\n\t\t\t},\n\t\t\t\"ap-southeast-5\": {\n\t\t\t\tdescription: \"Asia Pacific (Malaysia)\"\n\t\t\t},\n\t\t\t\"aws-global\": {\n\t\t\t\tdescription: \"AWS Standard global region\"\n\t\t\t},\n\t\t\t\"ca-central-1\": {\n\t\t\t\tdescription: \"Canada (Central)\"\n\t\t\t},\n\t\t\t\"ca-west-1\": {\n\t\t\t\tdescription: \"Canada West (Calgary)\"\n\t\t\t},\n\t\t\t\"eu-central-1\": {\n\t\t\t\tdescription: \"Europe (Frankfurt)\"\n\t\t\t},\n\t\t\t\"eu-central-2\": {\n\t\t\t\tdescription: \"Europe (Zurich)\"\n\t\t\t},\n\t\t\t\"eu-north-1\": {\n\t\t\t\tdescription: \"Europe (Stockholm)\"\n\t\t\t},\n\t\t\t\"eu-south-1\": {\n\t\t\t\tdescription: \"Europe (Milan)\"\n\t\t\t},\n\t\t\t\"eu-south-2\": {\n\t\t\t\tdescription: \"Europe (Spain)\"\n\t\t\t},\n\t\t\t\"eu-west-1\": {\n\t\t\t\tdescription: \"Europe (Ireland)\"\n\t\t\t},\n\t\t\t\"eu-west-2\": {\n\t\t\t\tdescription: \"Europe (London)\"\n\t\t\t},\n\t\t\t\"eu-west-3\": {\n\t\t\t\tdescription: \"Europe (Paris)\"\n\t\t\t},\n\t\t\t\"il-central-1\": {\n\t\t\t\tdescription: \"Israel (Tel Aviv)\"\n\t\t\t},\n\t\t\t\"me-central-1\": {\n\t\t\t\tdescription: \"Middle East (UAE)\"\n\t\t\t},\n\t\t\t\"me-south-1\": {\n\t\t\t\tdescription: \"Middle East (Bahrain)\"\n\t\t\t},\n\t\t\t\"sa-east-1\": {\n\t\t\t\tdescription: \"South America (Sao Paulo)\"\n\t\t\t},\n\t\t\t\"us-east-1\": {\n\t\t\t\tdescription: \"US East (N. Virginia)\"\n\t\t\t},\n\t\t\t\"us-east-2\": {\n\t\t\t\tdescription: \"US East (Ohio)\"\n\t\t\t},\n\t\t\t\"us-west-1\": {\n\t\t\t\tdescription: \"US West (N. California)\"\n\t\t\t},\n\t\t\t\"us-west-2\": {\n\t\t\t\tdescription: \"US West (Oregon)\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tid: \"aws-cn\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"amazonaws.com.cn\",\n\t\t\tdualStackDnsSuffix: \"api.amazonwebservices.com.cn\",\n\t\t\timplicitGlobalRegion: \"cn-northwest-1\",\n\t\t\tname: \"aws-cn\",\n\t\t\tsupportsDualStack: true,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t\t\"aws-cn-global\": {\n\t\t\t\tdescription: \"AWS China global region\"\n\t\t\t},\n\t\t\t\"cn-north-1\": {\n\t\t\t\tdescription: \"China (Beijing)\"\n\t\t\t},\n\t\t\t\"cn-northwest-1\": {\n\t\t\t\tdescription: \"China (Ningxia)\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tid: \"aws-us-gov\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"amazonaws.com\",\n\t\t\tdualStackDnsSuffix: \"api.aws\",\n\t\t\timplicitGlobalRegion: \"us-gov-west-1\",\n\t\t\tname: \"aws-us-gov\",\n\t\t\tsupportsDualStack: true,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t\t\"aws-us-gov-global\": {\n\t\t\t\tdescription: \"AWS GovCloud (US) global region\"\n\t\t\t},\n\t\t\t\"us-gov-east-1\": {\n\t\t\t\tdescription: \"AWS GovCloud (US-East)\"\n\t\t\t},\n\t\t\t\"us-gov-west-1\": {\n\t\t\t\tdescription: \"AWS GovCloud (US-West)\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tid: \"aws-iso\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"c2s.ic.gov\",\n\t\t\tdualStackDnsSuffix: \"c2s.ic.gov\",\n\t\t\timplicitGlobalRegion: \"us-iso-east-1\",\n\t\t\tname: \"aws-iso\",\n\t\t\tsupportsDualStack: false,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t\t\"aws-iso-global\": {\n\t\t\t\tdescription: \"AWS ISO (US) global region\"\n\t\t\t},\n\t\t\t\"us-iso-east-1\": {\n\t\t\t\tdescription: \"US ISO East\"\n\t\t\t},\n\t\t\t\"us-iso-west-1\": {\n\t\t\t\tdescription: \"US ISO WEST\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tid: \"aws-iso-b\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"sc2s.sgov.gov\",\n\t\t\tdualStackDnsSuffix: \"sc2s.sgov.gov\",\n\t\t\timplicitGlobalRegion: \"us-isob-east-1\",\n\t\t\tname: \"aws-iso-b\",\n\t\t\tsupportsDualStack: false,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t\t\"aws-iso-b-global\": {\n\t\t\t\tdescription: \"AWS ISOB (US) global region\"\n\t\t\t},\n\t\t\t\"us-isob-east-1\": {\n\t\t\t\tdescription: \"US ISOB East (Ohio)\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tid: \"aws-iso-e\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"cloud.adc-e.uk\",\n\t\t\tdualStackDnsSuffix: \"cloud.adc-e.uk\",\n\t\t\timplicitGlobalRegion: \"eu-isoe-west-1\",\n\t\t\tname: \"aws-iso-e\",\n\t\t\tsupportsDualStack: false,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t\t\"eu-isoe-west-1\": {\n\t\t\t\tdescription: \"EU ISOE West\"\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tid: \"aws-iso-f\",\n\t\toutputs: {\n\t\t\tdnsSuffix: \"csp.hci.ic.gov\",\n\t\t\tdualStackDnsSuffix: \"csp.hci.ic.gov\",\n\t\t\timplicitGlobalRegion: \"us-isof-south-1\",\n\t\t\tname: \"aws-iso-f\",\n\t\t\tsupportsDualStack: false,\n\t\t\tsupportsFIPS: true\n\t\t},\n\t\tregionRegex: \"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$\",\n\t\tregions: {\n\t\t}\n\t}\n];\nvar version$1 = \"1.1\";\nvar partitionsInfo = {\n\tpartitions: partitions,\n\tversion: version$1\n};\n\nlet selectedPartitionsInfo = partitionsInfo;\nconst partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\n\nconst awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n\nfunction setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n\nfunction setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n\nconst isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nconst validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nclass AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\n\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n};\n\nconst ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nconst CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nconst AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nconst SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nconst EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nconst SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nconst TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nconst AUTH_HEADER = \"authorization\";\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst DATE_HEADER = \"date\";\nconst GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nconst SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nconst SHA256_HEADER = \"x-amz-content-sha256\";\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nconst ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nconst PROXY_HEADER_PATTERN = /^proxy-/;\nconst SEC_HEADER_PATTERN = /^sec-/;\nconst ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nconst EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nconst UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nconst MAX_CACHE_SIZE = 50;\nconst KEY_TYPE_IDENTIFIER = \"aws4_request\";\nconst MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n\nconst signingKeyCache = {};\nconst cacheQueue = [];\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query)) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        const encodedKey = escapeUri(key);\n        keys.push(encodedKey);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[encodedKey] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .sort()\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n\nclass HeaderFormatter {\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = fromUtf8$2(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = fromUtf8$2(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nclass Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\n\nconst moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = HttpRequest.clone(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\n            options.hoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n\nconst prepareRequest = (request) => {\n    request = HttpRequest.clone(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n\nconst iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.headerFormatter = new HeaderFormatter();\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider$1(region);\n        this.credentialProvider = normalizeProvider$1(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerFormatter.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n\nconst resolveAwsSdkSigV4Config = (config) => {\n    let isUserSupplied = false;\n    let normalizedCreds;\n    if (config.credentials) {\n        isUserSupplied = true;\n        normalizedCreds = memoizeIdentityProvider(config.credentials, isIdentityExpired, doesIdentityRequireRefresh);\n    }\n    if (!normalizedCreds) {\n        if (config.credentialDefaultProvider) {\n            normalizedCreds = normalizeProvider(config.credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            normalizedCreds = async () => {\n                throw new Error(\"`credentials` is missing\");\n            };\n        }\n    }\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: normalizedCreds,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: normalizedCreds,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...config,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: isUserSupplied\n            ? async () => normalizedCreds().then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"))\n            : normalizedCreds,\n        signer,\n    };\n};\n\nconst getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n\nclass Client {\n    constructor(config) {\n        this.config = config;\n        this.middlewareStack = constructStack();\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\n        let handler;\n        if (useHandlerCache) {\n            if (!this.handlers) {\n                this.handlers = new WeakMap();\n            }\n            const handlers = this.handlers;\n            if (handlers.has(command.constructor)) {\n                handler = handlers.get(command.constructor);\n            }\n            else {\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n                handlers.set(command.constructor, handler);\n            }\n        }\n        else {\n            delete this.handlers;\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        }\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        this.config?.requestHandler?.destroy?.();\n        delete this.handlers;\n    }\n}\n\nclass Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [SMITHY_CONTEXT_KEY]: {\n                commandInstance: this,\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    constructor() {\n        this._init = () => { };\n        this._ep = {};\n        this._middlewareFn = () => [];\n        this._commandName = \"\";\n        this._clientName = \"\";\n        this._additionalContext = {};\n        this._smithyContext = {};\n        this._inputFilterSensitiveLog = (_) => _;\n        this._outputFilterSensitiveLog = (_) => _;\n        this._serializer = null;\n        this._deserializer = null;\n    }\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.serialize = closure._serializer;\n                this.deserialize = closure._deserializer;\n                this.input = input ?? {};\n                closure._init(this);\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n        });\n    }\n}\n\nconst SENSITIVE_STRING = \"***SensitiveInformation***\";\n\nconst expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nconst expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nconst strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nconst logger = {\n    warn: console.warn,\n};\n\nconst parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else if (typeof value === \"object\" && value.tag === 1) {\n        valueAsDouble = value.value;\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\n\nclass ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nconst decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n\nconst throwDefaultError$1 = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata$1(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nconst withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError$1({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata$1 = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n\nconst loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n\nconst getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in AlgorithmId) {\n        const algorithmId = AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nconst resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n\nconst getRetryConfiguration = (runtimeConfig) => {\n    let _retryStrategy = runtimeConfig.retryStrategy;\n    return {\n        setRetryStrategy(retryStrategy) {\n            _retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return _retryStrategy;\n        },\n    };\n};\nconst resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n\nconst getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return {\n        ...getChecksumConfiguration(runtimeConfig),\n        ...getRetryConfiguration(runtimeConfig),\n    };\n};\nconst resolveDefaultRuntimeConfig = (config) => {\n    return {\n        ...resolveChecksumRuntimeConfig(config),\n        ...resolveRetryRuntimeConfig(config),\n    };\n};\n\nconst StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\n\nclass NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n\nconst take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n\nconst _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nconst parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nasync function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n\nconst USER_AGENT = \"user-agent\";\nconst X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nconst SPACE = \" \";\nconst UA_NAME_SEPARATOR = \"/\";\nconst UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nconst UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nconst UA_ESCAPE_CHAR = \"-\";\n\nconst BYTE_LIMIT = 1024;\nfunction encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const sdkUserAgentValue = ([])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nconst getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\n\nconst DEFAULT_USE_DUALSTACK_ENDPOINT = false;\n\nconst DEFAULT_USE_FIPS_ENDPOINT = false;\n\nconst isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n\nconst getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n\nconst resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nconst contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n\nconst resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nconst isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nconst isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n\nconst createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n\nconst getEndpointFromConfig = async (serviceId) => undefined;\n\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n\nconst parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n\nconst toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n\nconst getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.endpoint) {\n        let endpointFromConfig;\n        if (clientConfig.serviceConfiguredEndpoint) {\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\n        }\n        else {\n            endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);\n        }\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nconst resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n\nconst endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        if (config.endpoint) {\n            setFeature$1(context, \"ENDPOINT_OVERRIDE\", \"N\");\n        }\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n            const smithyContext = getSmithyContext(context);\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\n            if (httpAuthOption) {\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\n                    signing_region: authScheme.signingRegion,\n                    signingRegion: authScheme.signingRegion,\n                    signing_service: authScheme.signingName,\n                    signingName: authScheme.signingName,\n                    signingRegionSet: authScheme.signingRegionSet,\n                }, authScheme.properties);\n            }\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n\nconst endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nconst getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n\nconst resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider$1(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    const resolvedConfig = {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider$1(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider$1(input.useFipsEndpoint ?? false),\n    };\n    let configuredEndpointPromise = undefined;\n    resolvedConfig.serviceConfiguredEndpoint = async () => {\n        if (input.serviceId && !configuredEndpointPromise) {\n            configuredEndpointPromise = getEndpointFromConfig(input.serviceId);\n        }\n        return configuredEndpointPromise;\n    };\n    return resolvedConfig;\n};\n\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nconst DEFAULT_MAX_ATTEMPTS = 3;\nconst DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n\nconst THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nconst TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nconst TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nconst NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n\nconst isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nconst isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nconst isTransientError = (error) => isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nconst isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n\nclass DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n\nconst DEFAULT_RETRY_DELAY_BASE = 100;\nconst MAXIMUM_RETRY_DELAY = 20 * 1000;\nconst THROTTLING_RETRY_DELAY_BASE = 500;\nconst INITIAL_RETRY_TOKENS = 500;\nconst RETRY_COST = 5;\nconst TIMEOUT_RETRY_COST = 10;\nconst NO_RETRY_INCREMENT = 1;\nconst INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nconst REQUEST_HEADER = \"amz-sdk-request\";\n\nconst getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n\nconst createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n\nclass StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.capacity = INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n\nclass AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native = {\n  randomUUID\n};\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  return unsafeStringify(rnds);\n}\n\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n\nconst resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider$1(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider$1(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\n\nconst isStreamingPayload = (request) => request?.body instanceof ReadableStream;\n\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload(request)) {\n                    (context.logger instanceof NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nconst retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nconst getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n\nconst defaultSecretsManagerHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider$1(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"secretsmanager\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultSecretsManagerHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return {\n        ...config_0,\n    };\n};\n\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"secretsmanager\",\n    };\n};\nconst commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n\nvar name = \"@aws-sdk/client-secrets-manager\";\nvar description = \"AWS SDK for JavaScript Secrets Manager Client for Node.js, Browser and React Native\";\nvar version = \"3.687.0\";\nvar scripts = {\n\tbuild: \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n\t\"build:cjs\": \"node ../../scripts/compilation/inline client-secrets-manager\",\n\t\"build:es\": \"tsc -p tsconfig.es.json\",\n\t\"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n\t\"build:types\": \"tsc -p tsconfig.types.json\",\n\t\"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n\tclean: \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n\t\"extract:docs\": \"api-extractor run --local\",\n\t\"generate:client\": \"node ../../scripts/generate-clients/single-service --solo secrets-manager\"\n};\nvar main = \"./dist-cjs/index.js\";\nvar types = \"./dist-types/index.d.ts\";\nvar module = \"./dist-es/index.js\";\nvar sideEffects = false;\nvar dependencies = {\n\t\"@aws-crypto/sha256-browser\": \"5.2.0\",\n\t\"@aws-crypto/sha256-js\": \"5.2.0\",\n\t\"@aws-sdk/client-sso-oidc\": \"3.687.0\",\n\t\"@aws-sdk/client-sts\": \"3.687.0\",\n\t\"@aws-sdk/core\": \"3.686.0\",\n\t\"@aws-sdk/credential-provider-node\": \"3.687.0\",\n\t\"@aws-sdk/middleware-host-header\": \"3.686.0\",\n\t\"@aws-sdk/middleware-logger\": \"3.686.0\",\n\t\"@aws-sdk/middleware-recursion-detection\": \"3.686.0\",\n\t\"@aws-sdk/middleware-user-agent\": \"3.687.0\",\n\t\"@aws-sdk/region-config-resolver\": \"3.686.0\",\n\t\"@aws-sdk/types\": \"3.686.0\",\n\t\"@aws-sdk/util-endpoints\": \"3.686.0\",\n\t\"@aws-sdk/util-user-agent-browser\": \"3.686.0\",\n\t\"@aws-sdk/util-user-agent-node\": \"3.687.0\",\n\t\"@smithy/config-resolver\": \"^3.0.10\",\n\t\"@smithy/core\": \"^2.5.1\",\n\t\"@smithy/fetch-http-handler\": \"^4.0.0\",\n\t\"@smithy/hash-node\": \"^3.0.8\",\n\t\"@smithy/invalid-dependency\": \"^3.0.8\",\n\t\"@smithy/middleware-content-length\": \"^3.0.10\",\n\t\"@smithy/middleware-endpoint\": \"^3.2.1\",\n\t\"@smithy/middleware-retry\": \"^3.0.25\",\n\t\"@smithy/middleware-serde\": \"^3.0.8\",\n\t\"@smithy/middleware-stack\": \"^3.0.8\",\n\t\"@smithy/node-config-provider\": \"^3.1.9\",\n\t\"@smithy/node-http-handler\": \"^3.2.5\",\n\t\"@smithy/protocol-http\": \"^4.1.5\",\n\t\"@smithy/smithy-client\": \"^3.4.2\",\n\t\"@smithy/types\": \"^3.6.0\",\n\t\"@smithy/url-parser\": \"^3.0.8\",\n\t\"@smithy/util-base64\": \"^3.0.0\",\n\t\"@smithy/util-body-length-browser\": \"^3.0.0\",\n\t\"@smithy/util-body-length-node\": \"^3.0.0\",\n\t\"@smithy/util-defaults-mode-browser\": \"^3.0.25\",\n\t\"@smithy/util-defaults-mode-node\": \"^3.0.25\",\n\t\"@smithy/util-endpoints\": \"^2.1.4\",\n\t\"@smithy/util-middleware\": \"^3.0.8\",\n\t\"@smithy/util-retry\": \"^3.0.8\",\n\t\"@smithy/util-utf8\": \"^3.0.0\",\n\t\"@types/uuid\": \"^9.0.1\",\n\ttslib: \"^2.6.2\",\n\tuuid: \"^9.0.1\"\n};\nvar devDependencies = {\n\t\"@tsconfig/node16\": \"16.1.3\",\n\t\"@types/node\": \"^16.18.96\",\n\tconcurrently: \"7.0.0\",\n\t\"downlevel-dts\": \"0.10.1\",\n\trimraf: \"3.0.2\",\n\ttypescript: \"~4.9.5\"\n};\nvar engines = {\n\tnode: \">=16.0.0\"\n};\nvar typesVersions = {\n\t\"<4.0\": {\n\t\t\"dist-types/*\": [\n\t\t\t\"dist-types/ts3.4/*\"\n\t\t]\n\t}\n};\nvar files = [\n\t\"dist-*/**\"\n];\nvar author = {\n\tname: \"AWS SDK for JavaScript Team\",\n\turl: \"https://aws.amazon.com/javascript/\"\n};\nvar license = \"Apache-2.0\";\nvar browser = {\n\t\"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n};\nvar homepage = \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-secrets-manager\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/aws/aws-sdk-js-v3.git\",\n\tdirectory: \"clients/client-secrets-manager\"\n};\nvar packageInfo = {\n\tname: name,\n\tdescription: description,\n\tversion: version,\n\tscripts: scripts,\n\tmain: main,\n\ttypes: types,\n\tmodule: module,\n\tsideEffects: sideEffects,\n\tdependencies: dependencies,\n\tdevDependencies: devDependencies,\n\tengines: engines,\n\ttypesVersions: typesVersions,\n\tfiles: files,\n\tauthor: author,\n\tlicense: license,\n\tbrowser: browser,\n\t\"react-native\": {\n\t\"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n},\n\thomepage: homepage,\n\trepository: repository\n};\n\nconst fromUtf8$1 = (input) => new TextEncoder().encode(input);\n\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8$1;\nfunction convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n\nvar SHA_256_HASH = { name: \"SHA-256\" };\nvar SHA_256_HMAC_ALGO = {\n    name: \"HMAC\",\n    hash: SHA_256_HASH\n};\nvar EMPTY_DATA_SHA_256 = new Uint8Array([\n    227,\n    176,\n    196,\n    66,\n    152,\n    252,\n    28,\n    20,\n    154,\n    251,\n    244,\n    200,\n    153,\n    111,\n    185,\n    36,\n    39,\n    174,\n    65,\n    228,\n    100,\n    155,\n    147,\n    76,\n    164,\n    149,\n    153,\n    27,\n    120,\n    82,\n    184,\n    85\n]);\n\nconst fallbackWindow = {};\nfunction locateWindow() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return fallbackWindow;\n}\n\nvar Sha256$2 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.toHash = new Uint8Array(0);\n        this.secret = secret;\n        this.reset();\n    }\n    Sha256.prototype.update = function (data) {\n        if (isEmptyData(data)) {\n            return;\n        }\n        var update = convertToBuffer(data);\n        var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n        typedArray.set(this.toHash, 0);\n        typedArray.set(update, this.toHash.byteLength);\n        this.toHash = typedArray;\n    };\n    Sha256.prototype.digest = function () {\n        var _this = this;\n        if (this.key) {\n            return this.key.then(function (key) {\n                return locateWindow()\n                    .crypto.subtle.sign(SHA_256_HMAC_ALGO, key, _this.toHash)\n                    .then(function (data) { return new Uint8Array(data); });\n            });\n        }\n        if (isEmptyData(this.toHash)) {\n            return Promise.resolve(EMPTY_DATA_SHA_256);\n        }\n        return Promise.resolve()\n            .then(function () {\n            return locateWindow().crypto.subtle.digest(SHA_256_HASH, _this.toHash);\n        })\n            .then(function (data) { return Promise.resolve(new Uint8Array(data)); });\n    };\n    Sha256.prototype.reset = function () {\n        var _this = this;\n        this.toHash = new Uint8Array(0);\n        if (this.secret && this.secret !== void 0) {\n            this.key = new Promise(function (resolve, reject) {\n                locateWindow()\n                    .crypto.subtle.importKey(\"raw\", convertToBuffer(_this.secret), SHA_256_HMAC_ALGO, false, [\"sign\"])\n                    .then(resolve, reject);\n            });\n            this.key.catch(function () { });\n        }\n    };\n    return Sha256;\n}());\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @internal\n */\nvar BLOCK_SIZE = 64;\n/**\n * @internal\n */\nvar DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nvar KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nvar INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nvar MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\n\nvar Sha256$1 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if (isEmptyData(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update(convertToBuffer(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nfunction bufferFromSecret(secret) {\n    var input = convertToBuffer(secret);\n    if (input.byteLength > BLOCK_SIZE) {\n        var bufferHash = new RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n\nvar subtleCryptoMethods = [\n    \"decrypt\",\n    \"digest\",\n    \"encrypt\",\n    \"exportKey\",\n    \"generateKey\",\n    \"importKey\",\n    \"sign\",\n    \"verify\"\n];\nfunction supportsWebCrypto(window) {\n    if (supportsSecureRandom(window) &&\n        typeof window.crypto.subtle === \"object\") {\n        var subtle = window.crypto.subtle;\n        return supportsSubtleCrypto(subtle);\n    }\n    return false;\n}\nfunction supportsSecureRandom(window) {\n    if (typeof window === \"object\" && typeof window.crypto === \"object\") {\n        var getRandomValues = window.crypto.getRandomValues;\n        return typeof getRandomValues === \"function\";\n    }\n    return false;\n}\nfunction supportsSubtleCrypto(subtle) {\n    return (subtle &&\n        subtleCryptoMethods.every(function (methodName) { return typeof subtle[methodName] === \"function\"; }));\n}\n\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        if (supportsWebCrypto(locateWindow())) {\n            this.hash = new Sha256$2(secret);\n        }\n        else {\n            this.hash = new Sha256$1(secret);\n        }\n    }\n    Sha256.prototype.update = function (data, encoding) {\n        this.hash.update(convertToBuffer(data));\n    };\n    Sha256.prototype.digest = function () {\n        return this.hash.digest();\n    };\n    Sha256.prototype.reset = function () {\n        this.hash.reset();\n    };\n    return Sha256;\n}());\n\nvar es5 = {exports: {}};\n\n(function (module, exports) {\n\t!function(e,t){module.exports=t();}(commonjsGlobal,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n});},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0});},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return \"NT\";case\"XP\":return \"XP\";case\"NT 5.0\":return \"2000\";case\"NT 5.1\":return \"XP\";case\"NT 5.2\":return \"2003\";case\"NT 6.0\":return \"Vista\";case\"NT 6.1\":return \"7\";case\"NT 6.2\":return \"8\";case\"NT 6.3\":return \"8.1\";case\"NT 10.0\":return \"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return \"Leopard\";case 6:return \"Snow Leopard\";case 7:return \"Lion\";case 8:return \"Mountain Lion\";case 9:return \"Mavericks\";case 10:return \"Yosemite\";case 11:return \"El Capitan\";case 12:return \"Sierra\";case 13:return \"High Sierra\";case 14:return \"Mojave\";case 15:return \"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1;}else if(u[0][a]<u[1][a])return -1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t];}));};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default;},18:function(e,t,r){t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"};},90:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default;},91:function(e,t,r){t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse();}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1);})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return \">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default;},92:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return {name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default;},93:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return {name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return {name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return {name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return {name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return {name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return {name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return {name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return {name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return {name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return {name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default;},94:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return {type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return {type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return {type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return {type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return \"blackberry\"===e.getBrowserName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return \"bada\"===e.getBrowserName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return \"windows phone\"===e.getBrowserName()},describe:function(){return {type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return \"android\"===e.getOSName(!0)&&t>=3},describe:function(){return {type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return \"android\"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return \"macos\"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return \"windows\"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return \"linux\"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return \"playstation 4\"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.tv}}},{test:function(e){return \"roku\"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default;},95:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return \"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return {name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return {name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return {name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default;}})})); \n} (es5));\n\nvar es5Exports = es5.exports;\nvar bowser = /*@__PURE__*/getDefaultExportFromCjs(es5Exports);\n\nconst createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => async (config) => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [\"ua\", \"2.1\"],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    const appId = await config?.userAgentAppId?.();\n    if (appId) {\n        sections.push([`app/${appId}`]);\n    }\n    return sections;\n};\n\nconst invalidProvider = (message) => () => Promise.reject(message);\n\nconst TEXT_ENCODER = typeof TextEncoder == \"function\" ? new TextEncoder() : null;\nconst calculateBodyLength = (body) => {\n    if (typeof body === \"string\") {\n        if (TEXT_ENCODER) {\n            return TEXT_ENCODER.encode(body).byteLength;\n        }\n        let len = body.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const code = body.charCodeAt(i);\n            if (code > 0x7f && code <= 0x7ff)\n                len++;\n            else if (code > 0x7ff && code <= 0xffff)\n                len += 2;\n            if (code >= 0xdc00 && code <= 0xdfff)\n                i--;\n        }\n        return len;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n\nconst y = \"required\", z = \"fn\", A = \"argv\", B = \"ref\", C = \"properties\", D = \"headers\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"stringEquals\", i = { [y]: false, \"type\": \"String\" }, j = { [y]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [B]: \"Endpoint\" }, l = { [z]: c, [A]: [{ [B]: \"UseFIPS\" }, true] }, m = { [z]: c, [A]: [{ [B]: \"UseDualStack\" }, true] }, n = {}, o = { [z]: \"getAttr\", [A]: [{ [B]: g }, \"supportsFIPS\"] }, p = { [z]: c, [A]: [true, { [z]: \"getAttr\", [A]: [{ [B]: g }, \"supportsDualStack\"] }] }, q = { [z]: \"getAttr\", [A]: [{ [B]: g }, \"name\"] }, r = { \"url\": \"https://secretsmanager-fips.{Region}.amazonaws.com\", [C]: {}, [D]: {} }, s = { \"url\": \"https://secretsmanager.{Region}.amazonaws.com\", [C]: {}, [D]: {} }, t = [l], u = [m], v = [{ [B]: \"Region\" }], w = [{ [z]: h, [A]: [\"aws\", q] }], x = [{ [z]: h, [A]: [\"aws-us-gov\", q] }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [z]: b, [A]: [k] }], rules: [{ conditions: t, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: u, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, [C]: n, [D]: n }, type: e }], type: f }, { conditions: [{ [z]: b, [A]: v }], rules: [{ conditions: [{ [z]: \"aws.partition\", [A]: v, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [z]: c, [A]: [a, o] }, p], rules: [{ conditions: w, endpoint: r, type: e }, { conditions: x, endpoint: r, type: e }, { endpoint: { url: \"https://secretsmanager-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: t, rules: [{ conditions: [{ [z]: c, [A]: [o, a] }], rules: [{ endpoint: { url: \"https://secretsmanager-fips.{Region}.{PartitionResult#dnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: u, rules: [{ conditions: [p], rules: [{ conditions: w, endpoint: s, type: e }, { conditions: [{ [z]: h, [A]: [\"aws-cn\", q] }], endpoint: { url: \"https://secretsmanager.{Region}.amazonaws.com.cn\", [C]: n, [D]: n }, type: e }, { conditions: x, endpoint: s, type: e }, { endpoint: { url: \"https://secretsmanager.{Region}.{PartitionResult#dualStackDnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://secretsmanager.{Region}.{PartitionResult#dnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nconst ruleSet = _data;\n\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n\nconst getRuntimeConfig$1 = (config) => {\n    return {\n        apiVersion: \"2017-10-17\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSecretsManagerHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Secrets Manager\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8$2,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n\nconst DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\n\nconst resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n\nconst getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getRuntimeConfig$1(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: FetchHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n\nconst getAwsRegionExtensionConfiguration = (runtimeConfig) => {\n    let runtimeConfigRegion = async () => {\n        if (runtimeConfig.region === undefined) {\n            throw new Error(\"Region is missing from runtimeConfig\");\n        }\n        const region = runtimeConfig.region;\n        if (typeof region === \"string\") {\n            return region;\n        }\n        return region();\n    };\n    return {\n        setRegion(region) {\n            runtimeConfigRegion = region;\n        },\n        region() {\n            return runtimeConfigRegion;\n        },\n    };\n};\nconst resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {\n    return {\n        region: awsRegionExtensionConfiguration.region(),\n    };\n};\n\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n\nclass SecretsManagerClient extends Client {\n    constructor(...[configuration]) {\n        const _config_0 = getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSecretsManagerHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n\nclass SecretsManagerServiceException extends ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SecretsManagerServiceException.prototype);\n    }\n}\n\nclass DecryptionFailure extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"DecryptionFailure\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DecryptionFailure\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DecryptionFailure.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InternalServiceError extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"InternalServiceError\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServiceError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServiceError.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidNextTokenException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidNextTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidNextTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidParameterException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidParameterException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidRequestException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceNotFoundException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass EncryptionFailure extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"EncryptionFailure\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"EncryptionFailure\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, EncryptionFailure.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass LimitExceededException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass MalformedPolicyDocumentException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass PreconditionNotMetException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"PreconditionNotMetException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PreconditionNotMetException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PreconditionNotMetException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceExistsException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass PublicPolicyException extends SecretsManagerServiceException {\n    constructor(opts) {\n        super({\n            name: \"PublicPolicyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PublicPolicyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PublicPolicyException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst GetSecretValueResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretBinary && { SecretBinary: SENSITIVE_STRING }),\n    ...(obj.SecretString && { SecretString: SENSITIVE_STRING }),\n});\n\nconst se_GetSecretValueCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetSecretValue\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst de_GetSecretValueCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GetSecretValueResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseJsonErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DecryptionFailure\":\n        case \"com.amazonaws.secretsmanager#DecryptionFailure\":\n            throw await de_DecryptionFailureRes(parsedOutput);\n        case \"InternalServiceError\":\n        case \"com.amazonaws.secretsmanager#InternalServiceError\":\n            throw await de_InternalServiceErrorRes(parsedOutput);\n        case \"InvalidNextTokenException\":\n        case \"com.amazonaws.secretsmanager#InvalidNextTokenException\":\n            throw await de_InvalidNextTokenExceptionRes(parsedOutput);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.secretsmanager#InvalidParameterException\":\n            throw await de_InvalidParameterExceptionRes(parsedOutput);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.secretsmanager#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.secretsmanager#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput);\n        case \"EncryptionFailure\":\n        case \"com.amazonaws.secretsmanager#EncryptionFailure\":\n            throw await de_EncryptionFailureRes(parsedOutput);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.secretsmanager#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.secretsmanager#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput);\n        case \"PreconditionNotMetException\":\n        case \"com.amazonaws.secretsmanager#PreconditionNotMetException\":\n            throw await de_PreconditionNotMetExceptionRes(parsedOutput);\n        case \"ResourceExistsException\":\n        case \"com.amazonaws.secretsmanager#ResourceExistsException\":\n            throw await de_ResourceExistsExceptionRes(parsedOutput);\n        case \"PublicPolicyException\":\n        case \"com.amazonaws.secretsmanager#PublicPolicyException\":\n            throw await de_PublicPolicyExceptionRes(parsedOutput);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_DecryptionFailureRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DecryptionFailure({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_EncryptionFailureRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new EncryptionFailure({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_InternalServiceErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalServiceError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_InvalidNextTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidNextTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_InvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_PreconditionNotMetExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new PreconditionNotMetException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_PublicPolicyExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new PublicPolicyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_ResourceExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return decorateServiceException(exception, body);\n};\nconst de_GetSecretValueResponse = (output, context) => {\n    return take(output, {\n        ARN: expectString,\n        CreatedDate: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),\n        Name: expectString,\n        SecretBinary: context.base64Decoder,\n        SecretString: expectString,\n        VersionId: expectString,\n        VersionStages: _json,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst throwDefaultError = withBaseException(SecretsManagerServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `secretsmanager.${operation}`,\n    };\n}\n\nclass GetSecretValueCommand extends Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"GetSecretValue\", {})\n    .n(\"SecretsManagerClient\", \"GetSecretValueCommand\")\n    .f(void 0, GetSecretValueResponseFilterSensitiveLog)\n    .ser(se_GetSecretValueCommand)\n    .de(de_GetSecretValueCommand)\n    .build() {\n}\n\nconst awsSecretsManagerClient = new SecretsManagerClient({\n    credentials: {\n        accessKeyId: process.env.AWS_ACCESS_KEY,\n        secretAccessKey: process.env.AWS_SECRET_KEY,\n    },\n    region: process.env.AWS_REGION,\n});\nconst useSecretManager = () => {\n    const [secret, setSecret] = useState(null);\n    const [error, setError] = useState(null);\n    const getSecretKeys = async () => {\n        try {\n            const response = await awsSecretsManagerClient.send(new GetSecretValueCommand({\n                SecretId: process.env.AWS_SECRET_MANAGER_KEY,\n                VersionStage: 'AWSCURRENT', // VersionStage defaults to AWSCURRENT if unspecified\n            }));\n            setSecret(response.SecretString);\n        }\n        catch (error) {\n            console.log(error);\n            setError(error);\n        }\n    };\n    useEffect(() => {\n        getSecretKeys();\n    }, []);\n    return { error, secret };\n};\n\nconst useSignOut = () => {\n    const userInfoData = StoreUtil.getData(USERINFO_KEY);\n    const apiUrl = userInfoData?.role === RoleName.CANDIDATE ? CANDIDATE_SIGN_OUT : EXTERNAL_PANELIST_LOGOUT;\n    const signoutApi = useMutation(async (payload) => CustomApiClient.getInstance().callApi(apiUrl, ApiType.POST, payload));\n    return { signoutApi };\n};\n\nconst useSignup = () => {\n    const getSignupData = useMutation(async (payload) => CustomApiClient.getInstance().callApi(CANDIDATE_SIGNUP_API_URL, ApiType.POST, payload));\n    return { getSignupData };\n};\n\nconst useSkills = () => {\n    const getSkillsInfoData = () => {\n        return useQuery([SKILLS_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(SKILLS_INFO_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getSkillsInfoData };\n};\n\nconst useSkillsDomain = () => {\n    const getSkillsInfoData = () => {\n        return useQuery([SKILLS_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(SKILLS_INFO_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    const getDomainsInfoData = () => {\n        return useQuery([DOMAINS_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(DOMAINS_INFO_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getDomainsInfoData, getSkillsInfoData };\n};\n\nconst useStageStatus = () => {\n    const getStaticStageStatus = () => {\n        return useQuery([STAGE_STATUS_API_KEY], async () => CustomApiClient.getInstance().callApi(STAGE_STATUS_API_URL, ApiType.GET), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getStaticStageStatus };\n};\n\nconst useTAAwaitingCandidate = () => {\n    const getTAAwaitingCandidates = () => {\n        return useQuery([AWAITING_CANDIDATES_KEY], async () => CustomApiClient.getInstance().callApi(TA_AWAITING_CANDIDATE_API_URL, ApiType.GET), {\n            enabled: true,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getTAAwaitingCandidates };\n};\n\nconst useUpcomingInterview = () => {\n    const getUpcomingInterviewData = (params) => {\n        return useQuery([UPCOMING_INTERVIEW_API_KEY], async () => CustomApiClient.getInstance().callApi(UPCOMING_INTERVIEW_API_URL, ApiType.GET, params), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getUpcomingInterviewData };\n};\n\nconst useUpcomingInterviewInfo = () => {\n    const getUpcomingInterviewData = (params) => {\n        return useQuery([DASHBOARD_UPCOMING_INTERVIEW_KEY], async () => CustomApiClient.getInstance().callApi(DASHBOARD_UPCOMING_INTERVIEW_URL, ApiType.GET, params), {\n            enabled,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getUpcomingInterviewData };\n};\n\nconst useUpdatePreference = () => {\n    const updatePreference = useMutation(async (payload) => CustomApiClient.getInstance().callApi(CANDIDATE_UPDATE_PREFERENCE, ApiType.PUT, payload));\n    return { updatePreference };\n};\n\nconst useUserInfo = () => {\n    const getUserInfoData = () => {\n        return useQuery([USER_INFO_API_KEY], async () => CustomApiClient.getInstance().callApi(USER_INFO_API_URL, ApiType.GET), {\n            enabled: false,\n            refetchOnWindowFocus: false,\n        });\n    };\n    return { getUserInfoData };\n};\n\nclass AcceptResponseModel {\n    message;\n    success;\n}\n\nclass ResponseModel {\n    data;\n    error;\n    message;\n    success;\n}\n\nclass AwaitingCandidate {\n    account;\n    altiScore;\n    candidateId;\n    currentOrganization;\n    designation;\n    email;\n    firstName;\n    imgUrl;\n    interviewEndTime;\n    interviewStageId;\n    interviewStartTime;\n    jobAppliedFor;\n    lastName;\n    matchingGrade;\n    matchingScore;\n    relevantExp;\n    skills;\n    slotPreference;\n    totalExp;\n}\nclass AwaitingCandidatesModel extends ResponseModel {\n}\n\nclass CalendarResponseModel extends ResponseModel {\n}\nclass CandidateCalendarResponseModel extends ResponseModel {\n}\nclass CalendarPostResponseModel extends ResponseModel {\n}\nclass CalendarData {\n    categories;\n    eventEndTime;\n    eventStartTime;\n    id;\n    subject;\n}\nclass CandidateCalendarData {\n    eventEndTime;\n    eventStartTime;\n    id;\n    preference;\n    slotId;\n    slotStatus;\n}\nclass CalendarPostPayloadModel {\n    'interviewSlots';\n}\nclass CandidatePostPayloadModel {\n    'candidateSlots';\n}\nclass ReschedulePostPayloadModel {\n    cancelSlotInfo;\n    interviewSlots;\n}\nclass DeleteSlotsPayloadModel {\n    endTime;\n    frequency;\n    preference;\n    slotId;\n    startTime;\n    subject;\n}\n\nclass StaticBgvDocsModel extends ResponseModel {\n}\nclass CandidateBgvDocsModel extends ResponseModel {\n}\nclass DeteleDocListItemModel extends ResponseModel {\n}\nclass CandidateBgvDocItem {\n    fileName;\n    files;\n    recordId;\n}\nclass CandidateBgvDocListItem {\n    bgvConsented;\n    documentsData;\n    isDataAvailable;\n}\nclass deteleDocListItem {\n    responseMessage;\n}\n\nclass CandidateFeedbackModel extends ResponseModel {\n}\nclass CandidateFeedbackItem {\n    feedbackInfoList;\n    totalPages;\n    totalRecords;\n}\nclass CandidateFeedbackItemInfo {\n    description;\n    firstName;\n    jobAppliedFor;\n    lastName;\n    rating;\n}\n\nclass InterviewStageFeedbackResponseModel extends ResponseModel {\n}\n\nclass CandidateLoginModel extends ResponseModel {\n}\nclass CandidateLoginPaylodModel {\n    emailId;\n    resend;\n}\n\nclass SearchPanelistModel extends ResponseModel {\n}\nclass ManageInterviewProcessModel extends ResponseModel {\n}\n\nclass CandidatePlayGroundProcessModel extends ResponseModel {\n}\nclass InterviewStage {\n    endTime;\n    interviewStageId;\n    stageCategory;\n    stageLevel;\n    stageName;\n    stageNameId;\n    stageStatus;\n    startTime;\n}\n\nclass CandidateRatingModel extends ResponseModel {\n}\n\nclass CandidateUpdatePreferenceModel extends ResponseModel {\n}\n\nclass CitiesModelApiResponse extends ResponseModel {\n    id;\n}\n\nclass CityApiResponseModel extends ResponseModel {\n    id;\n}\n\nclass CodingChallengeDetailModel {\n    data;\n    message;\n    success;\n}\nclass UseCaseDetailModel {\n    data;\n    message;\n    success;\n}\n\nclass CodingChallengeModel extends ResponseModel {\n}\n\nclass CustomTokenModel extends ResponseModel {\n}\n\nclass DeleteFileModel extends ResponseModel {\n}\n\nclass DexParserModel extends ResponseModel {\n}\nclass DexData {\n    education;\n    personal_info;\n    project_details;\n    skills;\n    work_experience;\n}\n\nclass DomainsInfoModelApiResponse extends ResponseModel {\n    id;\n}\n\nclass ELHiringJobInfoModel extends ResponseModel {\n}\nclass OpportunityDetails {\n    jobDescriptions;\n    opportunityId;\n}\nclass JobDescriptions {\n    actionsFlagCount;\n    clientRoundCandidatesCount;\n    clientSelectedCandidatesCount;\n    clientSelectionRatio;\n    daysToHire;\n    fulfillmentRatio;\n    hireBy;\n    jobDescriptionId;\n    joinedCount;\n    offerReleasedCount;\n    offerToJoinRatio;\n    requisitionIds;\n}\n\nclass ELJobCandidatesApiResponseModel extends ResponseModel {\n}\nclass ELJobCandidateModel {\n    candidateId;\n    candidateImageUrl;\n    candidateName;\n    currentStatus;\n    stage;\n    talentAcquisitionImageUrl;\n    talentAcquisitionName;\n}\n\nclass ELJobsKpiModel extends ResponseModel {\n}\nclass ELJobDescriptionKpiModel extends ResponseModel {\n}\nclass ELJobsKpiInfo {\n    jobOpportunityKPIDetailsMap;\n    tagNames;\n}\nclass KpiHiringDetails {\n    actionsFlagCount;\n    averageDaysToHire;\n    fulfilmentRatio;\n    joinedCount;\n    offerReleasedCount;\n    offerToJoinRatio;\n    panelistCount;\n    totalNumberOfFulfillment;\n    totalNumberOfOpening;\n}\nclass JdKpiDetails {\n    actionsFlagCount;\n    availableSlotCount;\n    fulfilmentRatio;\n    hiringTimeline;\n    joinedCount;\n    offerReleasedCount;\n    offerToJoinRatio;\n    panelistCount;\n    totalNumberOfFulfillment;\n    totalNumberOfOpening;\n}\n\nclass ElDashboardInfoModel extends ResponseModel {\n}\nclass StageDetails {\n    averageDaysToCompleteStage;\n    droppedCandidatesCount;\n    kind;\n    pendingCandidatesCount;\n    rejectedCandidatesCount;\n    rejectedCandidatesSourceInfo;\n    selectedCandidatesCount;\n    selectedCandidatesSourceInfo;\n    selectedCountSplitUp;\n    skippedCandidatesCount;\n    stageName;\n    stageShortName;\n    totalCandidatesCount;\n}\n\nclass ErrorModel {\n    message;\n}\n\nclass ExploreTestimonialModel {\n    data;\n    message;\n    success;\n}\n\nclass ExploreVideoModel {\n    data;\n    message;\n    success;\n}\n\nclass ExternalPanelistLoginModel extends ResponseModel {\n}\nclass ExternalPanelistPayload {\n    emailId;\n    resend;\n}\n\nclass ExternalPanelistOtpVerifyModel extends ResponseModel {\n}\nclass ExternalPanelistOtpVerifyData {\n    emailId;\n    jwtAccessToken;\n    jwtRefreshToken;\n    message;\n    onboarded;\n    panelistId;\n    role;\n    source;\n}\nclass ExternalPanelistOtpVerifyPayload {\n    emailId;\n    otpValue;\n    panelistId;\n}\n\nclass AllAccountApiResponse extends ResponseModel {\n}\nclass AccountDetails {\n    accountName;\n    id;\n}\nclass AllOfficeLocationApiResponse extends ResponseModel {\n}\nclass AllProjectLocationsApiResponse extends ResponseModel {\n}\nclass ProjectLocations {\n    id;\n    opportunityName;\n}\nclass JobSourceOptionsApiResponse extends ResponseModel {\n}\n\nclass GoogleTokenModel extends ResponseModel {\n}\n\nclass TriggerNextRoundPayload {\n    interviewStageId;\n}\nclass HackerRankModel extends ResponseModel {\n}\nclass IHackerRank {\n    attemptEndTime;\n    attemptStartTime;\n    hackerRankCandidateInfoId;\n    hackerRankStatus;\n    hackerRankTestName;\n    interviewStageId;\n    inviteValidFrom;\n    inviteValidTo;\n    percentageScore;\n    plagiarismStatus;\n    reportUrl;\n    score;\n    test_link;\n    testInviteLink;\n}\n\nclass HackerRankTestDetailModel extends ResponseModel {\n}\n\nclass IncentivesApiResponseModel extends ResponseModel {\n}\n\nclass InterviewSlotsModel extends ResponseModel {\n}\n\nclass InterviewSuccessRateModel extends ResponseModel {\n}\nclass SuccessRateData {\n    numberOfCandidatesAttendedHL;\n    numberOfCandidatesAttendedHR;\n    numberOfCandidatesAttendedTD;\n    numberOfCandidatesOL;\n    stageShortNameCountMap;\n    successRate;\n    totalNumberOfCandidatesInterviewed;\n    totalNumberOfCandidatesJoined;\n}\nclass InterviewRound {\n    CR;\n    EL;\n    HR;\n    HRANK;\n    JOINED;\n    Offer;\n    Screen;\n    TD1;\n    TD2;\n}\n\nclass JobApplyModel extends ResponseModel {\n}\nclass ApplyJobPayloadModel {\n    candidateId;\n    requisitionId;\n}\n\nclass JobDescriptionModel extends ResponseModel {\n}\n\nclass JobFilterResponseModel extends ResponseModel {\n}\nclass FilterKeysModel {\n    name;\n    value;\n}\nclass DepartmentsModel {\n    checked;\n    id;\n    title;\n}\nclass OfficeLocationsModel {\n    checked;\n    id;\n    locationId;\n    title;\n}\nclass WorkModesModel {\n    checked;\n    id;\n    title;\n}\nclass ExperienceModel {\n    checked;\n    filterType;\n    id;\n    rangeLabel;\n    rangeValueFrom;\n    rangeValueTo;\n    title;\n}\n\nclass JobStatusModel extends ResponseModel {\n}\n\nclass JobsListModel extends ResponseModel {\n}\n\nclass LoginTypeModel {\n    accessToken;\n    loginType;\n    refreshToken;\n}\n\nclass MeetingOptOutPayloadModel {\n    candidateEmailID;\n    candidateId;\n    endDateTime;\n    eventId;\n    interviewId;\n    reasonForOptOut;\n    startDateTime;\n}\nclass MeetingOptOutPostResponseModel extends ResponseModel {\n}\n\nclass MeetingCandidateResponseModel extends ResponseModel {\n}\n\nclass MyActionResponseModel {\n    data;\n    message;\n    success;\n}\n\nclass NewMeetingModel extends ResponseModel {\n}\n\nclass PanelistCardModel extends ResponseModel {\n}\nclass PanelistDetails {\n    feedbackQty;\n    noOfPanelists;\n    noOfPendingFeedbacks;\n    panelistInfos;\n    successRate;\n}\nclass PanelListInfo {\n    designation;\n    email;\n    firstName;\n    lastName;\n    mobileNumber;\n    photo;\n}\n\nclass PanelistListModel extends ResponseModel {\n}\nclass PanelistListItems {\n    designation;\n    email;\n    employeeId;\n    imageUrl;\n    panelistName;\n    phone;\n}\n\nclass PanelistsApiResponseModel extends ResponseModel {\n}\nclass ELAccountsApiResponse extends ResponseModel {\n}\nclass PanelistAlertPayload {\n    alertMessage;\n    panelistId;\n}\nclass PanelistAlertResponseModel extends ResponseModel {\n}\n\nclass PastInterviewsApiResponseModel extends ResponseModel {\n}\nclass InterviewStagesApiResponseModel extends ResponseModel {\n}\nclass InterviewStageStatusApiResponseModel extends ResponseModel {\n}\n\nclass PendingFeedbackData {\n    empId;\n    pendingFeedbacks;\n    totalRecords;\n}\nclass PendingFeedbackModel extends ResponseModel {\n}\n\nvar skillCategory;\n(function (skillCategory) {\n    skillCategory[\"FUNCTIONAL\"] = \"FUNCTIONAL\";\n    skillCategory[\"INTERPERSONAL_ASSESSMENT\"] = \"INTERPERSONAL_ASSESSMENT\";\n    skillCategory[\"TECHNICAL_SKILLS\"] = \"TECHNICAL_SKILLS\";\n})(skillCategory || (skillCategory = {}));\nclass PendingFeedbackSkillsResponseModel extends ResponseModel {\n}\nclass SkillItem {\n    feedbackId;\n    feedbackQNAVOList;\n    feedbackSummary;\n    isDuplicateContent;\n    mandatory;\n    skillCategory;\n    skillName;\n    skillSetId;\n    stageRating;\n}\nclass ISkillItemQNA {\n    answer;\n    id;\n    isAnswerDuplicated;\n    isQuestionDuplicated;\n    question;\n    tempId;\n}\nclass SaveFeedbackResponseModel extends ResponseModel {\n}\nclass SaveFeedbackPayloadModel {\n    attachments;\n    candidateRating;\n    comment;\n    feedbackQuality;\n    feedbackQualityScore;\n    feedbackSkills;\n    feedbackSubmitted;\n    feedbackSync;\n    interviewStageId;\n    panellistRecommendation;\n    rejectionReasons;\n    stageCategory;\n    stageName;\n    stageStatus;\n}\nclass AddSkillPayloadModel {\n    interviewStageId;\n    skillCategory;\n    skillId;\n    skillName;\n}\nclass AddSkillResponseModel extends ResponseModel {\n}\nclass DeleteSkillPayloadModel {\n    feedbackId;\n    interviewStageId;\n    mandatory;\n    skillSetId;\n}\nclass DeleteSkillResponseModel extends ResponseModel {\n}\nclass DeleteFilePayload {\n    interviewStageId;\n    objectKey;\n}\nclass DeleteFileResponseModel extends ResponseModel {\n}\nclass UpdateCodingFeedbackPayloadModel {\n    fileUploadTimeStamp;\n    interviewStageId;\n    panellistDesignation;\n    panellistEmail;\n    panellistEmpId;\n    panellistFirstName;\n    panellistLastName;\n    panellistRecommendation;\n    profilePictureUrl;\n    projectFileUploadUrl;\n    stageCategory;\n    stageName;\n    stageStatus;\n}\nclass CandidateRejectModelResponse extends ResponseModel {\n}\nclass CandidateRejectInfoModel {\n    id;\n    reason;\n}\n\nclass PreviewApiResponseModel extends ResponseModel {\n}\n\nclass PrimaryChallengeModel extends ResponseModel {\n}\nclass Challenge {\n    active;\n    duration;\n    id;\n    name;\n}\n\nclass ProfilePopoverModel extends ResponseModel {\n}\nclass ProfileType {\n    email;\n    firstName;\n    lastName;\n    mobileNumber;\n    photo;\n    resumeUrl;\n}\n\nclass ProjectCardModel extends ResponseModel {\n}\n\nclass RecommendationModel extends ResponseModel {\n}\n\nclass RecruiterResponseModel extends ResponseModel {\n}\nclass RecruiterType {\n    employeeId;\n    firstName;\n    id;\n    lastName;\n    officialEmailId;\n    phoneNumber;\n    photoUrl;\n}\n\nclass CandidateInterviewScheduledModel extends ResponseModel {\n}\n\nclass ScreeningResponseModel extends ResponseModel {\n}\nclass ScreeningData {\n}\n\nclass SignOutModel extends ResponseModel {\n}\n\nclass SignupModel extends ResponseModel {\n}\nclass CandidateSignupPaylodModel {\n    emailId;\n    resend;\n}\n\nclass SkillsInfoApiResponseModel extends ResponseModel {\n    id;\n}\n\nclass SkillsInfoModelApiResponse extends ResponseModel {\n    id;\n}\n\nclass SkillsModelResponse extends ResponseModel {\n}\nclass SkillsInfoModel {\n    id;\n    skillName;\n}\nclass StageStatusModelResponse extends ResponseModel {\n}\nclass StageStatusInfoModel {\n    id;\n    interviewStageStatus;\n}\n\nclass StateApiResponseModel extends ResponseModel {\n}\n\nclass SurveyResponseModel extends ResponseModel {\n}\nclass SurveyQuestionResponseModel extends ResponseModel {\n}\n\nclass TAAwaitingCandidateModel extends ResponseModel {\n}\nclass TAAwaitingItems {\n    accountName;\n    candidateId;\n    candidateProfileurl;\n    currentOrganization;\n    currentStageName;\n    currentStageStatus;\n    designation;\n    emailId;\n    eventTitle;\n    firstName;\n    interviewStageId;\n    jobId;\n    jobTitle;\n    lastName;\n    lastUpdateDate;\n}\n\nclass TAJobListModel extends ResponseModel {\n}\n\nclass UpcomingInterviewModel extends ResponseModel {\n}\n\nclass UpcomingInterviewsModel extends ResponseModel {\n}\nclass UpcomingInterviewInfo {\n    totalInterviewCount;\n    upcomingInterviews;\n}\nclass UpcomingInterviewsData {\n    candidateDetails;\n    interviewCount = 0;\n    interviewDate = 0;\n}\nclass CandidateDetails {\n    altiScore;\n    candidateId;\n    currentOrganization;\n    designation;\n    firstName;\n    imgUrl;\n    interviewEndTime;\n    interviewStartTime;\n    jobAppliedFor;\n    lastName;\n    onlineMeetingUrl;\n}\n\nclass UpdatePreferenceResponseModel extends ResponseModel {\n}\nclass PreferenceResponse {\n}\n\nclass UploadModel extends ResponseModel {\n}\n\nclass UserInfoModel {\n    candidateId;\n    dateOfJoining;\n    displayName;\n    emailId;\n    employeeId;\n    employeeType;\n    firstName;\n    givenName;\n    id;\n    isLoggedIn;\n    isV1;\n    jobTitle;\n    jwtAccessToken;\n    jwtRefreshToken;\n    lastName;\n    mail;\n    message;\n    mobilePhone;\n    officeLocation;\n    onboarded;\n    photoUrl;\n    resumeKey;\n    role;\n    roleId;\n    roles;\n    source;\n    surname;\n    userPrincipalName;\n}\n\nclass UserInfoModelApiResponse extends ResponseModel {\n}\n\nclass UserModel {\n    email;\n    id;\n    name;\n}\n\nclass OtpVerifyResponseModel extends ResponseModel {\n}\nclass OtpVerifyPayload {\n    candidateId;\n    emailId;\n    loginType;\n    otpValue;\n}\nclass OTPVerifyUserInfo {\n    candidateId;\n    emailId;\n    jwtAccessToken;\n    jwtRefreshToken;\n    message;\n    onboarded;\n    role;\n    source;\n}\n\nconst initialState = {\n    isLoggedIn: () => false,\n    isOnboarded: () => false,\n    setUserInfo: (userInfo) => { },\n    signIn: () => { },\n    signOut: () => { },\n    userInfo: {\n        email: '',\n        firstName: '',\n        lastName: '',\n        location: '',\n        mobileNumber: '',\n        role: '',\n    },\n};\nconst AuthContext = createContext(initialState);\nfunction AuthProvider({ children }) {\n    const { instance } = useMsal();\n    const isAuthenticated = useIsAuthenticated();\n    const [userInfo, setUserInfo] = useState({\n        email: '',\n        firstName: '',\n        lastName: '',\n        location: '',\n        mobileNumber: '',\n        role: '',\n    });\n    const signIn = useCallback(async (type) => {\n        if (type === AuthType.SSO) {\n            if (!isAuthenticated) {\n                const accounts = instance.getAllAccounts();\n                if (accounts.length === 0) {\n                    instance.loginRedirect(loginRequest);\n                }\n            }\n        }\n    }, []);\n    const signOut = useCallback(async (type) => {\n        if (type === AuthType.SSO) {\n            StoreUtil.clearStorage();\n            await instance.logoutRedirect();\n        }\n    }, []);\n    const isLoggedIn = () => {\n        const data = StoreUtil.getData(USERINFO_KEY);\n        if (data) {\n            return Boolean(data.isLoggedIn);\n        }\n        return false;\n    };\n    const isOnboarded = () => {\n        const data = StoreUtil.getData(USERINFO_KEY);\n        if (data) {\n            return Boolean(data.onboarded);\n        }\n        return false;\n    };\n    const value = useMemo(() => ({\n        isLoggedIn,\n        isOnboarded,\n        setUserInfo,\n        signIn,\n        signOut,\n        userInfo,\n    }), []);\n    return jsx(AuthContext.Provider, { value: value, children: children });\n}\nconst useAuth = () => useContext(AuthContext);\n\nfunction useLoadGsiScript(options = {}) {\r\n    const { nonce, onScriptLoadSuccess, onScriptLoadError } = options;\r\n    const [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = useState(false);\r\n    const onScriptLoadSuccessRef = useRef(onScriptLoadSuccess);\r\n    onScriptLoadSuccessRef.current = onScriptLoadSuccess;\r\n    const onScriptLoadErrorRef = useRef(onScriptLoadError);\r\n    onScriptLoadErrorRef.current = onScriptLoadError;\r\n    useEffect(() => {\r\n        const scriptTag = document.createElement('script');\r\n        scriptTag.src = 'https://accounts.google.com/gsi/client';\r\n        scriptTag.async = true;\r\n        scriptTag.defer = true;\r\n        scriptTag.nonce = nonce;\r\n        scriptTag.onload = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(true);\r\n            (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadSuccessRef);\r\n        };\r\n        scriptTag.onerror = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(false);\r\n            (_a = onScriptLoadErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadErrorRef);\r\n        };\r\n        document.body.appendChild(scriptTag);\r\n        return () => {\r\n            document.body.removeChild(scriptTag);\r\n        };\r\n    }, [nonce]);\r\n    return scriptLoadedSuccessfully;\r\n}\n\nconst GoogleOAuthContext = createContext(null);\r\nfunction GoogleOAuthProvider({ clientId, nonce, onScriptLoadSuccess, onScriptLoadError, children, }) {\r\n    const scriptLoadedSuccessfully = useLoadGsiScript({\r\n        nonce,\r\n        onScriptLoadSuccess,\r\n        onScriptLoadError,\r\n    });\r\n    const contextValue = useMemo(() => ({\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n    }), [clientId, scriptLoadedSuccessfully]);\r\n    return (React__default.createElement(GoogleOAuthContext.Provider, { value: contextValue }, children));\r\n}\r\nfunction useGoogleOAuth() {\r\n    const context = useContext(GoogleOAuthContext);\r\n    if (!context) {\r\n        throw new Error('Google OAuth components must be used within GoogleOAuthProvider');\r\n    }\r\n    return context;\r\n}\n\nfunction extractClientId(credentialResponse) {\r\n    var _a;\r\n    const clientId = (_a = credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.clientId) !== null && _a !== void 0 ? _a : credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.client_id;\r\n    return clientId;\r\n}\n\nconst containerHeightMap = { large: 40, medium: 32, small: 20 };\r\nfunction GoogleLogin({ onSuccess, onError, useOneTap, promptMomentNotification, type = 'standard', theme = 'outline', size = 'large', text, shape, logo_alignment, width, locale, click_listener, containerProps, ...props }) {\r\n    const btnContainerRef = useRef(null);\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                const { credential, select_by } = credentialResponse;\r\n                onSuccessRef.current({\r\n                    credential,\r\n                    clientId: extractClientId(credentialResponse),\r\n                    select_by,\r\n                });\r\n            },\r\n            ...props,\r\n        });\r\n        (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.renderButton(btnContainerRef.current, {\r\n            type,\r\n            theme,\r\n            size,\r\n            text,\r\n            shape,\r\n            logo_alignment,\r\n            width,\r\n            locale,\r\n            click_listener,\r\n        });\r\n        if (useOneTap)\r\n            (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a, _b, _c;\r\n            if (useOneTap)\r\n                (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        useOneTap,\r\n        type,\r\n        theme,\r\n        size,\r\n        text,\r\n        shape,\r\n        logo_alignment,\r\n        width,\r\n        locale,\r\n    ]);\r\n    return (React__default.createElement(\"div\", { ...containerProps, ref: btnContainerRef, style: { height: containerHeightMap[size], ...containerProps === null || containerProps === void 0 ? void 0 : containerProps.style } }));\r\n}\n\nfunction googleLogout() {\r\n    var _a, _b, _c;\r\n    (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.disableAutoSelect();\r\n}\n\n/* eslint-disable import/export */\r\nfunction useGoogleLogin({ flow = 'implicit', scope = '', onSuccess, onError, onNonOAuthError, overrideScope, state, ...props }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const clientRef = useRef();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const onNonOAuthErrorRef = useRef(onNonOAuthError);\r\n    onNonOAuthErrorRef.current = onNonOAuthError;\r\n    useEffect(() => {\r\n        var _a, _b;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        const clientMethod = flow === 'implicit' ? 'initTokenClient' : 'initCodeClient';\r\n        const client = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2[clientMethod]({\r\n            client_id: clientId,\r\n            scope: overrideScope ? scope : `openid profile email ${scope}`,\r\n            callback: (response) => {\r\n                var _a, _b;\r\n                if (response.error)\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef, response);\r\n                (_b = onSuccessRef.current) === null || _b === void 0 ? void 0 : _b.call(onSuccessRef, response);\r\n            },\r\n            error_callback: (nonOAuthError) => {\r\n                var _a;\r\n                (_a = onNonOAuthErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onNonOAuthErrorRef, nonOAuthError);\r\n            },\r\n            state,\r\n            ...props,\r\n        });\r\n        clientRef.current = client;\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [clientId, scriptLoadedSuccessfully, flow, scope, state]);\r\n    const loginImplicitFlow = useCallback((overrideConfig) => { var _a; return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestAccessToken(overrideConfig); }, []);\r\n    const loginAuthCodeFlow = useCallback(() => { var _a; return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestCode(); }, []);\r\n    return flow === 'implicit' ? loginImplicitFlow : loginAuthCodeFlow;\r\n}\n\nfunction useGoogleOneTapLogin({ onSuccess, onError, promptMomentNotification, cancel_on_tap_outside, prompt_parent_id, state_cookie_domain, hosted_domain, use_fedcm_for_prompt = false, disabled, auto_select, }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        if (disabled) {\r\n            (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n            return;\r\n        }\r\n        (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                const { credential, select_by } = credentialResponse;\r\n                onSuccessRef.current({\r\n                    credential,\r\n                    clientId: extractClientId(credentialResponse),\r\n                    select_by,\r\n                });\r\n            },\r\n            hosted_domain,\r\n            cancel_on_tap_outside,\r\n            prompt_parent_id,\r\n            state_cookie_domain,\r\n            use_fedcm_for_prompt,\r\n            auto_select,\r\n        });\r\n        (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a, _b, _c;\r\n            (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n        };\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        cancel_on_tap_outside,\r\n        prompt_parent_id,\r\n        state_cookie_domain,\r\n        hosted_domain,\r\n        use_fedcm_for_prompt,\r\n        disabled,\r\n        auto_select,\r\n    ]);\r\n}\n\n/**\r\n * Checks if the user granted all the specified scope or scopes\r\n * @returns True if all the scopes are granted\r\n */\r\nfunction hasGrantedAllScopesGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    var _a, _b, _c;\r\n    if (!(window === null || window === void 0 ? void 0 : window.google))\r\n        return false;\r\n    return (((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAllScopes(tokenResponse, firstScope, ...restScopes)) || false);\r\n}\n\n/**\r\n * Checks if the user granted any of the specified scope or scopes.\r\n * @returns True if any of the scopes are granted\r\n */\r\nfunction hasGrantedAnyScopeGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    var _a, _b, _c;\r\n    if (!(window === null || window === void 0 ? void 0 : window.google))\r\n        return false;\r\n    return (((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAnyScope(tokenResponse, firstScope, ...restScopes)) || false);\r\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n   * match-sorter-utils\n   *\n   * Copyright (c) TanStack\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE.md file in the root directory of this source tree.\n   *\n   * @license MIT\n   */\nconst characterMap = {\n  À: 'A',\n  Á: 'A',\n  Â: 'A',\n  Ã: 'A',\n  Ä: 'A',\n  Å: 'A',\n  Ấ: 'A',\n  Ắ: 'A',\n  Ẳ: 'A',\n  Ẵ: 'A',\n  Ặ: 'A',\n  Æ: 'AE',\n  Ầ: 'A',\n  Ằ: 'A',\n  Ȃ: 'A',\n  Ç: 'C',\n  Ḉ: 'C',\n  È: 'E',\n  É: 'E',\n  Ê: 'E',\n  Ë: 'E',\n  Ế: 'E',\n  Ḗ: 'E',\n  Ề: 'E',\n  Ḕ: 'E',\n  Ḝ: 'E',\n  Ȇ: 'E',\n  Ì: 'I',\n  Í: 'I',\n  Î: 'I',\n  Ï: 'I',\n  Ḯ: 'I',\n  Ȋ: 'I',\n  Ð: 'D',\n  Ñ: 'N',\n  Ò: 'O',\n  Ó: 'O',\n  Ô: 'O',\n  Õ: 'O',\n  Ö: 'O',\n  Ø: 'O',\n  Ố: 'O',\n  Ṍ: 'O',\n  Ṓ: 'O',\n  Ȏ: 'O',\n  Ù: 'U',\n  Ú: 'U',\n  Û: 'U',\n  Ü: 'U',\n  Ý: 'Y',\n  à: 'a',\n  á: 'a',\n  â: 'a',\n  ã: 'a',\n  ä: 'a',\n  å: 'a',\n  ấ: 'a',\n  ắ: 'a',\n  ẳ: 'a',\n  ẵ: 'a',\n  ặ: 'a',\n  æ: 'ae',\n  ầ: 'a',\n  ằ: 'a',\n  ȃ: 'a',\n  ç: 'c',\n  ḉ: 'c',\n  è: 'e',\n  é: 'e',\n  ê: 'e',\n  ë: 'e',\n  ế: 'e',\n  ḗ: 'e',\n  ề: 'e',\n  ḕ: 'e',\n  ḝ: 'e',\n  ȇ: 'e',\n  ì: 'i',\n  í: 'i',\n  î: 'i',\n  ï: 'i',\n  ḯ: 'i',\n  ȋ: 'i',\n  ð: 'd',\n  ñ: 'n',\n  ò: 'o',\n  ó: 'o',\n  ô: 'o',\n  õ: 'o',\n  ö: 'o',\n  ø: 'o',\n  ố: 'o',\n  ṍ: 'o',\n  ṓ: 'o',\n  ȏ: 'o',\n  ù: 'u',\n  ú: 'u',\n  û: 'u',\n  ü: 'u',\n  ý: 'y',\n  ÿ: 'y',\n  Ā: 'A',\n  ā: 'a',\n  Ă: 'A',\n  ă: 'a',\n  Ą: 'A',\n  ą: 'a',\n  Ć: 'C',\n  ć: 'c',\n  Ĉ: 'C',\n  ĉ: 'c',\n  Ċ: 'C',\n  ċ: 'c',\n  Č: 'C',\n  č: 'c',\n  C̆: 'C',\n  c̆: 'c',\n  Ď: 'D',\n  ď: 'd',\n  Đ: 'D',\n  đ: 'd',\n  Ē: 'E',\n  ē: 'e',\n  Ĕ: 'E',\n  ĕ: 'e',\n  Ė: 'E',\n  ė: 'e',\n  Ę: 'E',\n  ę: 'e',\n  Ě: 'E',\n  ě: 'e',\n  Ĝ: 'G',\n  Ǵ: 'G',\n  ĝ: 'g',\n  ǵ: 'g',\n  Ğ: 'G',\n  ğ: 'g',\n  Ġ: 'G',\n  ġ: 'g',\n  Ģ: 'G',\n  ģ: 'g',\n  Ĥ: 'H',\n  ĥ: 'h',\n  Ħ: 'H',\n  ħ: 'h',\n  Ḫ: 'H',\n  ḫ: 'h',\n  Ĩ: 'I',\n  ĩ: 'i',\n  Ī: 'I',\n  ī: 'i',\n  Ĭ: 'I',\n  ĭ: 'i',\n  Į: 'I',\n  į: 'i',\n  İ: 'I',\n  ı: 'i',\n  Ĳ: 'IJ',\n  ĳ: 'ij',\n  Ĵ: 'J',\n  ĵ: 'j',\n  Ķ: 'K',\n  ķ: 'k',\n  Ḱ: 'K',\n  ḱ: 'k',\n  K̆: 'K',\n  k̆: 'k',\n  Ĺ: 'L',\n  ĺ: 'l',\n  Ļ: 'L',\n  ļ: 'l',\n  Ľ: 'L',\n  ľ: 'l',\n  Ŀ: 'L',\n  ŀ: 'l',\n  Ł: 'l',\n  ł: 'l',\n  Ḿ: 'M',\n  ḿ: 'm',\n  M̆: 'M',\n  m̆: 'm',\n  Ń: 'N',\n  ń: 'n',\n  Ņ: 'N',\n  ņ: 'n',\n  Ň: 'N',\n  ň: 'n',\n  ŉ: 'n',\n  N̆: 'N',\n  n̆: 'n',\n  Ō: 'O',\n  ō: 'o',\n  Ŏ: 'O',\n  ŏ: 'o',\n  Ő: 'O',\n  ő: 'o',\n  Œ: 'OE',\n  œ: 'oe',\n  P̆: 'P',\n  p̆: 'p',\n  Ŕ: 'R',\n  ŕ: 'r',\n  Ŗ: 'R',\n  ŗ: 'r',\n  Ř: 'R',\n  ř: 'r',\n  R̆: 'R',\n  r̆: 'r',\n  Ȓ: 'R',\n  ȓ: 'r',\n  Ś: 'S',\n  ś: 's',\n  Ŝ: 'S',\n  ŝ: 's',\n  Ş: 'S',\n  Ș: 'S',\n  ș: 's',\n  ş: 's',\n  Š: 'S',\n  š: 's',\n  Ţ: 'T',\n  ţ: 't',\n  ț: 't',\n  Ț: 'T',\n  Ť: 'T',\n  ť: 't',\n  Ŧ: 'T',\n  ŧ: 't',\n  T̆: 'T',\n  t̆: 't',\n  Ũ: 'U',\n  ũ: 'u',\n  Ū: 'U',\n  ū: 'u',\n  Ŭ: 'U',\n  ŭ: 'u',\n  Ů: 'U',\n  ů: 'u',\n  Ű: 'U',\n  ű: 'u',\n  Ų: 'U',\n  ų: 'u',\n  Ȗ: 'U',\n  ȗ: 'u',\n  V̆: 'V',\n  v̆: 'v',\n  Ŵ: 'W',\n  ŵ: 'w',\n  Ẃ: 'W',\n  ẃ: 'w',\n  X̆: 'X',\n  x̆: 'x',\n  Ŷ: 'Y',\n  ŷ: 'y',\n  Ÿ: 'Y',\n  Y̆: 'Y',\n  y̆: 'y',\n  Ź: 'Z',\n  ź: 'z',\n  Ż: 'Z',\n  ż: 'z',\n  Ž: 'Z',\n  ž: 'z',\n  ſ: 's',\n  ƒ: 'f',\n  Ơ: 'O',\n  ơ: 'o',\n  Ư: 'U',\n  ư: 'u',\n  Ǎ: 'A',\n  ǎ: 'a',\n  Ǐ: 'I',\n  ǐ: 'i',\n  Ǒ: 'O',\n  ǒ: 'o',\n  Ǔ: 'U',\n  ǔ: 'u',\n  Ǖ: 'U',\n  ǖ: 'u',\n  Ǘ: 'U',\n  ǘ: 'u',\n  Ǚ: 'U',\n  ǚ: 'u',\n  Ǜ: 'U',\n  ǜ: 'u',\n  Ứ: 'U',\n  ứ: 'u',\n  Ṹ: 'U',\n  ṹ: 'u',\n  Ǻ: 'A',\n  ǻ: 'a',\n  Ǽ: 'AE',\n  ǽ: 'ae',\n  Ǿ: 'O',\n  ǿ: 'o',\n  Þ: 'TH',\n  þ: 'th',\n  Ṕ: 'P',\n  ṕ: 'p',\n  Ṥ: 'S',\n  ṥ: 's',\n  X́: 'X',\n  x́: 'x',\n  Ѓ: 'Г',\n  ѓ: 'г',\n  Ќ: 'К',\n  ќ: 'к',\n  A̋: 'A',\n  a̋: 'a',\n  E̋: 'E',\n  e̋: 'e',\n  I̋: 'I',\n  i̋: 'i',\n  Ǹ: 'N',\n  ǹ: 'n',\n  Ồ: 'O',\n  ồ: 'o',\n  Ṑ: 'O',\n  ṑ: 'o',\n  Ừ: 'U',\n  ừ: 'u',\n  Ẁ: 'W',\n  ẁ: 'w',\n  Ỳ: 'Y',\n  ỳ: 'y',\n  Ȁ: 'A',\n  ȁ: 'a',\n  Ȅ: 'E',\n  ȅ: 'e',\n  Ȉ: 'I',\n  ȉ: 'i',\n  Ȍ: 'O',\n  ȍ: 'o',\n  Ȑ: 'R',\n  ȑ: 'r',\n  Ȕ: 'U',\n  ȕ: 'u',\n  B̌: 'B',\n  b̌: 'b',\n  Č̣: 'C',\n  č̣: 'c',\n  Ê̌: 'E',\n  ê̌: 'e',\n  F̌: 'F',\n  f̌: 'f',\n  Ǧ: 'G',\n  ǧ: 'g',\n  Ȟ: 'H',\n  ȟ: 'h',\n  J̌: 'J',\n  ǰ: 'j',\n  Ǩ: 'K',\n  ǩ: 'k',\n  M̌: 'M',\n  m̌: 'm',\n  P̌: 'P',\n  p̌: 'p',\n  Q̌: 'Q',\n  q̌: 'q',\n  Ř̩: 'R',\n  ř̩: 'r',\n  Ṧ: 'S',\n  ṧ: 's',\n  V̌: 'V',\n  v̌: 'v',\n  W̌: 'W',\n  w̌: 'w',\n  X̌: 'X',\n  x̌: 'x',\n  Y̌: 'Y',\n  y̌: 'y',\n  A̧: 'A',\n  a̧: 'a',\n  B̧: 'B',\n  b̧: 'b',\n  Ḑ: 'D',\n  ḑ: 'd',\n  Ȩ: 'E',\n  ȩ: 'e',\n  Ɛ̧: 'E',\n  ɛ̧: 'e',\n  Ḩ: 'H',\n  ḩ: 'h',\n  I̧: 'I',\n  i̧: 'i',\n  Ɨ̧: 'I',\n  ɨ̧: 'i',\n  M̧: 'M',\n  m̧: 'm',\n  O̧: 'O',\n  o̧: 'o',\n  Q̧: 'Q',\n  q̧: 'q',\n  U̧: 'U',\n  u̧: 'u',\n  X̧: 'X',\n  x̧: 'x',\n  Z̧: 'Z',\n  z̧: 'z'\n};\nconst chars = Object.keys(characterMap).join('|');\nconst allAccents = new RegExp(chars, 'g');\nfunction removeAccents(str) {\n  return str.replace(allAccents, match => {\n    return characterMap[match];\n  });\n}\n\n/**\n * @name match-sorter\n * @license MIT license.\n * @copyright (c) 2099 Kent C. Dodds\n * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)\n */\n\nconst rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, accessorIndex: Number, accessorThreshold: Number}} - the highest ranking\n */\nfunction rankItem(item, value, options) {\n  var _options$threshold;\n  options = options || {};\n  options.threshold = (_options$threshold = options.threshold) != null ? _options$threshold : rankings.MATCHES;\n  if (!options.accessors) {\n    // if keys is not specified, then we assume the item given is ready to be matched\n    const rank = getMatchRanking(item, value, options);\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedValue: item,\n      rank,\n      accessorIndex: -1,\n      accessorThreshold: options.threshold,\n      passed: rank >= options.threshold\n    };\n  }\n  const valuesToRank = getAllValuesToRank(item, options.accessors);\n  const rankingInfo = {\n    rankedValue: item,\n    rank: rankings.NO_MATCH,\n    accessorIndex: -1,\n    accessorThreshold: options.threshold,\n    passed: false\n  };\n  for (let i = 0; i < valuesToRank.length; i++) {\n    const rankValue = valuesToRank[i];\n    let newRank = getMatchRanking(rankValue.itemValue, value, options);\n    const {\n      minRanking,\n      maxRanking,\n      threshold = options.threshold\n    } = rankValue.attributes;\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n    newRank = Math.min(newRank, maxRanking);\n    if (newRank >= threshold && newRank > rankingInfo.rank) {\n      rankingInfo.rank = newRank;\n      rankingInfo.passed = true;\n      rankingInfo.accessorIndex = i;\n      rankingInfo.accessorThreshold = threshold;\n      rankingInfo.rankedValue = rankValue.itemValue;\n    }\n  }\n  return rankingInfo;\n}\n\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\nfunction getMatchRanking(testString, stringToRank, options) {\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options);\n\n  // too long\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  }\n\n  // case sensitive equals\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  // Lower casing before further comparison\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase();\n\n  // case insensitive equals\n  if (testString === stringToRank) {\n    return rankings.EQUAL;\n  }\n\n  // starts with\n  if (testString.startsWith(stringToRank)) {\n    return rankings.STARTS_WITH;\n  }\n\n  // word starts with\n  if (testString.includes(` ${stringToRank}`)) {\n    return rankings.WORD_STARTS_WITH;\n  }\n\n  // contains\n  if (testString.includes(stringToRank)) {\n    return rankings.CONTAINS;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  }\n\n  // acronym\n  if (getAcronym(testString).includes(stringToRank)) {\n    return rankings.ACRONYM;\n  }\n\n  // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n  return getClosenessRanking(testString, stringToRank);\n}\n\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\nfunction getAcronym(string) {\n  let acronym = '';\n  const wordsInString = string.split(' ');\n  wordsInString.forEach(wordInString => {\n    const splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(splitByHyphenWord => {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\nfunction getClosenessRanking(testString, stringToRank) {\n  let matchingInOrderCharCount = 0;\n  let charNumber = 0;\n  function findMatchingCharacter(matchChar, string, index) {\n    for (let j = index, J = string.length; j < J; j++) {\n      const stringChar = string[j];\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n    return -1;\n  }\n  function getRanking(spread) {\n    const spreadPercentage = 1 / spread;\n    const inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    const ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n    return ranking;\n  }\n  const firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n  charNumber = firstIndex;\n  for (let i = 1, I = stringToRank.length; i < I; i++) {\n    const matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    const found = charNumber > -1;\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n  const spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\nfunction prepareValueForComparison(value, _ref) {\n  let {\n    keepDiacritics\n  } = _ref;\n  // value might not actually be a string at this point (we don't get to choose)\n  // so part of preparing the value for comparison is ensure that it is a string\n  value = `${value}`; // toString\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n  return value;\n}\n\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\nfunction getItemValues(item, accessor) {\n  let accessorFn = accessor;\n  if (typeof accessor === 'object') {\n    accessorFn = accessor.accessor;\n  }\n  const value = accessorFn(item);\n\n  // because `value` can also be undefined\n  if (value == null) {\n    return [];\n  }\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [String(value)];\n}\n\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param item - the item from which the values will be retrieved\n * @param keys - the keys to use to retrieve the values\n * @return objects with {itemValue, attributes}\n */\nfunction getAllValuesToRank(item, accessors) {\n  const allValues = [];\n  for (let j = 0, J = accessors.length; j < J; j++) {\n    const accessor = accessors[j];\n    const attributes = getAccessorAttributes(accessor);\n    const itemValues = getItemValues(item, accessor);\n    for (let i = 0, I = itemValues.length; i < I; i++) {\n      allValues.push({\n        itemValue: itemValues[i],\n        attributes\n      });\n    }\n  }\n  return allValues;\n}\nconst defaultKeyAttributes = {\n  maxRanking: Infinity,\n  minRanking: -Infinity\n};\n/**\n * Gets all the attributes for the given accessor\n * @param accessor - the accessor from which the attributes will be retrieved\n * @return object containing the accessor's attributes\n */\nfunction getAccessorAttributes(accessor) {\n  if (typeof accessor === 'function') {\n    return defaultKeyAttributes;\n  }\n  return {\n    ...defaultKeyAttributes,\n    ...accessor\n  };\n}\n\nconst getItem = key => {\n  try {\n    const itemValue = localStorage.getItem(key);\n\n    if (typeof itemValue === 'string') {\n      return JSON.parse(itemValue);\n    }\n\n    return undefined;\n  } catch {\n    return undefined;\n  }\n};\n\nfunction useLocalStorage(key, defaultValue) {\n  const [value, setValue] = React.useState();\n  React.useEffect(() => {\n    const initialValue = getItem(key);\n\n    if (typeof initialValue === 'undefined' || initialValue === null) {\n      setValue(typeof defaultValue === 'function' ? defaultValue() : defaultValue);\n    } else {\n      setValue(initialValue);\n    }\n  }, [defaultValue, key]);\n  const setter = React.useCallback(updater => {\n    setValue(old => {\n      let newVal = updater;\n\n      if (typeof updater == 'function') {\n        newVal = updater(old);\n      }\n\n      try {\n        localStorage.setItem(key, JSON.stringify(newVal));\n      } catch {}\n\n      return newVal;\n    });\n  }, [key]);\n  return [value, setter];\n}\n\nvar DoubleIndexedKV = /** @class */ (function () {\n    function DoubleIndexedKV() {\n        this.keyToValue = new Map();\n        this.valueToKey = new Map();\n    }\n    DoubleIndexedKV.prototype.set = function (key, value) {\n        this.keyToValue.set(key, value);\n        this.valueToKey.set(value, key);\n    };\n    DoubleIndexedKV.prototype.getByKey = function (key) {\n        return this.keyToValue.get(key);\n    };\n    DoubleIndexedKV.prototype.getByValue = function (value) {\n        return this.valueToKey.get(value);\n    };\n    DoubleIndexedKV.prototype.clear = function () {\n        this.keyToValue.clear();\n        this.valueToKey.clear();\n    };\n    return DoubleIndexedKV;\n}());\n\nvar Registry = /** @class */ (function () {\n    function Registry(generateIdentifier) {\n        this.generateIdentifier = generateIdentifier;\n        this.kv = new DoubleIndexedKV();\n    }\n    Registry.prototype.register = function (value, identifier) {\n        if (this.kv.getByValue(value)) {\n            return;\n        }\n        if (!identifier) {\n            identifier = this.generateIdentifier(value);\n        }\n        this.kv.set(identifier, value);\n    };\n    Registry.prototype.clear = function () {\n        this.kv.clear();\n    };\n    Registry.prototype.getIdentifier = function (value) {\n        return this.kv.getByValue(value);\n    };\n    Registry.prototype.getValue = function (identifier) {\n        return this.kv.getByKey(identifier);\n    };\n    return Registry;\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ClassRegistry = /** @class */ (function (_super) {\n    __extends(ClassRegistry, _super);\n    function ClassRegistry() {\n        var _this = _super.call(this, function (c) { return c.name; }) || this;\n        _this.classToAllowedProps = new Map();\n        return _this;\n    }\n    ClassRegistry.prototype.register = function (value, options) {\n        if (typeof options === 'object') {\n            if (options.allowProps) {\n                this.classToAllowedProps.set(value, options.allowProps);\n            }\n            _super.prototype.register.call(this, value, options.identifier);\n        }\n        else {\n            _super.prototype.register.call(this, value, options);\n        }\n    };\n    ClassRegistry.prototype.getAllowedProps = function (value) {\n        return this.classToAllowedProps.get(value);\n    };\n    return ClassRegistry;\n}(Registry));\n\nvar __read$3 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nfunction valuesOfObj(record) {\n    if ('values' in Object) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return Object.values(record);\n    }\n    var values = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in record) {\n        if (record.hasOwnProperty(key)) {\n            values.push(record[key]);\n        }\n    }\n    return values;\n}\nfunction find(record, predicate) {\n    var values = valuesOfObj(record);\n    if ('find' in values) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return values.find(predicate);\n    }\n    var valuesNotNever = values;\n    for (var i = 0; i < valuesNotNever.length; i++) {\n        var value = valuesNotNever[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\nfunction forEach(record, run) {\n    Object.entries(record).forEach(function (_a) {\n        var _b = __read$3(_a, 2), key = _b[0], value = _b[1];\n        return run(value, key);\n    });\n}\nfunction includes(arr, value) {\n    return arr.indexOf(value) !== -1;\n}\nfunction findArr(record, predicate) {\n    for (var i = 0; i < record.length; i++) {\n        var value = record[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\n\nvar CustomTransformerRegistry = /** @class */ (function () {\n    function CustomTransformerRegistry() {\n        this.transfomers = {};\n    }\n    CustomTransformerRegistry.prototype.register = function (transformer) {\n        this.transfomers[transformer.name] = transformer;\n    };\n    CustomTransformerRegistry.prototype.findApplicable = function (v) {\n        return find(this.transfomers, function (transformer) {\n            return transformer.isApplicable(v);\n        });\n    };\n    CustomTransformerRegistry.prototype.findByName = function (name) {\n        return this.transfomers[name];\n    };\n    return CustomTransformerRegistry;\n}());\n\nvar getType$1 = function (payload) {\n    return Object.prototype.toString.call(payload).slice(8, -1);\n};\nvar isUndefined = function (payload) {\n    return typeof payload === 'undefined';\n};\nvar isNull = function (payload) { return payload === null; };\nvar isPlainObject$1 = function (payload) {\n    if (typeof payload !== 'object' || payload === null)\n        return false;\n    if (payload === Object.prototype)\n        return false;\n    if (Object.getPrototypeOf(payload) === null)\n        return true;\n    return Object.getPrototypeOf(payload) === Object.prototype;\n};\nvar isEmptyObject = function (payload) {\n    return isPlainObject$1(payload) && Object.keys(payload).length === 0;\n};\nvar isArray$1 = function (payload) {\n    return Array.isArray(payload);\n};\nvar isString = function (payload) {\n    return typeof payload === 'string';\n};\nvar isNumber = function (payload) {\n    return typeof payload === 'number' && !isNaN(payload);\n};\nvar isBoolean = function (payload) {\n    return typeof payload === 'boolean';\n};\nvar isRegExp = function (payload) {\n    return payload instanceof RegExp;\n};\nvar isMap = function (payload) {\n    return payload instanceof Map;\n};\nvar isSet = function (payload) {\n    return payload instanceof Set;\n};\nvar isSymbol = function (payload) {\n    return getType$1(payload) === 'Symbol';\n};\nvar isDate = function (payload) {\n    return payload instanceof Date && !isNaN(payload.valueOf());\n};\nvar isError = function (payload) {\n    return payload instanceof Error;\n};\nvar isNaNValue = function (payload) {\n    return typeof payload === 'number' && isNaN(payload);\n};\nvar isPrimitive = function (payload) {\n    return isBoolean(payload) ||\n        isNull(payload) ||\n        isUndefined(payload) ||\n        isNumber(payload) ||\n        isString(payload) ||\n        isSymbol(payload);\n};\nvar isBigint = function (payload) {\n    return typeof payload === 'bigint';\n};\nvar isInfinite = function (payload) {\n    return payload === Infinity || payload === -Infinity;\n};\nvar isTypedArray = function (payload) {\n    return ArrayBuffer.isView(payload) && !(payload instanceof DataView);\n};\nvar isURL = function (payload) { return payload instanceof URL; };\n\nvar escapeKey = function (key) { return key.replace(/\\./g, '\\\\.'); };\nvar stringifyPath = function (path) {\n    return path\n        .map(String)\n        .map(escapeKey)\n        .join('.');\n};\nvar parsePath = function (string) {\n    var result = [];\n    var segment = '';\n    for (var i = 0; i < string.length; i++) {\n        var char = string.charAt(i);\n        var isEscapedDot = char === '\\\\' && string.charAt(i + 1) === '.';\n        if (isEscapedDot) {\n            segment += '.';\n            i++;\n            continue;\n        }\n        var isEndOfSegment = char === '.';\n        if (isEndOfSegment) {\n            result.push(segment);\n            segment = '';\n            continue;\n        }\n        segment += char;\n    }\n    var lastSegment = segment;\n    result.push(lastSegment);\n    return result;\n};\n\nvar __assign$1 = (undefined && undefined.__assign) || function () {\n    __assign$1 = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign$1.apply(this, arguments);\n};\nvar __read$2 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray$2 = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar simpleRules = [\n    simpleTransformation(isUndefined, 'undefined', function () { return null; }, function () { return undefined; }),\n    simpleTransformation(isBigint, 'bigint', function (v) { return v.toString(); }, function (v) {\n        if (typeof BigInt !== 'undefined') {\n            return BigInt(v);\n        }\n        console.error('Please add a BigInt polyfill.');\n        return v;\n    }),\n    simpleTransformation(isDate, 'Date', function (v) { return v.toISOString(); }, function (v) { return new Date(v); }),\n    simpleTransformation(isError, 'Error', function (v, superJson) {\n        var baseError = {\n            name: v.name,\n            message: v.message\n        };\n        superJson.allowedErrorProps.forEach(function (prop) {\n            baseError[prop] = v[prop];\n        });\n        return baseError;\n    }, function (v, superJson) {\n        var e = new Error(v.message);\n        e.name = v.name;\n        e.stack = v.stack;\n        superJson.allowedErrorProps.forEach(function (prop) {\n            e[prop] = v[prop];\n        });\n        return e;\n    }),\n    simpleTransformation(isRegExp, 'regexp', function (v) { return '' + v; }, function (regex) {\n        var body = regex.slice(1, regex.lastIndexOf('/'));\n        var flags = regex.slice(regex.lastIndexOf('/') + 1);\n        return new RegExp(body, flags);\n    }),\n    simpleTransformation(isSet, 'set', \n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    function (v) { return __spreadArray$2([], __read$2(v.values())); }, function (v) { return new Set(v); }),\n    simpleTransformation(isMap, 'map', function (v) { return __spreadArray$2([], __read$2(v.entries())); }, function (v) { return new Map(v); }),\n    simpleTransformation(function (v) { return isNaNValue(v) || isInfinite(v); }, 'number', function (v) {\n        if (isNaNValue(v)) {\n            return 'NaN';\n        }\n        if (v > 0) {\n            return 'Infinity';\n        }\n        else {\n            return '-Infinity';\n        }\n    }, Number),\n    simpleTransformation(function (v) { return v === 0 && 1 / v === -Infinity; }, 'number', function () {\n        return '-0';\n    }, Number),\n    simpleTransformation(isURL, 'URL', function (v) { return v.toString(); }, function (v) { return new URL(v); }),\n];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar symbolRule = compositeTransformation(function (s, superJson) {\n    if (isSymbol(s)) {\n        var isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n        return isRegistered;\n    }\n    return false;\n}, function (s, superJson) {\n    var identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier];\n}, function (v) { return v.description; }, function (_, a, superJson) {\n    var value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n        throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n});\nvar constructorToName = [\n    Int8Array,\n    Uint8Array,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n    Uint8ClampedArray,\n].reduce(function (obj, ctor) {\n    obj[ctor.name] = ctor;\n    return obj;\n}, {});\nvar typedArrayRule = compositeTransformation(isTypedArray, function (v) { return ['typed-array', v.constructor.name]; }, function (v) { return __spreadArray$2([], __read$2(v)); }, function (v, a) {\n    var ctor = constructorToName[a[1]];\n    if (!ctor) {\n        throw new Error('Trying to deserialize unknown typed array');\n    }\n    return new ctor(v);\n});\nfunction isInstanceOfRegisteredClass(potentialClass, superJson) {\n    if (potentialClass === null || potentialClass === void 0 ? void 0 : potentialClass.constructor) {\n        var isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n        return isRegistered;\n    }\n    return false;\n}\nvar classRule = compositeTransformation(isInstanceOfRegisteredClass, function (clazz, superJson) {\n    var identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier];\n}, function (clazz, superJson) {\n    var allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n    if (!allowedProps) {\n        return __assign$1({}, clazz);\n    }\n    var result = {};\n    allowedProps.forEach(function (prop) {\n        result[prop] = clazz[prop];\n    });\n    return result;\n}, function (v, a, superJson) {\n    var clazz = superJson.classRegistry.getValue(a[1]);\n    if (!clazz) {\n        throw new Error('Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564');\n    }\n    return Object.assign(Object.create(clazz.prototype), v);\n});\nvar customRule = compositeTransformation(function (value, superJson) {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return ['custom', transformer.name];\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return transformer.serialize(value);\n}, function (v, a, superJson) {\n    var transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n        throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n});\nvar compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nvar transformValue = function (value, superJson) {\n    var applicableCompositeRule = findArr(compositeRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableCompositeRule) {\n        return {\n            value: applicableCompositeRule.transform(value, superJson),\n            type: applicableCompositeRule.annotation(value, superJson)\n        };\n    }\n    var applicableSimpleRule = findArr(simpleRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableSimpleRule) {\n        return {\n            value: applicableSimpleRule.transform(value, superJson),\n            type: applicableSimpleRule.annotation\n        };\n    }\n    return undefined;\n};\nvar simpleRulesByAnnotation = {};\nsimpleRules.forEach(function (rule) {\n    simpleRulesByAnnotation[rule.annotation] = rule;\n});\nvar untransformValue = function (json, type, superJson) {\n    if (isArray$1(type)) {\n        switch (type[0]) {\n            case 'symbol':\n                return symbolRule.untransform(json, type, superJson);\n            case 'class':\n                return classRule.untransform(json, type, superJson);\n            case 'custom':\n                return customRule.untransform(json, type, superJson);\n            case 'typed-array':\n                return typedArrayRule.untransform(json, type, superJson);\n            default:\n                throw new Error('Unknown transformation: ' + type);\n        }\n    }\n    else {\n        var transformation = simpleRulesByAnnotation[type];\n        if (!transformation) {\n            throw new Error('Unknown transformation: ' + type);\n        }\n        return transformation.untransform(json, superJson);\n    }\n};\n\nvar getNthKey = function (value, n) {\n    var keys = value.keys();\n    while (n > 0) {\n        keys.next();\n        n--;\n    }\n    return keys.next().value;\n};\nfunction validatePath(path) {\n    if (includes(path, '__proto__')) {\n        throw new Error('__proto__ is not allowed as a property');\n    }\n    if (includes(path, 'prototype')) {\n        throw new Error('prototype is not allowed as a property');\n    }\n    if (includes(path, 'constructor')) {\n        throw new Error('constructor is not allowed as a property');\n    }\n}\nvar getDeep = function (object, path) {\n    validatePath(path);\n    for (var i = 0; i < path.length; i++) {\n        var key = path[i];\n        if (isSet(object)) {\n            object = getNthKey(object, +key);\n        }\n        else if (isMap(object)) {\n            var row = +key;\n            var type = +path[++i] === 0 ? 'key' : 'value';\n            var keyOfRow = getNthKey(object, row);\n            switch (type) {\n                case 'key':\n                    object = keyOfRow;\n                    break;\n                case 'value':\n                    object = object.get(keyOfRow);\n                    break;\n            }\n        }\n        else {\n            object = object[key];\n        }\n    }\n    return object;\n};\nvar setDeep = function (object, path, mapper) {\n    validatePath(path);\n    if (path.length === 0) {\n        return mapper(object);\n    }\n    var parent = object;\n    for (var i = 0; i < path.length - 1; i++) {\n        var key = path[i];\n        if (isArray$1(parent)) {\n            var index = +key;\n            parent = parent[index];\n        }\n        else if (isPlainObject$1(parent)) {\n            parent = parent[key];\n        }\n        else if (isSet(parent)) {\n            var row = +key;\n            parent = getNthKey(parent, row);\n        }\n        else if (isMap(parent)) {\n            var isEnd = i === path.length - 2;\n            if (isEnd) {\n                break;\n            }\n            var row = +key;\n            var type = +path[++i] === 0 ? 'key' : 'value';\n            var keyOfRow = getNthKey(parent, row);\n            switch (type) {\n                case 'key':\n                    parent = keyOfRow;\n                    break;\n                case 'value':\n                    parent = parent.get(keyOfRow);\n                    break;\n            }\n        }\n    }\n    var lastKey = path[path.length - 1];\n    if (isArray$1(parent)) {\n        parent[+lastKey] = mapper(parent[+lastKey]);\n    }\n    else if (isPlainObject$1(parent)) {\n        parent[lastKey] = mapper(parent[lastKey]);\n    }\n    if (isSet(parent)) {\n        var oldValue = getNthKey(parent, +lastKey);\n        var newValue = mapper(oldValue);\n        if (oldValue !== newValue) {\n            parent[\"delete\"](oldValue);\n            parent.add(newValue);\n        }\n    }\n    if (isMap(parent)) {\n        var row = +path[path.length - 2];\n        var keyToRow = getNthKey(parent, row);\n        var type = +lastKey === 0 ? 'key' : 'value';\n        switch (type) {\n            case 'key': {\n                var newKey = mapper(keyToRow);\n                parent.set(newKey, parent.get(keyToRow));\n                if (newKey !== keyToRow) {\n                    parent[\"delete\"](keyToRow);\n                }\n                break;\n            }\n            case 'value': {\n                parent.set(keyToRow, mapper(parent.get(keyToRow)));\n                break;\n            }\n        }\n    }\n    return object;\n};\n\nvar __read$1 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray$1 = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nfunction traverse(tree, walker, origin) {\n    if (origin === void 0) { origin = []; }\n    if (!tree) {\n        return;\n    }\n    if (!isArray$1(tree)) {\n        forEach(tree, function (subtree, key) {\n            return traverse(subtree, walker, __spreadArray$1(__spreadArray$1([], __read$1(origin)), __read$1(parsePath(key))));\n        });\n        return;\n    }\n    var _a = __read$1(tree, 2), nodeValue = _a[0], children = _a[1];\n    if (children) {\n        forEach(children, function (child, key) {\n            traverse(child, walker, __spreadArray$1(__spreadArray$1([], __read$1(origin)), __read$1(parsePath(key))));\n        });\n    }\n    walker(nodeValue, origin);\n}\nfunction applyValueAnnotations(plain, annotations, superJson) {\n    traverse(annotations, function (type, path) {\n        plain = setDeep(plain, path, function (v) { return untransformValue(v, type, superJson); });\n    });\n    return plain;\n}\nfunction applyReferentialEqualityAnnotations(plain, annotations) {\n    function apply(identicalPaths, path) {\n        var object = getDeep(plain, parsePath(path));\n        identicalPaths.map(parsePath).forEach(function (identicalObjectPath) {\n            plain = setDeep(plain, identicalObjectPath, function () { return object; });\n        });\n    }\n    if (isArray$1(annotations)) {\n        var _a = __read$1(annotations, 2), root = _a[0], other = _a[1];\n        root.forEach(function (identicalPath) {\n            plain = setDeep(plain, parsePath(identicalPath), function () { return plain; });\n        });\n        if (other) {\n            forEach(other, apply);\n        }\n    }\n    else {\n        forEach(annotations, apply);\n    }\n    return plain;\n}\nvar isDeep = function (object, superJson) {\n    return isPlainObject$1(object) ||\n        isArray$1(object) ||\n        isMap(object) ||\n        isSet(object) ||\n        isInstanceOfRegisteredClass(object, superJson);\n};\nfunction addIdentity(object, path, identities) {\n    var existingSet = identities.get(object);\n    if (existingSet) {\n        existingSet.push(path);\n    }\n    else {\n        identities.set(object, [path]);\n    }\n}\nfunction generateReferentialEqualityAnnotations(identitites, dedupe) {\n    var result = {};\n    var rootEqualityPaths = undefined;\n    identitites.forEach(function (paths) {\n        if (paths.length <= 1) {\n            return;\n        }\n        // if we're not deduping, all of these objects continue existing.\n        // putting the shortest path first makes it easier to parse for humans\n        // if we're deduping though, only the first entry will still exist, so we can't do this optimisation.\n        if (!dedupe) {\n            paths = paths\n                .map(function (path) { return path.map(String); })\n                .sort(function (a, b) { return a.length - b.length; });\n        }\n        var _a = __read$1(paths), representativePath = _a[0], identicalPaths = _a.slice(1);\n        if (representativePath.length === 0) {\n            rootEqualityPaths = identicalPaths.map(stringifyPath);\n        }\n        else {\n            result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);\n        }\n    });\n    if (rootEqualityPaths) {\n        if (isEmptyObject(result)) {\n            return [rootEqualityPaths];\n        }\n        else {\n            return [rootEqualityPaths, result];\n        }\n    }\n    else {\n        return isEmptyObject(result) ? undefined : result;\n    }\n}\nvar walker = function (object, identities, superJson, dedupe, path, objectsInThisPath, seenObjects) {\n    var _a;\n    if (path === void 0) { path = []; }\n    if (objectsInThisPath === void 0) { objectsInThisPath = []; }\n    if (seenObjects === void 0) { seenObjects = new Map(); }\n    var primitive = isPrimitive(object);\n    if (!primitive) {\n        addIdentity(object, path, identities);\n        var seen = seenObjects.get(object);\n        if (seen) {\n            // short-circuit result if we've seen this object before\n            return dedupe\n                ? {\n                    transformedValue: null\n                }\n                : seen;\n        }\n    }\n    if (!isDeep(object, superJson)) {\n        var transformed_1 = transformValue(object, superJson);\n        var result_1 = transformed_1\n            ? {\n                transformedValue: transformed_1.value,\n                annotations: [transformed_1.type]\n            }\n            : {\n                transformedValue: object\n            };\n        if (!primitive) {\n            seenObjects.set(object, result_1);\n        }\n        return result_1;\n    }\n    if (includes(objectsInThisPath, object)) {\n        // prevent circular references\n        return {\n            transformedValue: null\n        };\n    }\n    var transformationResult = transformValue(object, superJson);\n    var transformed = (_a = transformationResult === null || transformationResult === void 0 ? void 0 : transformationResult.value) !== null && _a !== void 0 ? _a : object;\n    var transformedValue = isArray$1(transformed) ? [] : {};\n    var innerAnnotations = {};\n    forEach(transformed, function (value, index) {\n        var recursiveResult = walker(value, identities, superJson, dedupe, __spreadArray$1(__spreadArray$1([], __read$1(path)), [index]), __spreadArray$1(__spreadArray$1([], __read$1(objectsInThisPath)), [object]), seenObjects);\n        transformedValue[index] = recursiveResult.transformedValue;\n        if (isArray$1(recursiveResult.annotations)) {\n            innerAnnotations[index] = recursiveResult.annotations;\n        }\n        else if (isPlainObject$1(recursiveResult.annotations)) {\n            forEach(recursiveResult.annotations, function (tree, key) {\n                innerAnnotations[escapeKey(index) + '.' + key] = tree;\n            });\n        }\n    });\n    var result = isEmptyObject(innerAnnotations)\n        ? {\n            transformedValue: transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type]\n                : undefined\n        }\n        : {\n            transformedValue: transformedValue,\n            annotations: !!transformationResult\n                ? [transformationResult.type, innerAnnotations]\n                : innerAnnotations\n        };\n    if (!primitive) {\n        seenObjects.set(object, result);\n    }\n    return result;\n};\n\nfunction getType(payload) {\n  return Object.prototype.toString.call(payload).slice(8, -1);\n}\n\nfunction isArray(payload) {\n  return getType(payload) === \"Array\";\n}\n\nfunction isPlainObject(payload) {\n  if (getType(payload) !== \"Object\")\n    return false;\n  const prototype = Object.getPrototypeOf(payload);\n  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? \"enumerable\" : \"nonenumerable\";\n  if (propType === \"enumerable\")\n    carry[key] = newVal;\n  if (includeNonenumerable && propType === \"nonenumerable\") {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nfunction copy(target, options = {}) {\n  if (isArray(target)) {\n    return target.map((item) => copy(item, options));\n  }\n  if (!isPlainObject(target)) {\n    return target;\n  }\n  const props = Object.getOwnPropertyNames(target);\n  const symbols = Object.getOwnPropertySymbols(target);\n  return [...props, ...symbols].reduce((carry, key) => {\n    if (isArray(options.props) && !options.props.includes(key)) {\n      return carry;\n    }\n    const val = target[key];\n    const newVal = copy(val, options);\n    assignProp(carry, key, newVal, target, options.nonenumerable);\n    return carry;\n  }, {});\n}\n\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar SuperJSON = /** @class */ (function () {\n    /**\n     * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n     */\n    function SuperJSON(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.dedupe, dedupe = _c === void 0 ? false : _c;\n        this.classRegistry = new ClassRegistry();\n        this.symbolRegistry = new Registry(function (s) { var _a; return (_a = s.description) !== null && _a !== void 0 ? _a : ''; });\n        this.customTransformerRegistry = new CustomTransformerRegistry();\n        this.allowedErrorProps = [];\n        this.dedupe = dedupe;\n    }\n    SuperJSON.prototype.serialize = function (object) {\n        var identities = new Map();\n        var output = walker(object, identities, this, this.dedupe);\n        var res = {\n            json: output.transformedValue\n        };\n        if (output.annotations) {\n            res.meta = __assign(__assign({}, res.meta), { values: output.annotations });\n        }\n        var equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);\n        if (equalityAnnotations) {\n            res.meta = __assign(__assign({}, res.meta), { referentialEqualities: equalityAnnotations });\n        }\n        return res;\n    };\n    SuperJSON.prototype.deserialize = function (payload) {\n        var json = payload.json, meta = payload.meta;\n        var result = copy(json);\n        if (meta === null || meta === void 0 ? void 0 : meta.values) {\n            result = applyValueAnnotations(result, meta.values, this);\n        }\n        if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {\n            result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n        }\n        return result;\n    };\n    SuperJSON.prototype.stringify = function (object) {\n        return JSON.stringify(this.serialize(object));\n    };\n    SuperJSON.prototype.parse = function (string) {\n        return this.deserialize(JSON.parse(string));\n    };\n    SuperJSON.prototype.registerClass = function (v, options) {\n        this.classRegistry.register(v, options);\n    };\n    SuperJSON.prototype.registerSymbol = function (v, identifier) {\n        this.symbolRegistry.register(v, identifier);\n    };\n    SuperJSON.prototype.registerCustom = function (transformer, name) {\n        this.customTransformerRegistry.register(__assign({ name: name }, transformer));\n    };\n    SuperJSON.prototype.allowErrorProps = function () {\n        var _a;\n        var props = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            props[_i] = arguments[_i];\n        }\n        (_a = this.allowedErrorProps).push.apply(_a, __spreadArray([], __read(props)));\n    };\n    SuperJSON.defaultInstance = new SuperJSON();\n    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\n    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\n    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\n    return SuperJSON;\n}());\n\nconst defaultTheme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  inputBackgroundColor: '#fff',\n  inputTextColor: '#000',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  paused: '#8c49eb',\n  warning: '#ffb200'\n};\nconst ThemeContext = /*#__PURE__*/React.createContext(defaultTheme);\nfunction ThemeProvider({\n  theme,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, _extends({\n    value: theme\n  }, rest));\n}\nfunction useTheme() {\n  return React.useContext(ThemeContext);\n}\n\nfunction useMediaQuery(query) {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n\n    return;\n  }); // Watch for changes\n\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      const matcher = window.matchMedia(query); // Create our handler\n\n      const onChange = ({\n        matches\n      }) => setIsMatch(matches); // Listen for changes\n\n\n      matcher.addListener(onChange);\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange);\n      };\n    }\n\n    return;\n  }, [isMatch, query, setIsMatch]);\n  return isMatch;\n}\n\nfunction getQueryStatusColor({\n  queryState,\n  observerCount,\n  isStale,\n  theme\n}) {\n  return queryState.fetchStatus === 'fetching' ? theme.active : !observerCount ? theme.gray : queryState.fetchStatus === 'paused' ? theme.paused : isStale ? theme.warning : theme.success;\n}\nfunction getQueryStatusLabel(query) {\n  return query.state.fetchStatus === 'fetching' ? 'fetching' : !query.getObserversCount() ? 'inactive' : query.state.fetchStatus === 'paused' ? 'paused' : query.isStale() ? 'stale' : 'fresh';\n}\nfunction styled(type, newStyles, queries = {}) {\n  return /*#__PURE__*/React.forwardRef(({\n    style,\n    ...rest\n  }, ref) => {\n    const theme = useTheme();\n    const mediaStyles = Object.entries(queries).reduce((current, [key, value]) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useMediaQuery(key) ? { ...current,\n        ...(typeof value === 'function' ? value(rest, theme) : value)\n      } : current;\n    }, {});\n    return /*#__PURE__*/React.createElement(type, { ...rest,\n      style: { ...(typeof newStyles === 'function' ? newStyles(rest, theme) : newStyles),\n        ...style,\n        ...mediaStyles\n      },\n      ref\n    });\n  });\n}\nfunction useIsMounted() {\n  const mountedRef = React.useRef(false);\n  const isMounted = React.useCallback(() => mountedRef.current, []);\n  React.useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\n/**\n * Displays a string regardless the type of the data\n * @param {unknown} value Value to be stringified\n * @param {boolean} beautify Formats json to multiline\n */\n\nconst displayValue = (value, beautify = false) => {\n  const {\n    json\n  } = SuperJSON.serialize(value);\n  return JSON.stringify(json, null, beautify ? 2 : undefined);\n}; // Sorting functions\n\nconst getStatusRank = q => q.state.fetchStatus !== 'idle' ? 0 : !q.getObserversCount() ? 3 : q.isStale() ? 2 : 1;\n\nconst queryHashSort = (a, b) => a.queryHash.localeCompare(b.queryHash);\n\nconst dateSort = (a, b) => a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;\n\nconst statusAndDateSort = (a, b) => {\n  if (getStatusRank(a) === getStatusRank(b)) {\n    return dateSort(a, b);\n  }\n\n  return getStatusRank(a) > getStatusRank(b) ? 1 : -1;\n};\n\nconst sortFns = {\n  'Status > Last Updated': statusAndDateSort,\n  'Query Hash': queryHashSort,\n  'Last Updated': dateSort\n};\nconst minPanelSize = 70;\nconst defaultPanelSize = 500;\nconst sides = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\n\n/**\n * Check if the given side is vertical (left/right)\n */\nfunction isVerticalSide(side) {\n  return ['left', 'right'].includes(side);\n}\n/**\n * Get the opposite side, eg 'left' => 'right'. 'top' => 'bottom', etc\n */\n\nfunction getOppositeSide(side) {\n  return sides[side];\n}\n/**\n * Given as css prop it will return a sided css prop based on a given side\n * Example given `border` and `right` it return `borderRight`\n */\n\nfunction getSidedProp(prop, side) {\n  return \"\" + prop + (side.charAt(0).toUpperCase() + side.slice(1));\n}\nfunction getSidePanelStyle({\n  position = 'bottom',\n  height,\n  width,\n  devtoolsTheme,\n  isOpen,\n  isResizing,\n  panelStyle\n}) {\n  const oppositeSide = getOppositeSide(position);\n  const borderSide = getSidedProp('border', oppositeSide);\n  const isVertical = isVerticalSide(position);\n  return { ...panelStyle,\n    direction: 'ltr',\n    position: 'fixed',\n    [position]: 0,\n    [borderSide]: \"1px solid \" + devtoolsTheme.gray,\n    transformOrigin: oppositeSide,\n    boxShadow: '0 0 20px rgba(0,0,0,.3)',\n    zIndex: 99999,\n    // visibility will be toggled after transitions, but set initial state here\n    visibility: isOpen ? 'visible' : 'hidden',\n    ...(isResizing ? {\n      transition: \"none\"\n    } : {\n      transition: \"all .2s ease\"\n    }),\n    ...(isOpen ? {\n      opacity: 1,\n      pointerEvents: 'all',\n      transform: isVertical ? \"translateX(0) scale(1)\" : \"translateY(0) scale(1)\"\n    } : {\n      opacity: 0,\n      pointerEvents: 'none',\n      transform: isVertical ? \"translateX(15px) scale(1.02)\" : \"translateY(15px) scale(1.02)\"\n    }),\n    ...(isVertical ? {\n      top: 0,\n      height: '100vh',\n      maxWidth: '90%',\n      width: typeof width === 'number' && width >= minPanelSize ? width : defaultPanelSize\n    } : {\n      left: 0,\n      width: '100%',\n      maxHeight: '90%',\n      height: typeof height === 'number' && height >= minPanelSize ? height : defaultPanelSize\n    })\n  };\n}\n/**\n * Get resize handle style based on a given side\n */\n\nfunction getResizeHandleStyle(position = 'bottom') {\n  const isVertical = isVerticalSide(position);\n  const oppositeSide = getOppositeSide(position);\n  const marginSide = getSidedProp('margin', oppositeSide);\n  return {\n    position: 'absolute',\n    cursor: isVertical ? 'col-resize' : 'row-resize',\n    zIndex: 100000,\n    [oppositeSide]: 0,\n    [marginSide]: \"-4px\",\n    ...(isVertical ? {\n      top: 0,\n      height: '100%',\n      width: '4px'\n    } : {\n      width: '100%',\n      height: '4px'\n    })\n  };\n}\n\nconst Panel = styled('div', (_props, theme) => ({\n  fontSize: 'clamp(12px, 1.5vw, 14px)',\n  fontFamily: \"sans-serif\",\n  display: 'flex',\n  backgroundColor: theme.background,\n  color: theme.foreground\n}), {\n  '(max-width: 700px)': {\n    flexDirection: 'column'\n  },\n  '(max-width: 600px)': {\n    fontSize: '.9em' // flexDirection: 'column',\n\n  }\n});\nconst ActiveQueryPanel = styled('div', () => ({\n  flex: '1 1 500px',\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  height: '100%'\n}), {\n  '(max-width: 700px)': (_props, theme) => ({\n    borderTop: \"2px solid \" + theme.gray\n  })\n});\nconst Button = styled('button', (props, theme) => ({\n  appearance: 'none',\n  fontSize: '.9em',\n  fontWeight: 'bold',\n  background: theme.gray,\n  border: '0',\n  borderRadius: '.3em',\n  color: 'white',\n  padding: '.5em',\n  opacity: props.disabled ? '.5' : undefined,\n  cursor: 'pointer'\n}));\nconst QueryKeys = styled('span', {\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: '0.5em',\n  fontSize: '0.9em'\n});\nconst QueryKey = styled('span', {\n  display: 'inline-flex',\n  alignItems: 'center',\n  padding: '.2em .4em',\n  fontWeight: 'bold',\n  textShadow: '0 0 10px black',\n  borderRadius: '.2em'\n});\nconst Code = styled('code', {\n  fontSize: '.9em',\n  color: 'inherit',\n  background: 'inherit'\n});\nconst Input = styled('input', (_props, theme) => ({\n  backgroundColor: theme.inputBackgroundColor,\n  border: 0,\n  borderRadius: '.2em',\n  color: theme.inputTextColor,\n  fontSize: '.9em',\n  lineHeight: \"1.3\",\n  padding: '.3em .4em'\n}));\nconst Select = styled('select', (_props, theme) => ({\n  display: \"inline-block\",\n  fontSize: \".9em\",\n  fontFamily: \"sans-serif\",\n  fontWeight: 'normal',\n  lineHeight: \"1.3\",\n  padding: \".3em 1.5em .3em .5em\",\n  height: 'auto',\n  border: 0,\n  borderRadius: \".2em\",\n  appearance: \"none\",\n  WebkitAppearance: 'none',\n  backgroundColor: theme.inputBackgroundColor,\n  backgroundImage: \"url(\\\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23444444'><polygon points='0,25 100,25 50,75'/></svg>\\\")\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"right .55em center\",\n  backgroundSize: \".65em auto, 100%\",\n  color: theme.inputTextColor\n}), {\n  '(max-width: 500px)': {\n    display: 'none'\n  }\n});\n\nfunction ScreenReader({\n  text\n}) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      position: 'absolute',\n      width: '0.1px',\n      height: '0.1px',\n      overflow: 'hidden'\n    }\n  }, text);\n}\n\nconst Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '1em',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word'\n});\nconst Label = styled('span', {\n  color: 'white'\n});\nconst LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white'\n});\nconst ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0\n});\nconst CopyButton = ({\n  value\n}) => {\n  const [copyState, setCopyState] = React.useState('NoCopy');\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: copyState === 'NoCopy' ? () => {\n      navigator.clipboard.writeText(SuperJSON.stringify(value)).then(() => {\n        setCopyState('SuccessCopy');\n        setTimeout(() => {\n          setCopyState('NoCopy');\n        }, 1500);\n      }, err => {\n        console.error('Failed to copy: ', err);\n        setCopyState('ErrorCopy');\n        setTimeout(() => {\n          setCopyState('NoCopy');\n        }, 1500);\n      });\n    } : undefined,\n    style: {\n      cursor: 'pointer',\n      color: 'inherit',\n      font: 'inherit',\n      outline: 'inherit',\n      background: 'transparent',\n      border: 'none',\n      padding: 0\n    }\n  }, copyState === 'NoCopy' ? /*#__PURE__*/React.createElement(Copier, null) : copyState === 'SuccessCopy' ? /*#__PURE__*/React.createElement(CopiedCopier, null) : /*#__PURE__*/React.createElement(ErrorCopier, null));\n};\nconst Value = styled('span', (_props, theme) => ({\n  color: theme.danger\n}));\nconst SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)'\n});\nconst Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em'\n});\nconst Expander = ({\n  expanded,\n  style = {}\n}) => /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    display: 'inline-block',\n    transition: 'all .1s ease',\n    transform: \"rotate(\" + (expanded ? 90 : 0) + \"deg) \" + (style.transform || ''),\n    ...style\n  }\n}, \"\\u25B6\");\n\nconst Copier = () => /*#__PURE__*/React.createElement(\"span\", {\n  \"aria-label\": \"Copy object to clipboard\",\n  title: \"Copy object to clipboard\",\n  style: {\n    paddingLeft: '1em'\n  }\n}, /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"12\",\n  viewBox: \"0 0 16 12\",\n  width: \"10\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n})));\n\nconst ErrorCopier = () => /*#__PURE__*/React.createElement(\"span\", {\n  \"aria-label\": \"Failed copying to clipboard\",\n  title: \"Failed copying to clipboard\",\n  style: {\n    paddingLeft: '1em',\n    display: 'flex',\n    alignItems: 'center'\n  }\n}, /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"12\",\n  viewBox: \"0 0 16 12\",\n  width: \"10\",\n  display: \"block\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"red\",\n  d: \"M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z\"\n})), /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    color: 'red',\n    fontSize: '12px',\n    paddingLeft: '4px',\n    position: 'relative',\n    top: '2px'\n  }\n}, \"See console\"));\n\nconst CopiedCopier = () => /*#__PURE__*/React.createElement(\"span\", {\n  \"aria-label\": \"Object copied to clipboard\",\n  title: \"Object copied to clipboard\",\n  style: {\n    paddingLeft: '1em',\n    display: 'inline-block',\n    verticalAlign: 'middle'\n  }\n}, /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  width: \"16\",\n  display: \"block\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"green\",\n  d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n})));\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nfunction chunkArray(array, size) {\n  if (size < 1) return [];\n  let i = 0;\n  const result = [];\n\n  while (i < array.length) {\n    result.push(array.slice(i, i + size));\n    i = i + size;\n  }\n\n  return result;\n}\nconst DefaultRenderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  copyable = false,\n  toggleExpanded,\n  pageSize\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState([]);\n  return /*#__PURE__*/React.createElement(Entry, {\n    key: label\n  }, subEntryPages.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ExpandButton, {\n    onClick: () => toggleExpanded()\n  }, /*#__PURE__*/React.createElement(Expander, {\n    expanded: expanded\n  }), \" \", label, ' ', /*#__PURE__*/React.createElement(Info, null, String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : '', subEntries.length, \" \", subEntries.length > 1 ? \"items\" : \"item\")), copyable ? /*#__PURE__*/React.createElement(CopyButton, {\n    value: value\n  }) : null, expanded ? subEntryPages.length === 1 ? /*#__PURE__*/React.createElement(SubEntries, null, subEntries.map(handleEntry)) : /*#__PURE__*/React.createElement(SubEntries, null, subEntryPages.map((entries, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index\n  }, /*#__PURE__*/React.createElement(Entry, null, /*#__PURE__*/React.createElement(LabelButton, {\n    onClick: () => setExpandedPages(old => old.includes(index) ? old.filter(d => d !== index) : [...old, index])\n  }, /*#__PURE__*/React.createElement(Expander, {\n    expanded: expanded\n  }), \" [\", index * pageSize, \" ...\", ' ', index * pageSize + pageSize - 1, \"]\"), expandedPages.includes(index) ? /*#__PURE__*/React.createElement(SubEntries, null, entries.map(handleEntry)) : null)))) : null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, null, label, \":\"), \" \", /*#__PURE__*/React.createElement(Value, null, displayValue(value))));\n};\n\nfunction isIterable(x) {\n  return Symbol.iterator in x;\n}\n\nfunction Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  copyable = false,\n  ...rest\n}) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded));\n  const toggleExpanded = React.useCallback(() => setExpanded(old => !old), []);\n  let type = typeof value;\n  let subEntries = [];\n\n  const makeProperty = sub => {\n    const subDefaultExpanded = defaultExpanded === true ? {\n      [sub.label]: true\n    } : defaultExpanded == null ? void 0 : defaultExpanded[sub.label];\n    return { ...sub,\n      defaultExpanded: subDefaultExpanded\n    };\n  };\n\n  if (Array.isArray(value)) {\n    type = 'array';\n    subEntries = value.map((d, i) => makeProperty({\n      label: i.toString(),\n      value: d\n    }));\n  } else if (value !== null && typeof value === 'object' && isIterable(value) && typeof value[Symbol.iterator] === 'function') {\n    type = 'Iterable';\n    subEntries = Array.from(value, (val, i) => makeProperty({\n      label: i.toString(),\n      value: val\n    }));\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object';\n    subEntries = Object.entries(value).map(([key, val]) => makeProperty({\n      label: key,\n      value: val\n    }));\n  }\n\n  const subEntryPages = chunkArray(subEntries, pageSize);\n  return renderer({\n    handleEntry: entry => /*#__PURE__*/React.createElement(Explorer, _extends({\n      key: entry.label,\n      value: value,\n      renderer: renderer,\n      copyable: copyable\n    }, rest, entry)),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    copyable,\n    toggleExpanded,\n    pageSize,\n    ...rest\n  });\n}\n\nfunction Logo(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"40px\",\n    height: \"40px\",\n    viewBox: \"0 0 190 190\",\n    version: \"1.1\"\n  }, props), /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: \"1\",\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-33.000000, 0.000000)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.7239712,61.3436237 C69.631224,46.362877 68.9675112,34.8727722 70.9666331,26.5293551 C72.1555965,21.5671678 74.3293088,17.5190846 77.6346064,14.5984631 C81.1241394,11.5150478 85.5360327,10.0020122 90.493257,10.0020122 C98.6712013,10.0020122 107.26826,13.7273214 116.455725,20.8044264 C120.20312,23.6910458 124.092437,27.170411 128.131651,31.2444746 C128.45314,30.8310265 128.816542,30.4410453 129.22143,30.0806152 C140.64098,19.9149716 150.255245,13.5989272 158.478408,11.1636507 C163.367899,9.715636 167.958526,9.57768202 172.138936,10.983031 C176.551631,12.4664684 180.06766,15.5329489 182.548314,19.8281091 C186.642288,26.9166735 187.721918,36.2310983 186.195595,47.7320243 C185.573451,52.4199112 184.50985,57.5263831 183.007094,63.0593153 C183.574045,63.1277086 184.142416,63.2532808 184.705041,63.4395297 C199.193932,68.2358678 209.453582,73.3937462 215.665021,79.2882839 C219.360669,82.7953831 221.773972,86.6998434 222.646365,91.0218204 C223.567176,95.5836746 222.669313,100.159332 220.191548,104.451297 C216.105211,111.529614 208.591643,117.11221 197.887587,121.534031 C193.589552,123.309539 188.726579,124.917559 183.293259,126.363748 C183.541176,126.92292 183.733521,127.516759 183.862138,128.139758 C186.954886,143.120505 187.618598,154.61061 185.619477,162.954027 C184.430513,167.916214 182.256801,171.964297 178.951503,174.884919 C175.46197,177.968334 171.050077,179.48137 166.092853,179.48137 C157.914908,179.48137 149.31785,175.756061 140.130385,168.678956 C136.343104,165.761613 132.410866,162.238839 128.325434,158.108619 C127.905075,158.765474 127.388968,159.376011 126.77857,159.919385 C115.35902,170.085028 105.744755,176.401073 97.5215915,178.836349 C92.6321009,180.284364 88.0414736,180.422318 83.8610636,179.016969 C79.4483686,177.533532 75.9323404,174.467051 73.4516862,170.171891 C69.3577116,163.083327 68.2780823,153.768902 69.8044053,142.267976 C70.449038,137.410634 71.56762,132.103898 73.1575891,126.339009 C72.5361041,126.276104 71.9120754,126.144816 71.2949591,125.940529 C56.8060684,121.144191 46.5464184,115.986312 40.3349789,110.091775 C36.6393312,106.584675 34.2260275,102.680215 33.3536352,98.3582381 C32.4328237,93.7963839 33.3306866,89.2207269 35.8084524,84.9287618 C39.8947886,77.8504443 47.4083565,72.2678481 58.1124133,67.8460273 C62.5385143,66.0176154 67.5637208,64.366822 73.1939394,62.8874674 C72.9933393,62.3969171 72.8349374,61.8811235 72.7239712,61.3436237 Z\",\n    fill: \"#002C4B\",\n    fillRule: \"nonzero\",\n    transform: \"translate(128.000000, 95.000000) scale(-1, 1) translate(-128.000000, -95.000000) \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.396882,64 L142.608177,64 C144.399254,64 146.053521,64.958025 146.944933,66.5115174 L161.577138,92.0115174 C162.461464,93.5526583 162.461464,95.4473417 161.577138,96.9884826 L146.944933,122.488483 C146.053521,124.041975 144.399254,125 142.608177,125 L113.396882,125 C111.605806,125 109.951539,124.041975 109.060126,122.488483 L94.4279211,96.9884826 C93.543596,95.4473417 93.543596,93.5526583 94.4279211,92.0115174 L109.060126,66.5115174 C109.951539,64.958025 111.605806,64 113.396882,64 Z M138.987827,70.2765273 C140.779849,70.2765273 142.434839,71.2355558 143.325899,72.7903404 L154.343038,92.0138131 C155.225607,93.5537825 155.225607,95.4462175 154.343038,96.9861869 L143.325899,116.20966 C142.434839,117.764444 140.779849,118.723473 138.987827,118.723473 L117.017233,118.723473 C115.225211,118.723473 113.570221,117.764444 112.67916,116.20966 L101.662022,96.9861869 C100.779452,95.4462175 100.779452,93.5537825 101.662022,92.0138131 L112.67916,72.7903404 C113.570221,71.2355558 115.225211,70.2765273 117.017233,70.2765273 L138.987827,70.2765273 Z M135.080648,77.1414791 L120.924411,77.1414791 C119.134228,77.1414791 117.480644,78.0985567 116.5889,79.6508285 L116.5889,79.6508285 L109.489217,92.0093494 C108.603232,93.5515958 108.603232,95.4484042 109.489217,96.9906506 L109.489217,96.9906506 L116.5889,109.349172 C117.480644,110.901443 119.134228,111.858521 120.924411,111.858521 L120.924411,111.858521 L135.080648,111.858521 C136.870831,111.858521 138.524416,110.901443 139.41616,109.349172 L139.41616,109.349172 L146.515843,96.9906506 C147.401828,95.4484042 147.401828,93.5515958 146.515843,92.0093494 L146.515843,92.0093494 L139.41616,79.6508285 C138.524416,78.0985567 136.870831,77.1414791 135.080648,77.1414791 L135.080648,77.1414791 Z M131.319186,83.7122186 C133.108028,83.7122186 134.760587,84.6678753 135.652827,86.2183156 L138.983552,92.0060969 C139.87203,93.5500005 139.87203,95.4499995 138.983552,96.9939031 L135.652827,102.781684 C134.760587,104.332125 133.108028,105.287781 131.319186,105.287781 L124.685874,105.287781 C122.897032,105.287781 121.244473,104.332125 120.352233,102.781684 L117.021508,96.9939031 C116.13303,95.4499995 116.13303,93.5500005 117.021508,92.0060969 L120.352233,86.2183156 C121.244473,84.6678753 122.897032,83.7122186 124.685874,83.7122186 L131.319186,83.7122186 Z M128.003794,90.1848875 C126.459294,90.1848875 125.034382,91.0072828 124.263005,92.3424437 C123.491732,93.6774232 123.491732,95.3225768 124.263005,96.6575563 C125.034382,97.9927172 126.459294,98.8151125 128.001266,98.8151125 L128.001266,98.8151125 C129.545766,98.8151125 130.970678,97.9927172 131.742055,96.6575563 C132.513327,95.3225768 132.513327,93.6774232 131.742055,92.3424437 C130.970678,91.0072828 129.545766,90.1848875 128.003794,90.1848875 L128.003794,90.1848875 Z M93,94.5009646 L100.767764,94.5009646\",\n    fill: \"#FFD94C\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M87.8601729,108.357758 C89.1715224,107.608286 90.8360246,108.074601 91.5779424,109.399303 L91.5779424,109.399303 L92.0525843,110.24352 C95.8563392,116.982993 99.8190116,123.380176 103.940602,129.435068 C108.807881,136.585427 114.28184,143.82411 120.362479,151.151115 C121.316878,152.30114 121.184944,154.011176 120.065686,154.997937 L120.065686,154.997937 L119.454208,155.534625 C99.3465389,173.103314 86.2778188,176.612552 80.2480482,166.062341 C74.3500652,155.742717 76.4844915,136.982888 86.6513274,109.782853 C86.876818,109.179582 87.3045861,108.675291 87.8601729,108.357758 Z M173.534177,129.041504 C174.986131,128.785177 176.375496,129.742138 176.65963,131.194242 L176.65963,131.194242 L176.812815,131.986376 C181.782365,157.995459 178.283348,171 166.315764,171 C154.609745,171 139.708724,159.909007 121.612702,137.727022 C121.211349,137.235047 120.994572,136.617371 121,135.981509 C121.013158,134.480686 122.235785,133.274651 123.730918,133.287756 L123.730918,133.287756 L124.684654,133.294531 C132.305698,133.335994 139.714387,133.071591 146.910723,132.501323 C155.409039,131.82788 164.283523,130.674607 173.534177,129.041504 Z M180.408726,73.8119663 C180.932139,72.4026903 182.508386,71.6634537 183.954581,72.149012 L183.954581,72.149012 L184.742552,72.4154854 C210.583763,81.217922 220.402356,90.8916805 214.198332,101.436761 C208.129904,111.751366 190.484347,119.260339 161.26166,123.963678 C160.613529,124.067994 159.948643,123.945969 159.382735,123.618843 C158.047025,122.846729 157.602046,121.158214 158.388848,119.847438 L158.388848,119.847438 L158.889328,119.0105 C162.877183,112.31633 166.481358,105.654262 169.701854,99.0242957 C173.50501,91.1948179 177.073967,82.7907081 180.408726,73.8119663 Z M94.7383398,66.0363218 C95.3864708,65.9320063 96.0513565,66.0540315 96.6172646,66.3811573 C97.9529754,67.153271 98.3979538,68.8417862 97.6111517,70.1525615 L97.6111517,70.1525615 L97.1106718,70.9895001 C93.1228168,77.6836699 89.5186416,84.3457379 86.2981462,90.9757043 C82.49499,98.8051821 78.9260328,107.209292 75.5912744,116.188034 C75.0678608,117.59731 73.4916142,118.336546 72.045419,117.850988 L72.045419,117.850988 L71.2574475,117.584515 C45.4162372,108.782078 35.597644,99.1083195 41.8016679,88.5632391 C47.8700957,78.2486335 65.515653,70.7396611 94.7383398,66.0363218 Z M136.545792,34.4653746 C156.653461,16.8966864 169.722181,13.3874478 175.751952,23.9376587 C181.649935,34.2572826 179.515508,53.0171122 169.348673,80.2171474 C169.123182,80.8204179 168.695414,81.324709 168.139827,81.6422422 C166.828478,82.3917144 165.163975,81.9253986 164.422058,80.6006966 L164.422058,80.6006966 L163.947416,79.7564798 C160.143661,73.0170065 156.180988,66.6198239 152.059398,60.564932 C147.192119,53.4145727 141.71816,46.1758903 135.637521,38.8488847 C134.683122,37.6988602 134.815056,35.9888243 135.934314,35.0020629 L135.934314,35.0020629 Z M90.6842361,18 C102.390255,18 117.291276,29.0909926 135.387298,51.2729777 C135.788651,51.7649527 136.005428,52.3826288 136,53.0184911 C135.986842,54.5193144 134.764215,55.7253489 133.269082,55.7122445 L133.269082,55.7122445 L132.315346,55.7054689 C124.694302,55.6640063 117.285613,55.9284091 110.089277,56.4986773 C101.590961,57.17212 92.7164767,58.325393 83.4658235,59.9584962 C82.0138691,60.2148231 80.6245044,59.2578618 80.3403697,57.805758 L80.3403697,57.805758 L80.1871846,57.0136235 C75.2176347,31.0045412 78.7166519,18 90.6842361,18 Z\",\n    fill: \"#FF4154\"\n  }))));\n}\n\nvar shim = {exports: {}};\n\nvar useSyncExternalStoreShim_production_min = {};\n\n/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredUseSyncExternalStoreShim_production_min;\n\nfunction requireUseSyncExternalStoreShim_production_min () {\n\tif (hasRequiredUseSyncExternalStoreShim_production_min) return useSyncExternalStoreShim_production_min;\n\thasRequiredUseSyncExternalStoreShim_production_min = 1;\nvar e=React__default;function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c});},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c});})},[a]);p(d);return d}\n\tfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return !k(a,d)}catch(f){return !0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;useSyncExternalStoreShim_production_min.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n\treturn useSyncExternalStoreShim_production_min;\n}\n\nvar useSyncExternalStoreShim_development = {};\n\n/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredUseSyncExternalStoreShim_development;\n\nfunction requireUseSyncExternalStoreShim_development () {\n\tif (hasRequiredUseSyncExternalStoreShim_development) return useSyncExternalStoreShim_development;\n\thasRequiredUseSyncExternalStoreShim_development = 1;\n\n\tif (process.env.NODE_ENV !== \"production\") {\n\t  (function() {\n\n\t/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\tif (\n\t  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n\t  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n\t    'function'\n\t) {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n\t}\n\t          var React = React__default;\n\n\tvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n\tfunction error(format) {\n\t  {\n\t    {\n\t      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        args[_key2 - 1] = arguments[_key2];\n\t      }\n\n\t      printWarning('error', format, args);\n\t    }\n\t  }\n\t}\n\n\tfunction printWarning(level, format, args) {\n\t  // When changing this logic, you might want to also\n\t  // update consoleWithStackDev.www.js as well.\n\t  {\n\t    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\t    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n\t    if (stack !== '') {\n\t      format += '%s';\n\t      args = args.concat([stack]);\n\t    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n\t    var argsWithFormat = args.map(function (item) {\n\t      return String(item);\n\t    }); // Careful: RN currently depends on this prefix\n\n\t    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n\t    // breaks IE9: https://github.com/facebook/react/issues/13610\n\t    // eslint-disable-next-line react-internal/no-production-logging\n\n\t    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\t  }\n\t}\n\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n\t  ;\n\t}\n\n\tvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n\t// dispatch for CommonJS interop named imports.\n\n\tvar useState = React.useState,\n\t    useEffect = React.useEffect,\n\t    useLayoutEffect = React.useLayoutEffect,\n\t    useDebugValue = React.useDebugValue;\n\tvar didWarnOld18Alpha = false;\n\tvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n\t// because of a very particular set of implementation details and assumptions\n\t// -- change any one of them and it will break. The most important assumption\n\t// is that updates are always synchronous, because concurrent rendering is\n\t// only available in versions of React that also have a built-in\n\t// useSyncExternalStore API. And we only use this shim when the built-in API\n\t// does not exist.\n\t//\n\t// Do not assume that the clever hacks used by this hook also work in general.\n\t// The point of this shim is to replace the need for hacks by other libraries.\n\n\tfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n\t// React do not expose a way to check if we're hydrating. So users of the shim\n\t// will need to track that themselves and return the correct value\n\t// from `getSnapshot`.\n\tgetServerSnapshot) {\n\t  {\n\t    if (!didWarnOld18Alpha) {\n\t      if (React.startTransition !== undefined) {\n\t        didWarnOld18Alpha = true;\n\n\t        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n\t      }\n\t    }\n\t  } // Read the current snapshot from the store on every render. Again, this\n\t  // breaks the rules of React, and only works here because of specific\n\t  // implementation details, most importantly that updates are\n\t  // always synchronous.\n\n\n\t  var value = getSnapshot();\n\n\t  {\n\t    if (!didWarnUncachedGetSnapshot) {\n\t      var cachedValue = getSnapshot();\n\n\t      if (!objectIs(value, cachedValue)) {\n\t        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n\t        didWarnUncachedGetSnapshot = true;\n\t      }\n\t    }\n\t  } // Because updates are synchronous, we don't queue them. Instead we force a\n\t  // re-render whenever the subscribed state changes by updating an some\n\t  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n\t  // the current value.\n\t  //\n\t  // Because we don't actually use the state returned by the useState hook, we\n\t  // can save a bit of memory by storing other stuff in that slot.\n\t  //\n\t  // To implement the early bailout, we need to track some things on a mutable\n\t  // object. Usually, we would put that in a useRef hook, but we can stash it in\n\t  // our useState hook instead.\n\t  //\n\t  // To force a re-render, we call forceUpdate({inst}). That works because the\n\t  // new object always fails an equality check.\n\n\n\t  var _useState = useState({\n\t    inst: {\n\t      value: value,\n\t      getSnapshot: getSnapshot\n\t    }\n\t  }),\n\t      inst = _useState[0].inst,\n\t      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n\t  // in the layout phase so we can access it during the tearing check that\n\t  // happens on subscribe.\n\n\n\t  useLayoutEffect(function () {\n\t    inst.value = value;\n\t    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n\t    // commit phase if there was an interleaved mutation. In concurrent mode\n\t    // this can happen all the time, but even in synchronous mode, an earlier\n\t    // effect may have mutated the store.\n\n\t    if (checkIfSnapshotChanged(inst)) {\n\t      // Force a re-render.\n\t      forceUpdate({\n\t        inst: inst\n\t      });\n\t    }\n\t  }, [subscribe, value, getSnapshot]);\n\t  useEffect(function () {\n\t    // Check for changes right before subscribing. Subsequent changes will be\n\t    // detected in the subscription handler.\n\t    if (checkIfSnapshotChanged(inst)) {\n\t      // Force a re-render.\n\t      forceUpdate({\n\t        inst: inst\n\t      });\n\t    }\n\n\t    var handleStoreChange = function () {\n\t      // TODO: Because there is no cross-renderer API for batching updates, it's\n\t      // up to the consumer of this library to wrap their subscription event\n\t      // with unstable_batchedUpdates. Should we try to detect when this isn't\n\t      // the case and print a warning in development?\n\t      // The store changed. Check if the snapshot changed since the last time we\n\t      // read from the store.\n\t      if (checkIfSnapshotChanged(inst)) {\n\t        // Force a re-render.\n\t        forceUpdate({\n\t          inst: inst\n\t        });\n\t      }\n\t    }; // Subscribe to the store and return a clean-up function.\n\n\n\t    return subscribe(handleStoreChange);\n\t  }, [subscribe]);\n\t  useDebugValue(value);\n\t  return value;\n\t}\n\n\tfunction checkIfSnapshotChanged(inst) {\n\t  var latestGetSnapshot = inst.getSnapshot;\n\t  var prevValue = inst.value;\n\n\t  try {\n\t    var nextValue = latestGetSnapshot();\n\t    return !objectIs(prevValue, nextValue);\n\t  } catch (error) {\n\t    return true;\n\t  }\n\t}\n\n\tfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n\t  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n\t  // React do not expose a way to check if we're hydrating. So users of the shim\n\t  // will need to track that themselves and return the correct value\n\t  // from `getSnapshot`.\n\t  return getSnapshot();\n\t}\n\n\tvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\n\tvar isServerEnvironment = !canUseDOM;\n\n\tvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\n\tvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\n\tuseSyncExternalStoreShim_development.useSyncExternalStore = useSyncExternalStore$2;\n\t          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\tif (\n\t  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n\t  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n\t    'function'\n\t) {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n\t}\n\t        \n\t  })();\n\t}\n\treturn useSyncExternalStoreShim_development;\n}\n\nif (process.env.NODE_ENV === 'production') {\n  shim.exports = requireUseSyncExternalStoreShim_production_min();\n} else {\n  shim.exports = requireUseSyncExternalStoreShim_development();\n}\n\nvar shimExports = shim.exports;\n\nfunction ReactQueryDevtools$1({\n  initialIsOpen,\n  panelProps = {},\n  closeButtonProps = {},\n  toggleButtonProps = {},\n  position = 'bottom-left',\n  containerElement: Container = 'aside',\n  context,\n  styleNonce,\n  panelPosition: initialPanelPosition = 'bottom',\n  errorTypes = []\n}) {\n  const rootRef = React.useRef(null);\n  const panelRef = React.useRef(null);\n  const [isOpen, setIsOpen] = useLocalStorage('reactQueryDevtoolsOpen', initialIsOpen);\n  const [devtoolsHeight, setDevtoolsHeight] = useLocalStorage('reactQueryDevtoolsHeight', defaultPanelSize);\n  const [devtoolsWidth, setDevtoolsWidth] = useLocalStorage('reactQueryDevtoolsWidth', defaultPanelSize);\n  const [panelPosition = 'bottom', setPanelPosition] = useLocalStorage('reactQueryDevtoolsPanelPosition', initialPanelPosition);\n  const [isResolvedOpen, setIsResolvedOpen] = React.useState(false);\n  const [isResizing, setIsResizing] = React.useState(false);\n  const isMounted = useIsMounted();\n\n  const handleDragStart = (panelElement, startEvent) => {\n    if (!panelElement) return;\n    if (startEvent.button !== 0) return; // Only allow left click for drag\n\n    const isVertical = isVerticalSide(panelPosition);\n    setIsResizing(true);\n    const {\n      height,\n      width\n    } = panelElement.getBoundingClientRect();\n    const startX = startEvent.clientX;\n    const startY = startEvent.clientY;\n    let newSize = 0;\n\n    const run = moveEvent => {\n      // prevent mouse selecting stuff with mouse drag\n      moveEvent.preventDefault(); // calculate the correct size based on mouse position and current panel position\n      // hint: it is different formula for the opposite sides\n\n      if (isVertical) {\n        newSize = width + (panelPosition === 'right' ? startX - moveEvent.clientX : moveEvent.clientX - startX);\n        setDevtoolsWidth(newSize);\n      } else {\n        newSize = height + (panelPosition === 'bottom' ? startY - moveEvent.clientY : moveEvent.clientY - startY);\n        setDevtoolsHeight(newSize);\n      }\n\n      if (newSize < minPanelSize) {\n        setIsOpen(false);\n      } else {\n        setIsOpen(true);\n      }\n    };\n\n    const unsub = () => {\n      if (isResizing) {\n        setIsResizing(false);\n      }\n\n      document.removeEventListener('mousemove', run, false);\n      document.removeEventListener('mouseUp', unsub, false);\n    };\n\n    document.addEventListener('mousemove', run, false);\n    document.addEventListener('mouseup', unsub, false);\n  };\n\n  React.useEffect(() => {\n    setIsResolvedOpen(isOpen != null ? isOpen : false);\n  }, [isOpen, isResolvedOpen, setIsResolvedOpen]); // Toggle panel visibility before/after transition (depending on direction).\n  // Prevents focusing in a closed panel.\n\n  React.useEffect(() => {\n    const ref = panelRef.current;\n\n    if (ref) {\n      const handlePanelTransitionStart = () => {\n        if (isResolvedOpen) {\n          ref.style.visibility = 'visible';\n        }\n      };\n\n      const handlePanelTransitionEnd = () => {\n        if (!isResolvedOpen) {\n          ref.style.visibility = 'hidden';\n        }\n      };\n\n      ref.addEventListener('transitionstart', handlePanelTransitionStart);\n      ref.addEventListener('transitionend', handlePanelTransitionEnd);\n      return () => {\n        ref.removeEventListener('transitionstart', handlePanelTransitionStart);\n        ref.removeEventListener('transitionend', handlePanelTransitionEnd);\n      };\n    }\n\n    return;\n  }, [isResolvedOpen]);\n  React.useEffect(() => {\n    var _rootRef$current;\n\n    if (isResolvedOpen && (_rootRef$current = rootRef.current) != null && _rootRef$current.parentElement) {\n      const {\n        parentElement\n      } = rootRef.current;\n      const styleProp = getSidedProp('padding', panelPosition);\n      const isVertical = isVerticalSide(panelPosition);\n\n      const previousPaddings = (({\n        padding,\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight\n      }) => ({\n        padding,\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight\n      }))(parentElement.style);\n\n      const run = () => {\n        // reset the padding\n        parentElement.style.padding = '0px';\n        parentElement.style.paddingTop = '0px';\n        parentElement.style.paddingBottom = '0px';\n        parentElement.style.paddingLeft = '0px';\n        parentElement.style.paddingRight = '0px'; // set the new padding based on the new panel position\n\n        parentElement.style[styleProp] = (isVertical ? devtoolsWidth : devtoolsHeight) + \"px\";\n      };\n\n      run();\n\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', run);\n        return () => {\n          window.removeEventListener('resize', run);\n          Object.entries(previousPaddings).forEach(([property, previousValue]) => {\n            parentElement.style[property] = previousValue;\n          });\n        };\n      }\n    }\n\n    return;\n  }, [isResolvedOpen, panelPosition, devtoolsHeight, devtoolsWidth]);\n  const {\n    style: panelStyle = {},\n    ...otherPanelProps\n  } = panelProps;\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps; // get computed style based on panel position\n\n  const style = getSidePanelStyle({\n    position: panelPosition,\n    devtoolsTheme: defaultTheme,\n    isOpen: isResolvedOpen,\n    height: devtoolsHeight,\n    width: devtoolsWidth,\n    isResizing,\n    panelStyle\n  }); // Do not render on the server\n\n  if (!isMounted()) return null;\n  return /*#__PURE__*/React.createElement(Container, {\n    ref: rootRef,\n    className: \"ReactQueryDevtools\",\n    \"aria-label\": \"React Query Devtools\"\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: defaultTheme\n  }, /*#__PURE__*/React.createElement(ReactQueryDevtoolsPanel$1, _extends({\n    ref: panelRef,\n    context: context,\n    styleNonce: styleNonce,\n    position: panelPosition,\n    onPositionChange: setPanelPosition,\n    showCloseButton: true,\n    closeButtonProps: closeButtonProps\n  }, otherPanelProps, {\n    style: style,\n    isOpen: isResolvedOpen,\n    setIsOpen: setIsOpen,\n    onDragStart: e => handleDragStart(panelRef.current, e),\n    errorTypes: errorTypes\n  }))), !isResolvedOpen ? /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\"\n  }, otherToggleButtonProps, {\n    \"aria-label\": \"Open React Query Devtools\",\n    \"aria-controls\": \"ReactQueryDevtoolsPanel\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    onClick: e => {\n      setIsOpen(true);\n      onToggleClick == null ? void 0 : onToggleClick(e);\n    },\n    style: {\n      background: 'none',\n      border: 0,\n      padding: 0,\n      position: 'fixed',\n      zIndex: 99999,\n      display: 'inline-flex',\n      fontSize: '1.5em',\n      margin: '.5em',\n      cursor: 'pointer',\n      width: 'fit-content',\n      ...(position === 'top-right' ? {\n        top: '0',\n        right: '0'\n      } : position === 'top-left' ? {\n        top: '0',\n        left: '0'\n      } : position === 'bottom-right' ? {\n        bottom: '0',\n        right: '0'\n      } : {\n        bottom: '0',\n        left: '0'\n      }),\n      ...toggleButtonStyle\n    }\n  }), /*#__PURE__*/React.createElement(Logo, {\n    \"aria-hidden\": true\n  }), /*#__PURE__*/React.createElement(ScreenReader, {\n    text: \"Open React Query Devtools\"\n  })) : null);\n}\n\nconst useSubscribeToQueryCache = (queryCache, getSnapshot, skip = false) => {\n  return shimExports.useSyncExternalStore(React.useCallback(onStoreChange => {\n    if (!skip) return queryCache.subscribe(notifyManager.batchCalls(onStoreChange));\n    return () => {\n      return;\n    };\n  }, [queryCache, skip]), getSnapshot, getSnapshot);\n};\n\nconst ReactQueryDevtoolsPanel$1 = /*#__PURE__*/React.forwardRef(function ReactQueryDevtoolsPanel(props, ref) {\n  const {\n    isOpen = true,\n    styleNonce,\n    setIsOpen,\n    context,\n    onDragStart,\n    onPositionChange,\n    showCloseButton,\n    position,\n    closeButtonProps = {},\n    errorTypes = [],\n    ...panelProps\n  } = props;\n  const {\n    onClick: onCloseClick,\n    ...otherCloseButtonProps\n  } = closeButtonProps;\n  const queryClient = useQueryClient({\n    context\n  });\n  const queryCache = queryClient.getQueryCache();\n  const [sort, setSort] = useLocalStorage('reactQueryDevtoolsSortFn', Object.keys(sortFns)[0]);\n  const [filter, setFilter] = useLocalStorage('reactQueryDevtoolsFilter', '');\n  const [baseSort, setBaseSort] = useLocalStorage('reactQueryDevtoolsBaseSort', 1);\n  const sortFn = React.useMemo(() => sortFns[sort], [sort]);\n  const queriesCount = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().length, !isOpen);\n  const [activeQueryHash, setActiveQueryHash] = useLocalStorage('reactQueryDevtoolsActiveQueryHash', '');\n  const queries = React.useMemo(() => {\n    const unsortedQueries = queryCache.getAll();\n\n    if (queriesCount === 0) {\n      return [];\n    }\n\n    const filtered = filter ? unsortedQueries.filter(item => rankItem(item.queryHash, filter).passed) : [...unsortedQueries];\n    const sorted = sortFn ? filtered.sort((a, b) => sortFn(a, b) * baseSort) : filtered;\n    return sorted;\n  }, [baseSort, sortFn, filter, queriesCount, queryCache]);\n  const [isMockOffline, setMockOffline] = React.useState(false);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: defaultTheme\n  }, /*#__PURE__*/React.createElement(Panel, _extends({\n    ref: ref,\n    className: \"ReactQueryDevtoolsPanel\",\n    \"aria-label\": \"React Query Devtools Panel\",\n    id: \"ReactQueryDevtoolsPanel\"\n  }, panelProps, {\n    style: {\n      height: defaultPanelSize,\n      position: 'relative',\n      ...panelProps.style\n    }\n  }), /*#__PURE__*/React.createElement(\"style\", {\n    nonce: styleNonce,\n    dangerouslySetInnerHTML: {\n      __html: \"\\n            .ReactQueryDevtoolsPanel * {\\n              scrollbar-color: \" + defaultTheme.backgroundAlt + \" \" + defaultTheme.gray + \";\\n            }\\n\\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar, .ReactQueryDevtoolsPanel scrollbar {\\n              width: 1em;\\n              height: 1em;\\n            }\\n\\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar-track, .ReactQueryDevtoolsPanel scrollbar-track {\\n              background: \" + defaultTheme.backgroundAlt + \";\\n            }\\n\\n            .ReactQueryDevtoolsPanel *::-webkit-scrollbar-thumb, .ReactQueryDevtoolsPanel scrollbar-thumb {\\n              background: \" + defaultTheme.gray + \";\\n              border-radius: .5em;\\n              border: 3px solid \" + defaultTheme.backgroundAlt + \";\\n            }\\n          \"\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: getResizeHandleStyle(position),\n    onMouseDown: onDragStart\n  }), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1 1 500px',\n      minHeight: '40%',\n      maxHeight: '100%',\n      overflow: 'auto',\n      borderRight: \"1px solid \" + defaultTheme.grayAlt,\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em',\n      background: defaultTheme.backgroundAlt,\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"aria-label\": \"Close React Query Devtools\",\n    \"aria-controls\": \"ReactQueryDevtoolsPanel\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"true\",\n    onClick: () => setIsOpen(false),\n    style: {\n      display: 'inline-flex',\n      background: 'none',\n      border: 0,\n      padding: 0,\n      marginRight: '.5em',\n      cursor: 'pointer'\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    \"aria-hidden\": true\n  }), /*#__PURE__*/React.createElement(ScreenReader, {\n    text: \"Close React Query Devtools\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(QueryStatusCount, {\n    queryCache: queryCache\n  }), position && onPositionChange ? /*#__PURE__*/React.createElement(Select, {\n    \"aria-label\": \"Panel position\",\n    value: position,\n    style: {\n      marginInlineStart: '.5em'\n    },\n    onChange: e => onPositionChange(e.target.value)\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"left\"\n  }, \"Left\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"right\"\n  }, \"Right\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"top\"\n  }, \"Top\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bottom\"\n  }, \"Bottom\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      gap: '0.5em'\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Filter\",\n    \"aria-label\": \"Filter by queryhash\",\n    value: filter != null ? filter : '',\n    onChange: e => setFilter(e.target.value),\n    onKeyDown: e => {\n      if (e.key === 'Escape') setFilter('');\n    },\n    style: {\n      flex: '1',\n      width: '100%'\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    \"aria-label\": \"Sort queries\",\n    value: sort,\n    onChange: e => setSort(e.target.value),\n    style: {\n      flex: '1',\n      minWidth: 75,\n      marginRight: '.5em'\n    }\n  }, Object.keys(sortFns).map(key => /*#__PURE__*/React.createElement(\"option\", {\n    key: key,\n    value: key\n  }, \"Sort by \", key))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => setBaseSort(old => old * -1),\n    style: {\n      padding: '.3em .4em',\n      marginRight: '.5em'\n    }\n  }, baseSort === 1 ? '⬆ Asc' : '⬇ Desc'), /*#__PURE__*/React.createElement(Button, {\n    title: \"Clear cache\",\n    \"aria-label\": \"Clear cache\",\n    type: \"button\",\n    onClick: () => queryCache.clear(),\n    style: {\n      padding: '.3em .4em',\n      marginRight: '.5em'\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => {\n      if (isMockOffline) {\n        onlineManager.setOnline(undefined);\n        setMockOffline(false);\n        window.dispatchEvent(new Event('online'));\n      } else {\n        onlineManager.setOnline(false);\n        setMockOffline(true);\n      }\n    },\n    \"aria-label\": isMockOffline ? 'Restore offline mock' : 'Mock offline behavior',\n    title: isMockOffline ? 'Restore offline mock' : 'Mock offline behavior',\n    style: {\n      padding: '0',\n      height: '2em'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"2em\",\n    height: \"2em\",\n    viewBox: \"0 0 24 24\",\n    stroke: isMockOffline ? defaultTheme.danger : 'currentColor',\n    fill: \"none\"\n  }, isMockOffline ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"18\",\n    x2: \"12.01\",\n    y2: \"18\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.172 15.172a4 4 0 0 1 5.656 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.343 12.343a7.963 7.963 0 0 1 3.864 -2.14m4.163 .155a7.965 7.965 0 0 1 3.287 2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.515 9.515a12 12 0 0 1 3.544 -2.455m3.101 -.92a12 12 0 0 1 10.325 3.374\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"3\",\n    x2: \"21\",\n    y2: \"21\"\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"18\",\n    x2: \"12.01\",\n    y2: \"18\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.172 15.172a4 4 0 0 1 5.656 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.343 12.343a8 8 0 0 1 11.314 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.515 9.515c4.686 -4.687 12.284 -4.687 17 0\"\n  }))), /*#__PURE__*/React.createElement(ScreenReader, {\n    text: isMockOffline ? 'Restore offline mock' : 'Mock offline behavior'\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowY: 'auto',\n      flex: '1'\n    }\n  }, queries.map(query => {\n    return /*#__PURE__*/React.createElement(QueryRow, {\n      queryKey: query.queryKey,\n      activeQueryHash: activeQueryHash,\n      setActiveQueryHash: setActiveQueryHash,\n      key: query.queryHash,\n      queryCache: queryCache\n    });\n  }))), activeQueryHash && isOpen ? /*#__PURE__*/React.createElement(ActiveQuery, {\n    activeQueryHash: activeQueryHash,\n    queryCache: queryCache,\n    queryClient: queryClient,\n    errorTypes: errorTypes\n  }) : null, showCloseButton ? /*#__PURE__*/React.createElement(Button, _extends({\n    type: \"button\",\n    \"aria-controls\": \"ReactQueryDevtoolsPanel\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"true\"\n  }, otherCloseButtonProps, {\n    style: {\n      position: 'absolute',\n      zIndex: 99999,\n      margin: '.5em',\n      bottom: 0,\n      left: 0,\n      ...otherCloseButtonProps.style\n    },\n    onClick: e => {\n      setIsOpen(false);\n      onCloseClick == null ? void 0 : onCloseClick(e);\n    }\n  }), \"Close\") : null));\n});\n\nconst ActiveQuery = ({\n  queryCache,\n  activeQueryHash,\n  queryClient,\n  errorTypes\n}) => {\n  var _useSubscribeToQueryC, _useSubscribeToQueryC2;\n\n  const activeQuery = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().find(query => query.queryHash === activeQueryHash));\n  const activeQueryState = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$getAll$fi;\n\n    return (_queryCache$getAll$fi = queryCache.getAll().find(query => query.queryHash === activeQueryHash)) == null ? void 0 : _queryCache$getAll$fi.state;\n  });\n  const isStale = (_useSubscribeToQueryC = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$getAll$fi2;\n\n    return (_queryCache$getAll$fi2 = queryCache.getAll().find(query => query.queryHash === activeQueryHash)) == null ? void 0 : _queryCache$getAll$fi2.isStale();\n  })) != null ? _useSubscribeToQueryC : false;\n  const observerCount = (_useSubscribeToQueryC2 = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$getAll$fi3;\n\n    return (_queryCache$getAll$fi3 = queryCache.getAll().find(query => query.queryHash === activeQueryHash)) == null ? void 0 : _queryCache$getAll$fi3.getObserversCount();\n  })) != null ? _useSubscribeToQueryC2 : 0;\n\n  const handleRefetch = () => {\n    const promise = activeQuery == null ? void 0 : activeQuery.fetch();\n    promise == null ? void 0 : promise.catch(noop);\n  };\n\n  const currentErrorTypeName = useMemo(() => {\n    if (activeQuery && activeQueryState != null && activeQueryState.error) {\n      const errorType = errorTypes.find(type => {\n        var _activeQueryState$err;\n\n        return type.initializer(activeQuery).toString() === ((_activeQueryState$err = activeQueryState.error) == null ? void 0 : _activeQueryState$err.toString());\n      });\n      return errorType == null ? void 0 : errorType.name;\n    }\n\n    return undefined;\n  }, [activeQuery, activeQueryState == null ? void 0 : activeQueryState.error, errorTypes]);\n\n  if (!activeQuery || !activeQueryState) {\n    return null;\n  }\n\n  const triggerError = errorType => {\n    var _errorType$initialize;\n\n    const error = (_errorType$initialize = errorType == null ? void 0 : errorType.initializer(activeQuery)) != null ? _errorType$initialize : new Error('Unknown error from devtools');\n    const __previousQueryOptions = activeQuery.options;\n    activeQuery.setState({\n      status: 'error',\n      error,\n      fetchMeta: { ...activeQuery.state.fetchMeta,\n        __previousQueryOptions\n      }\n    });\n  };\n\n  const restoreQueryAfterLoadingOrError = () => {\n    activeQuery.fetch(activeQuery.state.fetchMeta.__previousQueryOptions, {\n      // Make sure this fetch will cancel the previous one\n      cancelRefetch: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ActiveQueryPanel, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em',\n      background: defaultTheme.backgroundAlt,\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Query Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '.5em',\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'space-between'\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    style: {\n      lineHeight: '1.8em'\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      margin: 0,\n      padding: 0,\n      overflow: 'auto'\n    }\n  }, displayValue(activeQuery.queryKey, true))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      padding: '0.3em .6em',\n      borderRadius: '0.4em',\n      fontWeight: 'bold',\n      textShadow: '0 2px 10px black',\n      background: getQueryStatusColor({\n        queryState: activeQueryState,\n        isStale: isStale,\n        observerCount: observerCount,\n        theme: defaultTheme\n      }),\n      flexShrink: 0\n    }\n  }, getQueryStatusLabel(activeQuery))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '.5em',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  }, \"Observers: \", /*#__PURE__*/React.createElement(Code, null, observerCount)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  }, \"Last Updated:\", ' ', /*#__PURE__*/React.createElement(Code, null, new Date(activeQueryState.dataUpdatedAt).toLocaleTimeString()))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: defaultTheme.backgroundAlt,\n      padding: '.5em',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '0.5em',\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '0.5em',\n      alignItems: 'flex-end'\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: handleRefetch,\n    disabled: activeQueryState.fetchStatus === 'fetching',\n    style: {\n      background: defaultTheme.active\n    }\n  }, \"Refetch\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => queryClient.invalidateQueries(activeQuery),\n    style: {\n      background: defaultTheme.warning,\n      color: defaultTheme.inputTextColor\n    }\n  }, \"Invalidate\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => queryClient.resetQueries(activeQuery),\n    style: {\n      background: defaultTheme.gray\n    }\n  }, \"Reset\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => queryClient.removeQueries(activeQuery),\n    style: {\n      background: defaultTheme.danger\n    }\n  }, \"Remove\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => {\n      var _activeQuery$state$fe;\n\n      // Return early if the query is already restoring\n      if (activeQuery.state.fetchStatus === 'fetching' && typeof ((_activeQuery$state$fe = activeQuery.state.fetchMeta) == null ? void 0 : _activeQuery$state$fe.__previousQueryOptions) === 'undefined') {\n        return;\n      }\n\n      if (activeQuery.state.data === undefined) {\n        restoreQueryAfterLoadingOrError();\n      } else {\n        const __previousQueryOptions = activeQuery.options; // Trigger a fetch in order to trigger suspense as well.\n\n        activeQuery.fetch({ ...__previousQueryOptions,\n          queryFn: () => {\n            return new Promise(() => {// Never resolve\n            });\n          },\n          cacheTime: -1\n        });\n        activeQuery.setState({\n          data: undefined,\n          status: 'loading',\n          fetchMeta: { ...activeQuery.state.fetchMeta,\n            __previousQueryOptions\n          }\n        });\n      }\n    },\n    style: {\n      background: defaultTheme.paused\n    }\n  }, activeQuery.state.status === 'loading' ? 'Restore' : 'Trigger', ' ', \"loading\"), ' ', errorTypes.length === 0 || activeQuery.state.status === 'error' ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => {\n      if (!activeQuery.state.error) {\n        triggerError();\n      } else {\n        queryClient.resetQueries(activeQuery);\n      }\n    },\n    style: {\n      background: defaultTheme.danger\n    }\n  }, activeQuery.state.status === 'error' ? 'Restore' : 'Trigger', \" error\") : /*#__PURE__*/React.createElement(\"label\", null, \"Trigger error:\", /*#__PURE__*/React.createElement(Select, {\n    value: currentErrorTypeName != null ? currentErrorTypeName : '',\n    style: {\n      marginInlineStart: '.5em'\n    },\n    onChange: e => {\n      const errorType = errorTypes.find(t => t.name === e.target.value);\n      triggerError(errorType);\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\"\n  }), errorTypes.map(errorType => /*#__PURE__*/React.createElement(\"option\", {\n    key: errorType.name,\n    value: errorType.name\n  }, errorType.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: defaultTheme.backgroundAlt,\n      padding: '.5em',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Data Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(Explorer, {\n    label: \"Data\",\n    value: activeQueryState.data,\n    defaultExpanded: {},\n    copyable: true\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: defaultTheme.backgroundAlt,\n      padding: '.5em',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1\n    }\n  }, \"Query Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5em'\n    }\n  }, /*#__PURE__*/React.createElement(Explorer, {\n    label: \"Query\",\n    value: activeQuery,\n    defaultExpanded: {\n      queryKey: true\n    }\n  })));\n};\n\nconst QueryStatusCount = ({\n  queryCache\n}) => {\n  const hasFresh = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().filter(q => getQueryStatusLabel(q) === 'fresh').length);\n  const hasFetching = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().filter(q => getQueryStatusLabel(q) === 'fetching').length);\n  const hasPaused = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().filter(q => getQueryStatusLabel(q) === 'paused').length);\n  const hasStale = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().filter(q => getQueryStatusLabel(q) === 'stale').length);\n  const hasInactive = useSubscribeToQueryCache(queryCache, () => queryCache.getAll().filter(q => getQueryStatusLabel(q) === 'inactive').length);\n  return /*#__PURE__*/React.createElement(QueryKeys, null, /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.success,\n      opacity: hasFresh ? 1 : 0.3\n    }\n  }, \"fresh \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasFresh, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.active,\n      opacity: hasFetching ? 1 : 0.3\n    }\n  }, \"fetching \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasFetching, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.paused,\n      opacity: hasPaused ? 1 : 0.3\n    }\n  }, \"paused \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasPaused, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.warning,\n      color: 'black',\n      textShadow: '0',\n      opacity: hasStale ? 1 : 0.3\n    }\n  }, \"stale \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasStale, \")\")), ' ', /*#__PURE__*/React.createElement(QueryKey, {\n    style: {\n      background: defaultTheme.gray,\n      opacity: hasInactive ? 1 : 0.3\n    }\n  }, \"inactive \", /*#__PURE__*/React.createElement(Code, null, \"(\", hasInactive, \")\")));\n};\n\nconst QueryRow = /*#__PURE__*/React.memo(({\n  queryKey,\n  setActiveQueryHash,\n  activeQueryHash,\n  queryCache\n}) => {\n  var _useSubscribeToQueryC3, _useSubscribeToQueryC4, _useSubscribeToQueryC5, _useSubscribeToQueryC6;\n\n  const queryHash = (_useSubscribeToQueryC3 = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$find;\n\n    return (_queryCache$find = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find.queryHash;\n  })) != null ? _useSubscribeToQueryC3 : '';\n  const queryState = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$find2;\n\n    return (_queryCache$find2 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find2.state;\n  });\n  const isStale = (_useSubscribeToQueryC4 = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$find3;\n\n    return (_queryCache$find3 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find3.isStale();\n  })) != null ? _useSubscribeToQueryC4 : false;\n  const isDisabled = (_useSubscribeToQueryC5 = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$find4;\n\n    return (_queryCache$find4 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find4.isDisabled();\n  })) != null ? _useSubscribeToQueryC5 : false;\n  const observerCount = (_useSubscribeToQueryC6 = useSubscribeToQueryCache(queryCache, () => {\n    var _queryCache$find5;\n\n    return (_queryCache$find5 = queryCache.find(queryKey)) == null ? void 0 : _queryCache$find5.getObserversCount();\n  })) != null ? _useSubscribeToQueryC6 : 0;\n\n  if (!queryState) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    \"aria-label\": \"Open query details for \" + queryHash,\n    onClick: () => setActiveQueryHash(activeQueryHash === queryHash ? '' : queryHash),\n    style: {\n      display: 'flex',\n      borderBottom: \"solid 1px \" + defaultTheme.grayAlt,\n      cursor: 'pointer',\n      background: queryHash === activeQueryHash ? 'rgba(255,255,255,.1)' : undefined\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 auto',\n      width: '2em',\n      height: '2em',\n      background: getQueryStatusColor({\n        queryState,\n        isStale,\n        observerCount,\n        theme: defaultTheme\n      }),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      textShadow: isStale ? '0' : '0 0 10px black',\n      color: isStale ? 'black' : 'white'\n    }\n  }, observerCount), isDisabled ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '0 0 auto',\n      height: '2em',\n      background: defaultTheme.gray,\n      display: 'flex',\n      alignItems: 'center',\n      fontWeight: 'bold',\n      padding: '0 0.5em'\n    }\n  }, \"disabled\") : null, /*#__PURE__*/React.createElement(Code, {\n    style: {\n      padding: '.5em'\n    }\n  }, \"\" + queryHash));\n});\nQueryRow.displayName = 'QueryRow'; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\nconst ReactQueryDevtools = process.env.NODE_ENV !== 'development' ? function () {\n  return null;\n} : ReactQueryDevtools$1;\nconst ReactQueryDevtoolsPanel = process.env.NODE_ENV !== 'development' ? function () {\n  return null;\n} : ReactQueryDevtoolsPanel$1;\n\nexport { ADD_SKILL_API_URL, ALL_ACCOUNT_API_KEY, ALL_ACCOUNT_API_URL, ALL_LOCATION_API_KEY, ALL_LOCATION_API_URL, ALL_PROJECTS_API_KEY, ALL_PROJECTS_API_URL, AWAITING_CANDIDATES_API_URL, AWAITING_CANDIDATES_KEY, AcceptResponseModel, AccountDetails, AddSkillPayloadModel, AddSkillResponseModel, AllAccountApiResponse, AllOfficeLocationApiResponse, AllProjectLocationsApiResponse, ApiType, ApplyJobPayloadModel, AuthProvider, AuthType, AwaitingCandidate, AwaitingCandidatesModel, CALENDAR_API_URL, CALENDAR_GET_KEY, CANDIATE_JOB_APPLY_API_KEY, CANDIDATE_DROP_API_URL, CANDIDATE_EVENT_SOURCE_URL, CANDIDATE_FEEDBACK_API_URL, CANDIDATE_FEEDBACK_KEY, CANDIDATE_INTERVIEW_SCHEDULED_DETAIL_API_KEY, CANDIDATE_INTERVIEW_STAGE_FEEDBACK_API_URL, CANDIDATE_INTERVIEW_STAGE_FEEDBACK_KEY, CANDIDATE_LOGIN_API_URL, CANDIDATE_MINIMUM_INFO_API_KEY, CANDIDATE_MINIMUM_INFO_API_URL, CANDIDATE_ONBOARDING_API_URL, CANDIDATE_PAST_PLAYGROUND_PROCESS_KEY, CANDIDATE_PAST_PLAYGROUND_PROCESS_URL, CANDIDATE_PLAYGROUND_PROCESS_KEY, CANDIDATE_PLAYGROUND_PROCESS_URL, CANDIDATE_PROCEED_NEXT_ROUND_API_URL, CANDIDATE_RATING_API_URL, CANDIDATE_RATING_KEY, CANDIDATE_REFRESH_TOKEN, CANDIDATE_REQUISITION_INFO_KEY, CANDIDATE_REQUISITION_INFO_URL, CANDIDATE_SCREENING_API_URL, CANDIDATE_SCREENING_PROCEEDANYWAY, CANDIDATE_SIGNUP_API_URL, CANDIDATE_SIGN_OUT, CANDIDATE_SURVEY_API_URL, CANDIDATE_SURVEY_QUESTIONS_API_KEY, CANDIDATE_SURVEY_QUESTION_API_URL, CANDIDATE_UPDATE_PREFERENCE, CANDIDATE_UPDATE_PREFERENCE_KEY, CAREERS_PORTAL, CITIES_KEY, CODING_CHALLENGE_DETAIL_KEY, CODING_CHALLENGE_DETAIL_URL, CODING_CHALLENGE_KEY, CODING_CHALLENGE_URL, CODING_FEEDBACK_API_URL, COUNTRY_CODE_KEY, CalendarData, CalendarPostPayloadModel, CalendarPostResponseModel, CalendarResponseModel, CandidateBgvDocItem, CandidateBgvDocListItem, CandidateBgvDocsModel, CandidateCalendarData, CandidateCalendarResponseModel, CandidateDetails, CandidateFeedbackItem, CandidateFeedbackItemInfo, CandidateFeedbackModel, CandidateInterviewScheduledModel, CandidateLoginModel, CandidateLoginPaylodModel, CandidatePlayGroundProcessModel, CandidatePostPayloadModel, CandidateRatingModel, CandidateRejectInfoModel, CandidateRejectModelResponse, CandidateSignupPaylodModel, CandidateUpdatePreferenceModel, Challenge, CitiesModelApiResponse, CityApiResponseModel, CodingChallengeDetailModel, CodingChallengeModel, CustomApiClient, CustomTokenModel, DASHBOARD_INTERVIEW_SLOTS_KEY, DASHBOARD_UPCOMING_INTERVIEW_KEY, DASHBOARD_UPCOMING_INTERVIEW_URL, DELETE_BGV_DOCS_KEY, DELETE_BGV_DOC_ITEM_URL, DELETE_FEEDBACK_ATTACHMENT_API_URL, DELETE_FILE_API_URL, DELETE_QA_API_URL, DELETE_SKILL_API_URL, DEX_APP, DEX_DATA_KEY, DEX_PARSER_API_KEY, DEX_PARSER_API_URL, DEX_WEB, DIRECT_LOGIN, DOMAINS_INFO_API_KEY, DOMAINS_INFO_API_URL, DOWNLOAD_FILE_API_URL, DOWNLOAD_PLUGIN_KEY, DRIFTIN_V1, DRIFTIN_V2, DeleteFileModel, DeleteFilePayload, DeleteFileResponseModel, DeleteSkillPayloadModel, DeleteSkillResponseModel, DeleteSlotsPayloadModel, DepartmentsModel, DeteleDocListItemModel, DexData, DexParserModel, DomainsInfoModelApiResponse, EDIT_JOB_KEY, ELAccountsApiResponse, ELHiringJobInfoModel, ELJobCandidateModel, ELJobCandidatesApiResponseModel, ELJobDescriptionKpiModel, ELJobsKpiInfo, ELJobsKpiModel, EL_DASHBOARD_INFO_KEY, EL_HIRING_DASHBOARD_INFO_URL, EL_HIRING_INFO_URL, EL_HIRING_JOB_INFO_KEY, EL_JOBS_KPI_DETAILS, EL_JOBS_KPI_DETAILS_KEY, EL_JOB_CANDIDATES_API_KEY, EL_JOB_CANDIDATES_API_URL, EL_JOB_DESCRIPTION_KPI_DETAILS, EL_JOB_DESCRIPTION_KPI_DETAILS_KEY, EL_MAPPED_ACCOUNTS_API_KEY, EL_MAPPED_ACCOUNTS_API_URL, EL_PANELIST_DETAILS_KEY, EL_PANELIST_DETAILS_URL, EL_PANELIST_SEND_ALERT_API_URL, EXPLORE_TESTIMONIAL_API_URL, EXPLORE_TESTIMONIAL_GET_API_KEY, EXPLORE_VIDEO_API_URL, EXPLORE_VIDEO_GET_API_KEY, EXTERNAL_PANELIST_LOGIN, EXTERNAL_PANELIST_LOGOUT, EXTERNAL_PANELIST_OTP_VERIFY, EXTERNAL_PANELIST_REFRESH_TOKEN, ElDashboardInfoModel, ErrorModel, EventType, ExperienceModel, ExploreTestimonialModel, ExploreVideoModel, ExternalPanelistLoginModel, ExternalPanelistOtpVerifyData, ExternalPanelistOtpVerifyModel, ExternalPanelistOtpVerifyPayload, ExternalPanelistPayload, FEEDBACK_ATTACHMENT, FEEDBACK_CACHE_KEY, FILE_UPLOAD_API_URL, FilterKeysModel, GENERATE_HACKERRANK_TEST_URL, GET_CANDIDATE_BGV_DOCS_KEY, GET_CANDIDATE_BGV_DOCS_URL, GET_CANDIDATE_BGV_DOC_FILE_DETAILS_KEY, GET_CANDIDATE_BGV_DOC_LIST_URL, GET_CANDIDATE_REJECT_API_KEY, GET_CANDIDATE_REJECT_API_URL, GET_CITIES_API_KEY, GET_CITIES_URL, GET_CITY_BY_STATE_ID_URL, GET_IS_CANDIDATE_BGV_DOCS_UPLOADED_KEY, GET_IS_CANDIDATE_DOCS_UPLOADED_URL, GET_NOTICE_PERIOD, GET_NOTICE_PERIOD_API_KEY, GET_STATES_API_KEY, GET_STATES_URL, GOOGLE_AUTH_KEY, GOOGLE_AUTH_TOKEN_URL, GOOGLE_REFRESH_TOKEN, GRAPH_TOKEN_KEY, GoogleLogin, GoogleOAuthProvider, GoogleTokenModel, HACKER_RANK_API_KEY, HACKER_RANK_API_URL, HACKER_RANK_TEST_DETAIL_KEY, HACKER_RANK_TEST_DETAIL_URL, HACKER_RANK_TEST_REPORT_URL, HR_PROCEED_KEY, HackerRankModel, HackerRankTestDetailModel, IHackerRank, INCENTIVES_API_URL, INCENTIVES_GET_API_KEY, INTERVIEW_CANDIDATE_EDIT_SLOTS, INTERVIEW_CANDIDATE_MEETING_DETAIL_API_KEY, INTERVIEW_CANDIDATE_MEETING_DETAIL_API_URL, INTERVIEW_CANDIDATE_SLOTS, INTERVIEW_MEETING_DETAIL_API_KEY, INTERVIEW_MEETING_DETAIL_API_URL, INTERVIEW_MEETING_DETAIL_OPT_OUT_API_KEY, INTERVIEW_MEETING_DETAIL_OPT_OUT_API_URL, INTERVIEW_NEW_MEETING_API_URL, INTERVIEW_PANELIST_EDIT_SLOTS, INTERVIEW_PANELIST_SLOTS, INTERVIEW_SLOTS_KEY, INTERVIEW_SLOTS_URL, INTERVIEW_STAGES_API_KEY, INTERVIEW_STAGES_API_URL, INTERVIEW_STAGES_KEY, INTERVIEW_STATUSES_API_KEY, INTERVIEW_STATUSES_API_URL, INTERVIEW_SUCCESS_RATE_KEY, INTERVIEW_SUCCESS_RATE_URL, IS_SCREENED_KEY, ISkillItemQNA, IncentivesApiResponseModel, InterviewRound, InterviewSlotsModel, InterviewStage, InterviewStageFeedbackResponseModel, InterviewStageStatusApiResponseModel, InterviewStagesApiResponseModel, InterviewSuccessRateModel, JOB_APPLY_API_URL, JOB_APPLY_KEY, JOB_APPLY_URL, JOB_FILTER_OPTIONS, JOB_FILTER_OPTIONS_KEY, JOB_INFO_KEY, JOB_INFO_URL, JOB_LIST_KEY, JOB_LIST_TEMP, JOB_LIST_URL, JOB_MAPPING_INFO, JOB_REFER_API_URL, JOB_SOURCES_LIST_API_KEY, JOB_SOURCES_LIST_API_URL, JOB_STATUS_KEY, JOB_STATUS_URL, JdKpiDetails, JobApplyModel, JobDescriptionModel, JobDescriptions, JobFilterResponseModel, JobSourceOptionsApiResponse, JobStatusModel, JobsListModel, JobsStatus, KpiHiringDetails, LOGIN_KEY, LOGOUT_KEY, LoginType, LoginTypeModel, MEETING_CANDIDATE_DETAILS_KEY, MEETING_CANDIDATE_DETAILS_URL, MYACTION_API_KEY, MYACTION_API_URL, ManageInterviewProcessModel, MeetingCandidateResponseModel, MeetingOptOutPayloadModel, MeetingOptOutPostResponseModel, MsalProvider, MyActionResponseModel, NewMeetingModel, OFFICE_LOCATIONS_KEY, ONBOARDING_API_URL, ONBOARDING_KEY, ONBOARDING_SUBMIT_API_KEY, OTPVerifyUserInfo, OTP_VERIFY_API_URL, OfficeLocationsModel, OpportunityDetails, OtpVerifyPayload, OtpVerifyResponseModel, PANELISTS_API_URL, PANELISTS_GET_API_KEY, PANELISTS_GET_API_URL, PANELIST_API_URL, PANELIST_DETAILS_KEY, PANELIST_LIST_API_KEY, PANELIST_LIST_API_URL, PANELIST_MINIMUM_INFO_API_KEY, PANELIST_MINIMUM_INFO_API_URL, PAST_INTERVIEWS_API_URL, PAST_INTERVIEWS_GET_API_KEY, PENDING_FEEDBACK_API_URL, PENDING_FEEDBACK_KEY, PENDING_FEEDBACK_SKILLS_KEY, PENDING_FEEDBACK_SKILLS_URL, PREF_KEY, PRIMARY_CHALLENGE_API_URL, PRIMARY_CHALLENGE_KEY, PROCEED_ROUND_KEY, PROFILE_DATA_KEY, PROFILE_EDIT_SECTION_KEY, PROFILE_PERCENT_KEY, PROJECT_JOB_LIST_KEY, PROJECT_LIST_KEY, PROJECT_LIST_URL, PanelListInfo, PanelistAlertPayload, PanelistAlertResponseModel, PanelistCardModel, PanelistDetails, PanelistListItems, PanelistListModel, PanelistsApiResponseModel, PastInterviewsApiResponseModel, PendingFeedbackData, PendingFeedbackModel, PendingFeedbackSkillsResponseModel, PreferenceResponse, PreviewApiResponseModel, PrimaryChallengeModel, ProfilePopoverModel, ProfileType, ProjectCardModel, ProjectLocations, RECOMMENDATION_ACCEPT_URL, RECOMMENDATION_AVAILABILITY_KEY, RECOMMENDATION_AVAILABLITY_URL, RECOMMENDATION_SYNC_URL, RECRUITER_INFO_API_KEY, RECRUITER_INFO_API_URL, RESCHEDULE_SLOTS_API_URL, ReactQueryDevtools, ReactQueryDevtoolsPanel, RecommendationModel, RecruiterResponseModel, RecruiterType, ReschedulePostPayloadModel, RoleName, RoleType, SAVE_FEEDBACK_API_URL, SCREENING_STATUS_KEY, SKILLS_BY_CATG_API_URL, SKILLS_BY_CAT_API_KEY, SKILLS_INFO_API_KEY, SKILLS_INFO_API_URL, STAGE_STATUS_API_KEY, STAGE_STATUS_API_URL, STATES_INFO_KEY, STATES_KEY, SaveFeedbackPayloadModel, SaveFeedbackResponseModel, ScreeningData, ScreeningResponseModel, SearchPanelistModel, SignOutModel, SignupModel, SkillItem, SkillsInfoApiResponseModel, SkillsInfoModel, SkillsInfoModelApiResponse, SkillsModelResponse, StageDetails, StageStatus, StageStatusInfoModel, StageStatusModelResponse, StateApiResponseModel, StaticBgvDocsModel, StoreUtil, SuccessRateData, SurveyQuestionResponseModel, SurveyResponseModel, TAAwaitingCandidateModel, TAAwaitingItems, TAJobListModel, TA_AWAITING_CANDIDATE_API_URL, TriggerNextRoundPayload, UPCOMING_INTERVIEW_API_KEY, UPCOMING_INTERVIEW_API_URL, UPLOAD_BGV_DOCS, UPLOAD_CODE_ZIP, UPLOAD_PROJECT, USERINFO_KEY, USER_INFO_API_KEY, USER_INFO_API_URL, USER_PROFILE_API_KEY, USER_PROFILE_API_URL, USE_CASE_DETAIL_KEY, USE_CASE_DETAIL_URL, UpcomingInterviewInfo, UpcomingInterviewModel, UpcomingInterviewsData, UpcomingInterviewsModel, UpdateCodingFeedbackPayloadModel, UpdatePreferenceResponseModel, UploadFileType, UploadModel, UseCaseDetailModel, UserInfoModel, UserInfoModelApiResponse, UserModel, VALIDATE_CANDIDATE, WorkModesModel, config, deteleDocListItem, enabled, env, googleLogout, hasGrantedAllScopesGoogle, hasGrantedAnyScopeGoogle, loginRequest, msalConfig, msalInstance$1 as msalInstance, skillCategory, useApplyJob, useAuth, useAwaitingCandidates, useCalendarSlots, useCandidateBgvDocs, useCandidateFeedback, useCandidateInterviewStageFeedback, useCandidatePlayGroundProcess, useCandidateRating, useCandidateReject, useCities, useCodingChallenge, useCodingChallengeDetail, useCurrentCountryCode, useDescription, useELDashboardInfo, useELHiringJobInfo, useELJobCandidatesApiHook, useELJobKpiInfo, useELJobsInfo, useExplore, useFeedbackRating, useFile, useFilters, useGetActions, useGetRefreshToken, useGetSkills, useGoogleLogin, useGoogleOAuth, useGoogleOneTapLogin, useHackerRank, useHackerRankTestDetail, useHiringProcess, useIncentive, useInterviewMeetingDetails, useInterviewSlots, useInterviewSuccessRate, useJDHiringPipelineInfo, useJobDescription, useJobFilterOptions, useJobList, useJobRefer, useJobStatus, useLogin, useMeetingDetails, useMsal, useNoticePeriod, usePanelListDetails, usePanelistCardDetails, usePanelistList, usePanelistsApiHook, usePastInterview, usePendingFeedback, usePersonalInfo, useProfilePopover, useProjectList, useRecommendation, useRecruiterInfo, useResumeDetails, useRole, useScheduledDetails, useScreening, useScreeningProceed, useSecretManager, useSignOut, useSignup, useSkills, useSkillsDomain, useStageStatus, useTAAwaitingCandidate, useUpcomingInterview, useUpcomingInterviewInfo, useUpdatePreference, useUserInfo, useUtil };\n",
        "\n      import API from \"!../../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/.pnpm/style-loader@3.3.4_webpack@5.96.1_@swc+core@1.9.2_/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/cjs.js!../../../../../node_modules/.pnpm/postcss-loader@4.3.0_postcss@8.4.49_webpack@5.96.1_@swc+core@1.9.2_/node_modules/postcss-loader/dist/cjs.js!./Reports.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/cjs.js!../../../../../node_modules/.pnpm/postcss-loader@4.3.0_postcss@8.4.49_webpack@5.96.1_@swc+core@1.9.2_/node_modules/postcss-loader/dist/cjs.js!./Reports.scss\";\n       export default content && content.locals ? content.locals : undefined;\n",
        "import './Reports.scss'\r\n\r\nexport function Reports() {\r\n  return <div>Reports</div>\r\n}\r\n",
        "import { Route, Routes } from 'react-router-dom'\r\n\r\nimport { Reports } from './pages'\r\n\r\nexport function AppRouter() {\r\n  return (\r\n    <Routes>\r\n      <Route element={<Reports />} index />\r\n    </Routes>\r\n  )\r\n}\r\n",
        "import './index.css'\r\n\r\nimport { QueryClient, QueryClientProvider, ReactQueryDevtools } from '@package/api'\r\nimport { UIThemeProvider, I18nextProvider } from '@package/ui'\r\n\r\nimport { AppRouter } from './AppRouter'\r\nimport { i18n } from './i18n'\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <UIThemeProvider>\r\n        <I18nextProvider i18n={i18n}>\r\n          <AppRouter />\r\n        </I18nextProvider>\r\n      </UIThemeProvider>\r\n\r\n      <ReactQueryDevtools initialIsOpen={false} />\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n",
        "// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\r\n  font-family: 'Proxima Nova', sans-serif;\r\n}\r\n\r\n.container {\r\n  font-size: 3rem;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  max-width: 800px;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,uCAAuC;AACzC;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;AAClB\",\"sourcesContent\":[\"body {\\r\\n  font-family: 'Proxima Nova', sans-serif;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  font-size: 3rem;\\r\\n  margin: auto;\\r\\n  margin-top: 20px;\\r\\n  max-width: 800px;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n",
        "// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/.pnpm/css-loader@6.11.0_webpack@5.96.1_@swc+core@1.9.2_/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"
    ],
    "names": [
        "options",
        "styleTagTransform",
        "setAttributes",
        "insert",
        "domAPI",
        "insertStyleElement",
        "locals",
        "globalThis",
        "window",
        "global",
        "self",
        "getDefaultExportFromCjs",
        "x",
        "__esModule",
        "Object",
        "prototype",
        "hasOwnProperty",
        "call",
        "factory",
        "secureLs",
        "exports",
        "__webpack_modules__",
        "./src/Base64.js",
        "__unused_webpack_module",
        "__webpack_exports__",
        "__webpack_require__",
        "r",
        "d",
        "default",
        "__WEBPACK_DEFAULT_EXPORT__",
        "Base64",
        "_keyStr",
        "encode",
        "e",
        "n",
        "i",
        "s",
        "o",
        "u",
        "a",
        "t",
        "f",
        "_utf8Encode",
        "length",
        "charCodeAt",
        "isNaN",
        "this",
        "charAt",
        "decode",
        "replace",
        "indexOf",
        "String",
        "fromCharCode",
        "_utf8Decode",
        "c2",
        "c3",
        "./src/SecureLS.js",
        "SecureLS",
        "_constants__WEBPACK_IMPORTED_MODULE_0__",
        "_enc_utf8__WEBPACK_IMPORTED_MODULE_1__",
        "_utils__WEBPACK_IMPORTED_MODULE_2__",
        "crypto_js_aes__WEBPACK_IMPORTED_MODULE_3__",
        "crypto_js_aes__WEBPACK_IMPORTED_MODULE_3___default",
        "crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4__",
        "crypto_js_rabbit__WEBPACK_IMPORTED_MODULE_4___default",
        "crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5__",
        "crypto_js_rc4__WEBPACK_IMPORTED_MODULE_5___default",
        "crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6__",
        "crypto_js_tripledes__WEBPACK_IMPORTED_MODULE_6___default",
        "lz_string_libs_lz_string__WEBPACK_IMPORTED_MODULE_7__",
        "_Base64__WEBPACK_IMPORTED_MODULE_8__",
        "encryptors",
        "EncrytionTypes",
        "AES",
        "DES",
        "RABBIT",
        "RC4",
        "constructor",
        "encryptionSecret",
        "encryptionNamespace",
        "isCompression",
        "encodingType",
        "BASE64",
        "storage",
        "localStorage",
        "metaKey",
        "assign",
        "_name",
        "LZString",
        "compressToUTF16",
        "decompressFromUTF16",
        "enc",
        "config",
        "toLowerCase",
        "init",
        "metaData",
        "getMetaData",
        "_isBase64",
        "_isBase64EncryptionType",
        "_isAES",
        "_isAESEncryptionType",
        "_isDES",
        "_isDESEncryptionType",
        "_isRabbit",
        "_isRabbitEncryptionType",
        "_isRC4",
        "_isRC4EncryptionType",
        "_isCompression",
        "_isDataCompressionEnabled",
        "allKeys",
        "keys",
        "resetAllKeys",
        "getEncryptionSecret",
        "key",
        "obj",
        "getObjectFromKey",
        "generateSecretKey",
        "setMetaData",
        "getEncryptionType",
        "getDataFromLocalStorage",
        "getItem",
        "setDataToLocalStorage",
        "data",
        "setItem",
        "dataToStore",
        "processData",
        "getMetaKey",
        "get",
        "isAllKeysData",
        "jsonData",
        "JSON",
        "stringify",
        "err",
        "Error",
        "encodedData",
        "encryptor",
        "encrypt",
        "toString",
        "compressedData",
        "getAllKeys",
        "extractKeyNames",
        "decodedData",
        "is",
        "warn",
        "WarningEnum",
        "KEY_NOT_PROVIDED",
        "deCompressedData",
        "bytes",
        "decrypt",
        "_Utf8",
        "parse",
        "set",
        "isKeyPresent",
        "push",
        "k",
        "remove",
        "META_KEY_REMOVE",
        "removeFromKeysList",
        "removeItem",
        "removeAll",
        "clear",
        "./src/WordArray.js",
        "CryptoJSWordArray",
        "random",
        "nBytes",
        "words",
        "mw",
        "mz",
        "mask",
        "result",
        "Math",
        "rcache",
        "_r",
        "Set",
        "sigBytes",
        "undefined",
        "./src/constants.js",
        "DEFAULT_TEXT",
        "WarningTypes",
        "secretPhrase",
        "./src/enc-utf8.js",
        "Latin1",
        "wordArray",
        "bite",
        "latin1Chars",
        "join",
        "decodeURIComponent",
        "escape",
        "./src/utils.js",
        "crypto_js_pbkdf2__WEBPACK_IMPORTED_MODULE_0__",
        "crypto_js_pbkdf2__WEBPACK_IMPORTED_MODULE_0___default",
        "_constants__WEBPACK_IMPORTED_MODULE_1__",
        "_WordArray__WEBPACK_IMPORTED_MODULE_2__",
        "utils",
        "reason",
        "console",
        "salt",
        "keySize",
        "find",
        "item",
        "map",
        "some",
        "index",
        "findIndex",
        "splice",
        "module",
        "CryptoJS",
        "C",
        "BlockCipher",
        "lib",
        "C_algo",
        "algo",
        "SBOX",
        "INV_SBOX",
        "SUB_MIX_0",
        "SUB_MIX_1",
        "SUB_MIX_2",
        "SUB_MIX_3",
        "INV_SUB_MIX_0",
        "INV_SUB_MIX_1",
        "INV_SUB_MIX_2",
        "INV_SUB_MIX_3",
        "xi",
        "sx",
        "x2",
        "x4",
        "x8",
        "RCON",
        "extend",
        "_doReset",
        "_nRounds",
        "_keyPriorReset",
        "_key",
        "keyWords",
        "ksRows",
        "keySchedule",
        "_keySchedule",
        "ksRow",
        "invKeySchedule",
        "_invKeySchedule",
        "invKsRow",
        "encryptBlock",
        "M",
        "offset",
        "_doCryptBlock",
        "decryptBlock",
        "nRounds",
        "s0",
        "s1",
        "s2",
        "s3",
        "round",
        "t0",
        "t1",
        "t2",
        "t3",
        "_createHelper",
        "Cipher",
        "undefined$1",
        "C_lib",
        "Base",
        "WordArray",
        "BufferedBlockAlgorithm",
        "C_enc",
        "Utf8",
        "EvpKDF",
        "cfg",
        "createEncryptor",
        "create",
        "_ENC_XFORM_MODE",
        "createDecryptor",
        "_DEC_XFORM_MODE",
        "xformMode",
        "_xformMode",
        "reset",
        "process",
        "dataUpdate",
        "_append",
        "_process",
        "finalize",
        "_doFinalize",
        "ivSize",
        "selectCipherStrategy",
        "PasswordBasedCipher",
        "SerializableCipher",
        "cipher",
        "message",
        "ciphertext",
        "StreamCipher",
        "blockSize",
        "C_mode",
        "mode",
        "BlockCipherMode",
        "iv",
        "Encryptor",
        "Decryptor",
        "_cipher",
        "_iv",
        "CBC",
        "xorBlock",
        "block",
        "_prevBlock",
        "processBlock",
        "slice",
        "thisBlock",
        "Pkcs7",
        "pad",
        "blockSizeBytes",
        "nPaddingBytes",
        "paddingWord",
        "paddingWords",
        "padding",
        "concat",
        "unpad",
        "modeCreator",
        "_minBufferSize",
        "_mode",
        "__creator",
        "_doProcessBlock",
        "finalProcessedBlocks",
        "_data",
        "CipherParams",
        "cipherParams",
        "mixIn",
        "formatter",
        "OpenSSLFormatter",
        "format",
        "OpenSSL",
        "openSSLStr",
        "ciphertextWords",
        "cipherCfg",
        "algorithm",
        "_parse",
        "OpenSSLKdf",
        "kdf",
        "execute",
        "password",
        "hasher",
        "compute",
        "derivedParams",
        "crypto",
        "msCrypto",
        "g",
        "cryptoSecureRandomInt",
        "getRandomValues",
        "Uint32Array",
        "randomBytes",
        "readInt32LE",
        "F",
        "subtype",
        "overrides",
        "$super",
        "apply",
        "arguments",
        "instance",
        "properties",
        "propertyName",
        "clone",
        "encoder",
        "Hex",
        "thisWords",
        "thatWords",
        "thisSigBytes",
        "thatSigBytes",
        "clamp",
        "thatByte",
        "j",
        "ceil",
        "hexChars",
        "hexStr",
        "hexStrLength",
        "parseInt",
        "substr",
        "latin1Str",
        "latin1StrLength",
        "utf8Str",
        "unescape",
        "encodeURIComponent",
        "_nDataBytes",
        "doFlush",
        "processedWords",
        "dataWords",
        "dataSigBytes",
        "nBlocksReady",
        "nWordsReady",
        "max",
        "nBytesReady",
        "min",
        "Hasher",
        "update",
        "messageUpdate",
        "_createHmacHelper",
        "HMAC",
        "parseLoop",
        "base64Str",
        "base64StrLength",
        "reverseMap",
        "bitsCombined",
        "_map",
        "base64Chars",
        "triplet",
        "paddingChar",
        "_reverseMap",
        "paddingIndex",
        "MD5",
        "iterations",
        "derivedKey",
        "derivedKeyWords",
        "_hasher",
        "hasherBlockSize",
        "hasherBlockSizeBytes",
        "oKey",
        "_oKey",
        "iKey",
        "_iKey",
        "oKeyWords",
        "iKeyWords",
        "innerHash",
        "T",
        "abs",
        "sin",
        "_hash",
        "offset_i",
        "M_offset_i",
        "H",
        "M_offset_0",
        "M_offset_1",
        "M_offset_2",
        "M_offset_3",
        "M_offset_4",
        "M_offset_5",
        "M_offset_6",
        "M_offset_7",
        "M_offset_8",
        "M_offset_9",
        "M_offset_10",
        "M_offset_11",
        "M_offset_12",
        "M_offset_13",
        "M_offset_14",
        "M_offset_15",
        "b",
        "c",
        "FF",
        "GG",
        "HH",
        "II",
        "nBitsTotal",
        "nBitsLeft",
        "nBitsTotalH",
        "floor",
        "nBitsTotalL",
        "hash",
        "H_i",
        "HmacMD5",
        "SHA256",
        "PBKDF2",
        "hmac",
        "blockIndex",
        "blockIndexWords",
        "blockWords",
        "blockWordsLength",
        "intermediate",
        "intermediateWords",
        "S",
        "C_",
        "G",
        "Rabbit",
        "K",
        "X",
        "_X",
        "_C",
        "_b",
        "nextState",
        "IV",
        "IV_0",
        "IV_1",
        "i0",
        "i2",
        "i1",
        "i3",
        "gx",
        "ga",
        "gb",
        "gh",
        "gl",
        "keySigBytes",
        "_S",
        "keyByteIndex",
        "keyByte",
        "_i",
        "_j",
        "generateKeystreamWord",
        "keystreamWord",
        "RC4Drop",
        "drop",
        "W",
        "SHA1",
        "HmacSHA1",
        "isPrime",
        "sqrtN",
        "sqrt",
        "factor",
        "getFractionalBits",
        "nPrime",
        "pow",
        "h",
        "gamma0x",
        "gamma0",
        "gamma1x",
        "gamma1",
        "maj",
        "sigma0",
        "HmacSHA256",
        "PC1",
        "PC2",
        "BIT_SHIFTS",
        "SBOX_P",
        "SBOX_MASK",
        "keyBits",
        "keyBitPos",
        "subKeys",
        "_subKeys",
        "nSubKey",
        "subKey",
        "bitShift",
        "invSubKeys",
        "_invSubKeys",
        "_lBlock",
        "_rBlock",
        "exchangeLR",
        "exchangeRL",
        "lBlock",
        "rBlock",
        "TripleDES",
        "key1",
        "key2",
        "key3",
        "_des1",
        "_des2",
        "_des3",
        "./node_modules/lz-string/libs/lz-string.js",
        "__WEBPACK_AMD_DEFINE_RESULT__",
        "keyStrBase64",
        "keyStrUriSafe",
        "baseReverseDic",
        "getBaseValue",
        "alphabet",
        "character",
        "compressToBase64",
        "input",
        "res",
        "_compress",
        "decompressFromBase64",
        "_decompress",
        "compressed",
        "compressToUint8Array",
        "uncompressed",
        "compress",
        "buf",
        "Uint8Array",
        "TotalLen",
        "current_value",
        "decompressFromUint8Array",
        "decompress",
        "Array",
        "forEach",
        "compressToEncodedURIComponent",
        "decompressFromEncodedURIComponent",
        "bitsPerChar",
        "getCharFromInt",
        "value",
        "ii",
        "context_dictionary",
        "context_dictionaryToCreate",
        "context_c",
        "context_wc",
        "context_w",
        "context_enlargeIn",
        "context_dictSize",
        "context_numBits",
        "context_data",
        "context_data_val",
        "context_data_position",
        "resetValue",
        "getNextValue",
        "w",
        "bits",
        "resb",
        "maxpower",
        "power",
        "dictionary",
        "enlargeIn",
        "dictSize",
        "numBits",
        "entry",
        "val",
        "position",
        "?9157",
        "__webpack_module_cache__",
        "moduleId",
        "cachedModule",
        "getter",
        "definition",
        "defineProperty",
        "enumerable",
        "Function",
        "prop",
        "Symbol",
        "toStringTag",
        "defaultConfig",
        "accessToken",
        "amplitudeApiKey",
        "authority",
        "baseUrl",
        "careersPortal",
        "clientId",
        "googleClientId",
        "graphScope",
        "measurementId",
        "recaptchClientId",
        "redirectUri",
        "scope",
        "secure",
        "development",
        "local",
        "production",
        "staging",
        "test",
        "ApiType",
        "AuthType",
        "JobsStatus",
        "LoginType",
        "RoleName",
        "RoleType",
        "StageStatus",
        "UploadFileType",
        "Constants",
        "LIBRARY_NAME",
        "SKU",
        "CACHE_PREFIX",
        "DEFAULT_AUTHORITY",
        "DEFAULT_AUTHORITY_HOST",
        "DEFAULT_COMMON_TENANT",
        "ADFS",
        "DSTS",
        "AAD_INSTANCE_DISCOVERY_ENDPT",
        "CIAM_AUTH_URL",
        "AAD_TENANT_DOMAIN_SUFFIX",
        "RESOURCE_DELIM",
        "NO_ACCOUNT",
        "CLAIMS",
        "CONSUMER_UTID",
        "OPENID_SCOPE",
        "PROFILE_SCOPE",
        "OFFLINE_ACCESS_SCOPE",
        "EMAIL_SCOPE",
        "CODE_RESPONSE_TYPE",
        "CODE_GRANT_TYPE",
        "RT_GRANT_TYPE",
        "FRAGMENT_RESPONSE_MODE",
        "S256_CODE_CHALLENGE_METHOD",
        "URL_FORM_CONTENT_TYPE",
        "AUTHORIZATION_PENDING",
        "NOT_DEFINED",
        "EMPTY_STRING",
        "NOT_APPLICABLE",
        "FORWARD_SLASH",
        "IMDS_ENDPOINT",
        "IMDS_VERSION",
        "IMDS_TIMEOUT",
        "AZURE_REGION_AUTO_DISCOVER_FLAG",
        "REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX",
        "KNOWN_PUBLIC_CLOUDS",
        "TOKEN_RESPONSE_TYPE",
        "ID_TOKEN_RESPONSE_TYPE",
        "SHR_NONCE_VALIDITY",
        "INVALID_INSTANCE",
        "HttpStatus",
        "OIDC_DEFAULT_SCOPES",
        "OIDC_SCOPES",
        "HeaderNames",
        "PersistentCacheKeys",
        "AADAuthorityConstants",
        "ClaimsRequestKeys",
        "PromptValue",
        "LOGIN",
        "SELECT_ACCOUNT",
        "CONSENT",
        "NONE",
        "CREATE",
        "NO_SESSION",
        "CodeChallengeMethodValues",
        "PLAIN",
        "S256",
        "ServerResponseType",
        "QUERY",
        "FRAGMENT",
        "ResponseMode",
        "FORM_POST",
        "GrantType",
        "CacheAccountType",
        "Separators",
        "CredentialType",
        "ID_TOKEN",
        "ACCESS_TOKEN",
        "ACCESS_TOKEN_WITH_AUTH_SCHEME",
        "REFRESH_TOKEN",
        "APP_METADATA",
        "THE_FAMILY_ID",
        "AUTHORITY_METADATA_CONSTANTS",
        "AuthorityMetadataSource",
        "SERVER_TELEM_CONSTANTS",
        "SCHEMA_VERSION",
        "MAX_CUR_HEADER_BYTES",
        "MAX_LAST_HEADER_BYTES",
        "MAX_CACHED_ERRORS",
        "CACHE_KEY",
        "CATEGORY_SEPARATOR",
        "VALUE_SEPARATOR",
        "OVERFLOW_TRUE",
        "OVERFLOW_FALSE",
        "UNKNOWN_ERROR",
        "AuthenticationScheme",
        "BEARER",
        "POP",
        "SSH",
        "ThrottlingConstants",
        "Errors",
        "PasswordGrantConstants",
        "ResponseCodes",
        "RegionDiscoverySources",
        "RegionDiscoveryOutcomes",
        "CacheOutcome",
        "JsonWebTokenTypes",
        "unexpectedError",
        "postRequestFailed$1",
        "AuthErrorMessages",
        "AuthError",
        "errorCode",
        "errorMessage",
        "suberror",
        "super",
        "setPrototypeOf",
        "subError",
        "name",
        "setCorrelationId",
        "correlationId",
        "createAuthError",
        "code",
        "additionalMessage",
        "clientInfoDecodingError",
        "clientInfoEmptyError",
        "tokenParsingError",
        "nullOrEmptyToken",
        "endpointResolutionError",
        "networkError",
        "openIdConfigError",
        "hashNotDeserialized",
        "invalidState",
        "stateMismatch",
        "stateNotFound",
        "nonceMismatch",
        "authTimeNotFound",
        "maxAgeTranspired",
        "multipleMatchingTokens",
        "multipleMatchingAccounts",
        "multipleMatchingAppMetadata",
        "requestCannotBeMade",
        "cannotRemoveEmptyScope",
        "cannotAppendScopeSet",
        "emptyInputScopeSet",
        "deviceCodePollingCancelled",
        "deviceCodeExpired",
        "deviceCodeUnknownError",
        "noAccountInSilentRequest",
        "invalidCacheRecord",
        "invalidCacheEnvironment",
        "noAccountFound",
        "noCryptoObject",
        "unexpectedCredentialType",
        "invalidAssertion",
        "invalidClientCredential",
        "tokenRefreshRequired",
        "userTimeoutReached",
        "tokenClaimsCnfRequiredForSignedJwt",
        "authorizationCodeMissingFromServerResponse",
        "bindingKeyNotRemoved",
        "endSessionEndpointNotSupported",
        "keyIdMissing",
        "noNetworkConnectivity$1",
        "userCanceled",
        "missingTenantIdError",
        "methodNotImplemented",
        "nestedAppAuthBridgeDisabled",
        "ClientAuthErrorMessages",
        "ClientAuthError",
        "createClientAuthError",
        "DEFAULT_CRYPTO_IMPLEMENTATION",
        "createNewGuid",
        "base64Decode",
        "base64Encode",
        "getPublicKeyThumbprint",
        "removeTokenBindingKey",
        "clearKeystore",
        "signJwt",
        "hashString",
        "LogLevel",
        "Logger",
        "loggerOptions",
        "packageName",
        "packageVersion",
        "level",
        "Info",
        "setLoggerOptions",
        "createDefaultLoggerOptions",
        "localCallback",
        "loggerCallback",
        "defaultLoggerCallback",
        "piiLoggingEnabled",
        "logLevel",
        "logMessage",
        "containsPii",
        "log",
        "Date",
        "toUTCString",
        "executeCallback",
        "error",
        "errorPii",
        "warning",
        "Warning",
        "warningPii",
        "info",
        "infoPii",
        "verbose",
        "Verbose",
        "verbosePii",
        "trace",
        "Trace",
        "tracePii",
        "isPiiLoggingEnabled",
        "name$3",
        "version$4",
        "AzureCloudInstance",
        "extractTokenClaims",
        "encodedToken",
        "jswPayload",
        "authToken",
        "matches",
        "exec",
        "getJWSPayload",
        "base64Decoded",
        "checkMaxAge",
        "authTime",
        "maxAge",
        "now",
        "TimeUtils",
        "nowSeconds",
        "getTime",
        "isTokenExpired",
        "expiresOn",
        "expirationSec",
        "Number",
        "wasClockTurnedBack",
        "cachedAt",
        "delay",
        "Promise",
        "resolve",
        "setTimeout",
        "generateCredentialKey",
        "credentialEntity",
        "generateAccountId",
        "generateCredentialId",
        "generateTarget",
        "generateClaimsHash",
        "generateScheme",
        "createIdTokenEntity",
        "homeAccountId",
        "environment",
        "idToken",
        "tenantId",
        "credentialType",
        "secret",
        "realm",
        "createAccessTokenEntity",
        "scopes",
        "extExpiresOn",
        "refreshOn",
        "tokenType",
        "userAssertionHash",
        "keyId",
        "requestedClaims",
        "requestedClaimsHash",
        "atEntity",
        "extendedExpiresOn",
        "target",
        "tokenClaims",
        "cnf",
        "kid",
        "createRefreshTokenEntity",
        "refreshToken",
        "familyId",
        "rtEntity",
        "isCredentialEntity",
        "entity",
        "isAccessTokenEntity",
        "isIdTokenEntity",
        "isRefreshTokenEntity",
        "clientOrFamilyId",
        "generateAuthorityMetadataExpiresAt",
        "updateAuthorityEndpointMetadata",
        "authorityMetadata",
        "updatedValues",
        "fromNetwork",
        "authorization_endpoint",
        "token_endpoint",
        "end_session_endpoint",
        "issuer",
        "endpointsFromNetwork",
        "jwks_uri",
        "updateCloudDiscoveryMetadata",
        "aliases",
        "preferred_cache",
        "preferred_network",
        "aliasesFromNetwork",
        "isAuthorityMetadataExpired",
        "metadata",
        "expiresAt",
        "redirectUriEmpty",
        "claimsRequestParsingError",
        "authorityUriInsecure",
        "urlParseError",
        "urlEmptyError",
        "emptyInputScopesError",
        "invalidPromptValue",
        "invalidClaims",
        "tokenRequestEmpty",
        "logoutRequestEmpty",
        "invalidCodeChallengeMethod",
        "pkceParamsMissing",
        "invalidCloudDiscoveryMetadata",
        "invalidAuthorityMetadata",
        "untrustedAuthority",
        "missingSshJwk",
        "missingSshKid",
        "missingNonceAuthenticationHeader",
        "invalidAuthenticationHeader",
        "cannotSetOIDCOptions",
        "cannotAllowNativeBroker",
        "authorityMismatch",
        "ClientConfigurationErrorMessages",
        "ClientConfigurationError",
        "createClientConfigurationError",
        "StringUtils",
        "isEmptyObj",
        "strObj",
        "startsWith",
        "str",
        "search",
        "endsWith",
        "lastIndexOf",
        "queryStringToObject",
        "query",
        "params",
        "split",
        "pair",
        "trim",
        "trimArrayEntries",
        "arr",
        "removeEmptyStringsFromArray",
        "filter",
        "jsonParseHelper",
        "matchPattern",
        "pattern",
        "RegExp",
        "ScopeSet",
        "inputScopes",
        "scopeArr",
        "filteredInput",
        "validateInputScopes",
        "add",
        "fromString",
        "inputScopeString",
        "createSearchScopes",
        "scopeSet",
        "containsOnlyOIDCScopes",
        "removeScope",
        "removeOIDCScopes",
        "containsScope",
        "lowerCaseScopes",
        "printScopesLowerCase",
        "lowerCaseScopesSet",
        "has",
        "containsScopeSet",
        "size",
        "asArray",
        "every",
        "defaultScopeCount",
        "defaultScope",
        "appendScope",
        "newScope",
        "appendScopes",
        "newScopes",
        "delete",
        "unionScopeSets",
        "otherScopes",
        "unionScopes",
        "intersectingScopeSets",
        "sizeOtherScopes",
        "getScopeCount",
        "sizeThisScopes",
        "array",
        "printScopes",
        "buildClientInfo",
        "rawClientInfo",
        "decodedClientInfo",
        "buildClientInfoFromHomeAccountId",
        "clientInfoParts",
        "uid",
        "utid",
        "tenantIdMatchesHomeTenant",
        "buildTenantProfileFromIdTokenClaims",
        "idTokenClaims",
        "oid",
        "sub",
        "tid",
        "tfp",
        "acr",
        "localAccountId",
        "isHomeTenant",
        "updateAccountTenantProfileData",
        "baseAccountInfo",
        "tenantProfile",
        "updatedAccountInfo",
        "tenantProfileOverride",
        "claimsSourcedTenantProfile",
        "AuthorityType",
        "getTenantIdFromIdTokenClaims",
        "ProtocolMode",
        "AccountEntity",
        "generateAccountKey",
        "generateAccountCacheKey",
        "username",
        "getAccountInfo",
        "nativeAccountId",
        "authorityType",
        "tenantProfiles",
        "Map",
        "isSingleTenant",
        "accountInterface",
        "homeTenantId",
        "createAccount",
        "accountDetails",
        "account",
        "clientInfo",
        "protocolMode",
        "env",
        "getPreferredCache",
        "preferredUsername",
        "preferred_username",
        "upn",
        "email",
        "emails",
        "cloudGraphHostName",
        "msGraphHost",
        "createFromAccountInfo",
        "accountInfo",
        "from",
        "values",
        "generateHomeAccountId",
        "serverClientInfo",
        "authType",
        "logger",
        "cryptoObj",
        "isAccountEntity",
        "accountInfoIsEqual",
        "accountA",
        "accountB",
        "compareClaims",
        "claimsMatch",
        "accountAClaims",
        "accountBClaims",
        "iat",
        "nonce",
        "stripLeadingHashOrQuery",
        "responseString",
        "substring",
        "getDeserializedResponse",
        "normalizedResponse",
        "deserializedHash",
        "fromEntries",
        "URLSearchParams",
        "error_description",
        "state",
        "UrlString",
        "urlString",
        "_urlString",
        "url",
        "includes",
        "canonicalizeUri",
        "lowerCaseUrl",
        "validateAsUri",
        "components",
        "getUrlComponents",
        "HostNameAndPort",
        "PathSegments",
        "Protocol",
        "appendQueryString",
        "queryString",
        "removeHashFromUrl",
        "replaceTenantPath",
        "urlObject",
        "pathArray",
        "constructAuthorityUriFromObject",
        "regEx",
        "match",
        "urlComponents",
        "AbsolutePath",
        "QueryString",
        "pathSegments",
        "getDomainFromUrl",
        "getAbsoluteUrl",
        "relativeUrl",
        "baseComponents",
        "hashContainsKnownProperties",
        "response",
        "EndpointMetadata",
        "token_endpoint_auth_methods_supported",
        "response_modes_supported",
        "subject_types_supported",
        "id_token_signing_alg_values_supported",
        "response_types_supported",
        "scopes_supported",
        "request_uri_parameter_supported",
        "userinfo_endpoint",
        "device_authorization_endpoint",
        "http_logout_supported",
        "frontchannel_logout_supported",
        "claims_supported",
        "kerberos_endpoint",
        "tenant_region_scope",
        "cloud_instance_name",
        "cloud_graph_host_name",
        "msgraph_host",
        "rbac_url",
        "InstanceDiscoveryMetadata",
        "tenant_discovery_endpoint",
        "InstanceDiscoveryMetadataAliases",
        "getAliasesFromMetadata",
        "authorityHost",
        "cloudDiscoveryMetadata",
        "source",
        "getCloudDiscoveryMetadataFromNetworkResponse",
        "metadataEntry",
        "alias",
        "CacheManager",
        "cryptoImpl",
        "staticAuthorityOptions",
        "commonLogger",
        "getAllAccounts",
        "accountFilter",
        "buildTenantProfiles",
        "getAccountsFilteredBy",
        "getAccountInfoFilteredBy",
        "allAccounts",
        "sort",
        "getBaseAccountInfo",
        "accountEntities",
        "cachedAccounts",
        "flatMap",
        "accountEntity",
        "getAccountInfoForTenantProfiles",
        "getTenantProfilesFromAccountEntity",
        "getTenantedAccountInfoByFilter",
        "tokenKeys",
        "tenantProfileFilter",
        "tenantedAccountInfo",
        "tenantProfileMatchesFilter",
        "getIdToken",
        "idTokenClaimsMatchTenantProfileFilter",
        "targetTenantId",
        "searchTenantProfiles",
        "getTokenKeys",
        "matchingTenantProfiles",
        "matchLocalAccountIdFromTenantProfile",
        "matchLocalAccountIdFromTokenClaims",
        "loginHint",
        "matchLoginHintFromTokenClaims",
        "matchUsername",
        "matchName",
        "sid",
        "matchSid",
        "saveCacheRecord",
        "cacheRecord",
        "storeInCache",
        "setAccount",
        "setIdTokenCredential",
        "saveAccessToken",
        "setRefreshTokenCredential",
        "appMetadata",
        "setAppMetadata",
        "credential",
        "accessTokenFilter",
        "currentScopes",
        "removedAccessTokens",
        "accessTokenKeyMatchesFilter",
        "tokenEntity",
        "getAccessTokenCredential",
        "credentialMatchesFilter",
        "removeAccessToken",
        "all",
        "setAccessTokenCredential",
        "allAccountKeys",
        "getAccountKeys",
        "matchingAccounts",
        "cacheKey",
        "isAccountKey",
        "getAccount",
        "matchHomeAccountId",
        "matchEnvironment",
        "matchRealm",
        "matchNativeAccountId",
        "matchAuthorityType",
        "isCredentialKey",
        "lowerCaseKey",
        "clientIdValidation",
        "familyIdValidation",
        "matchClientId",
        "matchUserAssertionHash",
        "matchCredentialType",
        "matchFamilyId",
        "matchTarget",
        "matchTokenType",
        "matchKeyId",
        "getAppMetadataFilteredBy",
        "getAppMetadataFilteredByInternal",
        "allCacheKeys",
        "getKeys",
        "matchingAppMetadata",
        "isAppMetadata",
        "getAppMetadata",
        "getAuthorityMetadataByAlias",
        "host",
        "getAuthorityMetadataKeys",
        "matchedEntity",
        "isAuthorityMetadata",
        "getAuthorityMetadata",
        "removeAllAccounts",
        "removedAccounts",
        "removeAccount",
        "accountKey",
        "removeAccountContext",
        "allTokenKeys",
        "accountId",
        "removedCredentials",
        "removeIdToken",
        "removeRefreshToken",
        "updateOutdatedCachedAccount",
        "matchingAccountKeys",
        "accountsToMerge",
        "getCachedAccountEntity",
        "baseAccount",
        "updatedAccount",
        "toObject",
        "newAccountKey",
        "removeOutdatedAccount",
        "removeAppMetadata",
        "readAccountFromCache",
        "targetRealm",
        "performanceClient",
        "idTokenFilter",
        "idTokenMap",
        "getIdTokensByFilter",
        "numIdTokens",
        "tokensToBeRemoved",
        "homeIdTokenMap",
        "numHomeIdTokens",
        "next",
        "addFields",
        "multiMatchedID",
        "idTokenKeys",
        "idTokens",
        "idTokenKeyMatchesFilter",
        "getIdTokenCredential",
        "inputKey",
        "getAccessToken",
        "request",
        "authScheme",
        "authenticationScheme",
        "sshKid",
        "accessTokenKeys",
        "accessTokens",
        "numAccessTokens",
        "multiMatchedAT",
        "keyMustContainAllScopes",
        "getAccessTokensByFilter",
        "getRefreshToken",
        "familyRT",
        "id",
        "refreshTokenFilter",
        "refreshTokenKeys",
        "refreshTokens",
        "refreshTokenKeyMatchesFilter",
        "getRefreshTokenCredential",
        "numRefreshTokens",
        "multiMatchedRT",
        "readAppMetadataFromCache",
        "appMetadataFilter",
        "appMetadataEntries",
        "numAppMetadata",
        "isAppMetadataFOCI",
        "claims",
        "cachedUsername",
        "filterUsername",
        "staticAliases",
        "canonicalAuthority",
        "knownAuthorities",
        "getAliasesFromStaticSources",
        "cloudMetadata",
        "login_hint",
        "generateAuthorityMetadataCacheKey",
        "json",
        "DefaultStorageClass",
        "setServerTelemetry",
        "getServerTelemetry",
        "setAuthorityMetadata",
        "setThrottlingCache",
        "getThrottlingCache",
        "containsKey",
        "updateCredentialCacheKey",
        "DEFAULT_SYSTEM_OPTIONS",
        "tokenRenewalOffsetSeconds",
        "preventCorsPreflight",
        "DEFAULT_LOGGER_IMPLEMENTATION",
        "DEFAULT_CACHE_OPTIONS",
        "claimsBasedCachingEnabled",
        "DEFAULT_NETWORK_IMPLEMENTATION",
        "sendGetRequestAsync",
        "sendPostRequestAsync",
        "DEFAULT_LIBRARY_INFO",
        "sku",
        "version",
        "cpu",
        "os",
        "DEFAULT_CLIENT_CREDENTIALS",
        "clientSecret",
        "clientAssertion",
        "DEFAULT_AZURE_CLOUD_OPTIONS",
        "azureCloudInstance",
        "tenant",
        "DEFAULT_TELEMETRY_OPTIONS",
        "application",
        "appName",
        "appVersion",
        "isOidcProtocolMode",
        "authOptions",
        "ServerError",
        "ThrottlingUtils",
        "generateThrottlingStorageKey",
        "thumbprint",
        "preProcess",
        "cacheManager",
        "throttleTime",
        "errorCodes",
        "postProcess",
        "checkResponseStatus",
        "checkResponseForRetryAfter",
        "thumbprintValue",
        "calculateThrottleTime",
        "headers",
        "body",
        "error_codes",
        "status",
        "time",
        "currentSeconds",
        "removeThrottle",
        "homeAccountIdentifier",
        "resourceRequestMethod",
        "resourceRequestUri",
        "shrClaims",
        "NetworkManager",
        "networkClient",
        "sendPostRequest",
        "tokenEndpoint",
        "CcsCredentialType",
        "CLIENT_ID",
        "RESPONSE_TYPE",
        "TOKEN_TYPE",
        "REQ_CNF",
        "RETURN_SPA_CODE",
        "RequestValidator",
        "validateRedirectUri",
        "validatePrompt",
        "prompt",
        "promptValues",
        "validateClaims",
        "validateCodeChallengeParams",
        "codeChallenge",
        "codeChallengeMethod",
        "validateCodeChallengeMethod",
        "sanitizeEQParams",
        "eQParams",
        "queryParams",
        "_value",
        "entries",
        "kv",
        "RequestParameterBuilder",
        "parameters",
        "addResponseTypeCode",
        "addResponseTypeForTokenAndIdToken",
        "addResponseMode",
        "responseMode",
        "addNativeBroker",
        "addScopes",
        "addOidcScopes",
        "defaultScopes",
        "requestScopes",
        "addClientId",
        "addRedirectUri",
        "addPostLogoutRedirectUri",
        "addIdTokenHint",
        "idTokenHint",
        "addDomainHint",
        "domainHint",
        "addLoginHint",
        "addCcsUpn",
        "addCcsOid",
        "addSid",
        "addClaims",
        "clientCapabilities",
        "mergedClaims",
        "addClientCapabilitiesToClaims",
        "addCorrelationId",
        "addLibraryInfo",
        "libraryInfo",
        "addApplicationTelemetry",
        "appTelemetry",
        "addPrompt",
        "addState",
        "addNonce",
        "addCodeChallengeParams",
        "addAuthorizationCode",
        "addDeviceCode",
        "addRefreshToken",
        "addCodeVerifier",
        "codeVerifier",
        "addClientSecret",
        "addClientAssertion",
        "addClientAssertionType",
        "clientAssertionType",
        "addOboAssertion",
        "oboAssertion",
        "addRequestTokenUse",
        "tokenUse",
        "addGrantType",
        "grantType",
        "addClientInfo",
        "addExtraQueryParameters",
        "sanitizedEQParams",
        "addUsername",
        "addPassword",
        "addPopToken",
        "cnfString",
        "addSshJwk",
        "sshJwkString",
        "addServerTelemetry",
        "serverTelemetryManager",
        "generateCurrentRequestHeaderValue",
        "generateLastRequestHeaderValue",
        "addThrottling",
        "addLogoutHint",
        "logoutHint",
        "createQueryString",
        "queryParameterArray",
        "PerformanceEvents",
        "PerformanceEventStatus",
        "invoke",
        "callback",
        "eventName",
        "telemetryClient",
        "args",
        "inProgressEvent",
        "startMeasurement",
        "end",
        "success",
        "invokeAsync",
        "setPreQueueTime",
        "then",
        "catch",
        "RegionDiscovery",
        "networkInterface",
        "detectRegion",
        "environmentRegion",
        "regionDiscoveryMetadata",
        "addQueueMeasurement",
        "autodetectedRegionName",
        "region_source",
        "IMDS_OPTIONS",
        "localIMDSVersionResponse",
        "getRegionFromIMDS",
        "bind",
        "currentIMDSVersion",
        "getCurrentVersion",
        "currentIMDSVersionResponse",
        "Metadata",
        "Authority",
        "authorityOptions",
        "_canonicalAuthority",
        "region_used",
        "region_outcome",
        "regionDiscovery",
        "getAuthorityType",
        "authorityUri",
        "canonicalAuthorityUrlComponents",
        "_canonicalAuthorityUrlComponents",
        "hostnameAndPort",
        "authorizationEndpoint",
        "discoveryComplete",
        "replacePath",
        "deviceCodeEndpoint",
        "endSessionEndpoint",
        "selfSignedJwtAudience",
        "jwksUri",
        "canReplaceTenant",
        "reservedTenantDomains",
        "replaceTenant",
        "endpoint",
        "cachedAuthorityUrlComponents",
        "canonical_authority",
        "cachedAuthorityParts",
        "currentPart",
        "cachedPart",
        "defaultOpenIdConfigurationEndpoint",
        "canonicalAuthorityHost",
        "isAliasOfKnownMicrosoftAuthority",
        "resolveEndpointsAsync",
        "metadataEntity",
        "getCurrentMetadataEntity",
        "cloudDiscoverySource",
        "endpointSource",
        "updateEndpointMetadata",
        "updateCachedMetadata",
        "endpointMetadataResult",
        "localMetadata",
        "updateEndpointMetadataFromLocalSources",
        "azureRegionConfiguration",
        "azureRegion",
        "updateMetadataWithRegionalInformation",
        "getEndpointMetadataFromNetwork",
        "configMetadata",
        "getEndpointMetadataFromConfig",
        "skipAuthorityMetadataCache",
        "hardcodedMetadata",
        "getEndpointMetadataFromHardcodedValues",
        "metadataEntityExpired",
        "isAuthoritySameType",
        "openIdConfigurationEndpoint",
        "isValidResponse",
        "isOpenIdConfigResponse",
        "userConfiguredAzureRegion",
        "replaceWithRegionalInformation",
        "localMetadataSource",
        "updateCloudDiscoveryMetadataFromLocalSources",
        "getCloudDiscoveryMetadataFromNetwork",
        "getCloudDiscoveryMetadataFromConfig",
        "createCloudDiscoveryMetadataFromHost",
        "isInKnownAuthorities",
        "instanceDiscoveryEndpoint",
        "typedResponseBody",
        "isCloudInstanceDiscoveryResponse",
        "isCloudInstanceDiscoveryErrorResponse",
        "typedError",
        "generateAuthority",
        "authorityString",
        "azureCloudOptions",
        "authorityAzureCloudInstance",
        "isAlias",
        "isPublicCloudAuthority",
        "buildRegionalAuthorityString",
        "region",
        "authorityUrlInstance",
        "authorityUrlParts",
        "hostNameAndPort",
        "regionalMetadata",
        "transformCIAMAuthority",
        "ciamAuthority",
        "authorityUrlComponents",
        "formatAuthorityUri",
        "AuthorityFactory",
        "createDiscoveredInstance",
        "authorityUriFinal",
        "acquireTokenAuthority",
        "createInstance",
        "authorityUrl",
        "BaseClient",
        "configuration",
        "userAuthOptions",
        "systemOptions",
        "userSystemOptions",
        "userLoggerOption",
        "cacheOptions",
        "userCacheOptions",
        "storageInterface",
        "storageImplementation",
        "networkImplementation",
        "cryptoInterface",
        "cryptoImplementation",
        "clientCredentials",
        "telemetry",
        "persistencePlugin",
        "serializableCache",
        "buildClientConfiguration",
        "cryptoUtils",
        "networkManager",
        "createTokenRequestHeaders",
        "ccsCred",
        "type",
        "executePostToTokenEndpoint",
        "queuedEvent",
        "refreshTokenSize",
        "refresh_token",
        "httpVerToken",
        "clearTelemetryCache",
        "updateAuthority",
        "cloudInstanceHostname",
        "cloudInstanceAuthorityUri",
        "cloudInstanceAuthority",
        "createTokenQueryParameters",
        "parameterBuilder",
        "tokenQueryParameters",
        "noTokensFound",
        "nativeAccountUnavailable",
        "refreshTokenExpired",
        "badToken",
        "InteractionRequiredServerErrorMessage",
        "InteractionRequiredAuthSubErrorMessage",
        "InteractionRequiredAuthErrorMessages",
        "InteractionRequiredAuthError",
        "timestamp",
        "traceId",
        "isInteractionRequiredError",
        "errorString",
        "isInteractionRequiredErrorCode",
        "isInteractionRequiredSubError",
        "isInteractionRequiredErrorDesc",
        "irErrorCode",
        "createInteractionRequiredAuthError",
        "CacheRecord",
        "idTokenEntity",
        "accessTokenEntity",
        "refreshTokenEntity",
        "appMetadataEntity",
        "ProtocolUtils",
        "setRequestState",
        "userState",
        "meta",
        "libraryState",
        "generateLibraryState",
        "stateObj",
        "stateString",
        "parseRequestState",
        "splitState",
        "libraryStateString",
        "libraryStateObj",
        "userRequestState",
        "KeyLocation",
        "PopTokenGenerator",
        "generateCnf",
        "reqCnf",
        "generateKid",
        "reqCnfString",
        "reqCnfHash",
        "xms_ksl",
        "signPopToken",
        "signPayload",
        "payload",
        "shrNonce",
        "shrOptions",
        "resourceUrlString",
        "resourceUrlComponents",
        "at",
        "ts",
        "m",
        "toUpperCase",
        "p",
        "q",
        "client_claims",
        "TokenCacheContext",
        "tokenCache",
        "hasChanged",
        "cache",
        "cacheHasChanged",
        "ResponseHandler",
        "cacheStorage",
        "validateServerAuthorizationCodeResponse",
        "serverResponse",
        "requestState",
        "decodedServerResponseState",
        "decodedRequestState",
        "trace_id",
        "correlation_id",
        "validateTokenResponse",
        "refreshAccessToken",
        "errString",
        "serverError",
        "handleServerTokenResponse",
        "serverTokenResponse",
        "reqTimestamp",
        "authCodePayload",
        "handlingRefreshTokenResponse",
        "forceCacheRefreshTokenResponse",
        "serverRequestId",
        "requestStateObj",
        "id_token",
        "auth_time",
        "client_info",
        "key_id",
        "generateCacheRecord",
        "cacheContext",
        "beforeCacheAccess",
        "generateAuthenticationResult",
        "afterCacheAccess",
        "claimsTenantId",
        "cachedIdToken",
        "cachedAccount",
        "buildAccountToCache",
        "cachedAccessToken",
        "access_token",
        "responseScopes",
        "expiresIn",
        "expires_in",
        "extExpiresIn",
        "ext_expires_in",
        "refreshIn",
        "refresh_in",
        "tokenExpirationSeconds",
        "extendedTokenExpirationSeconds",
        "refreshOnSeconds",
        "token_type",
        "cachedRefreshToken",
        "rtExpiresOn",
        "refresh_token_expires_in",
        "foci",
        "cachedAppMetadata",
        "fromTokenCache",
        "requestId",
        "popTokenGenerator",
        "spa_accountid",
        "uniqueId",
        "fromCache",
        "spa_code",
        "fromNativeBroker",
        "baseAccountKey",
        "newTenantProfile",
        "AuthorizationCodeClient",
        "includeRedirectUri",
        "oidcDefaultScopes",
        "OIDCOptions",
        "getAuthCodeUrl",
        "createAuthCodeUrlQueryString",
        "acquireToken",
        "executeTokenRequest",
        "responseHandler",
        "handleFragmentResponse",
        "serverParams",
        "cachedState",
        "getLogoutUri",
        "logoutRequest",
        "createLogoutUrlQueryString",
        "queryParametersString",
        "requestBody",
        "createTokenRequestBody",
        "ccsCredential",
        "tokenBodyParameters",
        "assertion",
        "assertionType",
        "reqCnfData",
        "sshJwk",
        "enableSpaAuthorizationCode",
        "extraQueryParameters",
        "extraScopesToConsent",
        "accountSid",
        "extractAccountSid",
        "accountLoginHintClaim",
        "extractLoginHint",
        "nativeBroker",
        "postLogoutRedirectUri",
        "RefreshTokenClient",
        "forceCache",
        "acquireTokenByRefreshToken",
        "acquireTokenWithCachedRefreshToken",
        "noFamilyRTInCache",
        "clientMismatchErrorWithFamilyRT",
        "refreshTokenExpirationOffsetSeconds",
        "refreshTokenRequest",
        "badRefreshTokenKey",
        "SilentFlowClient",
        "authResponse",
        "cacheOutcome",
        "acquireCachedToken",
        "lastCacheOutcome",
        "forceRefresh",
        "setCacheOutcome",
        "requestTenantId",
        "getTenantFromAuthorityString",
        "incrementCacheHits",
        "generateResultFromCacheRecord",
        "StubbedNetworkModule",
        "reject",
        "missingKidError",
        "missingAlgError",
        "JoseHeaderErrorMessages",
        "JoseHeaderError",
        "createJoseHeaderError",
        "JoseHeader",
        "typ",
        "alg",
        "getShrHeaderString",
        "shrHeaderOptions",
        "shrHeader",
        "ServerTelemetryManager",
        "telemetryRequest",
        "apiId",
        "wrapperSKU",
        "wrapperVer",
        "telemetryCacheKey",
        "platformFields",
        "requestWithRegionDiscoveryFields",
        "getRegionDiscoveryFields",
        "lastRequests",
        "getLastRequests",
        "maxErrors",
        "maxErrorsToSend",
        "failedRequests",
        "errors",
        "errorCount",
        "cacheHits",
        "cacheFailedRequest",
        "shift",
        "numErrorsFlushed",
        "serverTelemEntity",
        "serverTelemetryEntity",
        "dataSize",
        "regionDiscoveryFields",
        "regionUsed",
        "regionSource",
        "regionOutcome",
        "updateRegionDiscoveryMetadata",
        "StubPerformanceMeasurement",
        "endMeasurement",
        "flushMeasurement",
        "StubPerformanceClient",
        "generateId",
        "measureName",
        "discard",
        "increment",
        "event",
        "eventId",
        "libraryName",
        "libraryVersion",
        "startTimeMs",
        "measurement",
        "startPerformanceMeasurement",
        "calculateQueuedTime",
        "discardMeasurements",
        "removePerformanceCallback",
        "addPerformanceCallback",
        "emitEvents",
        "incrementFields",
        "cacheEventByCorrelationId",
        "pkceNotCreated",
        "cryptoNonExistent",
        "emptyNavigateUri",
        "hashEmptyError",
        "noStateInHash",
        "hashDoesNotContainKnownProperties",
        "unableToParseState",
        "stateInteractionTypeMismatch",
        "interactionInProgress",
        "popupWindowError",
        "emptyWindowError",
        "userCancelled",
        "monitorPopupTimeout",
        "monitorWindowTimeout",
        "redirectInIframe",
        "blockIframeReload",
        "blockNestedPopups",
        "iframeClosedPrematurely",
        "silentLogoutUnsupported",
        "noAccountError",
        "silentPromptValueError",
        "noTokenRequestCacheError",
        "unableToParseTokenRequestCacheError",
        "noCachedAuthorityError",
        "authRequestNotSetError",
        "invalidCacheType",
        "nonBrowserEnvironment",
        "databaseNotOpen",
        "noNetworkConnectivity",
        "postRequestFailed",
        "getRequestFailed",
        "failedToParseResponse",
        "unableToLoadToken",
        "cryptoKeyNotFound",
        "authCodeRequired",
        "authCodeOrNativeAccountIdRequired",
        "spaCodeAndNativeAccountIdPresent",
        "databaseUnavailable",
        "unableToAcquireTokenFromNativePlatform",
        "nativeHandshakeTimeout",
        "nativeExtensionNotInstalled",
        "nativeConnectionNotEstablished",
        "uninitializedPublicClientApplication",
        "nativePromptNotSupported",
        "invalidBase64String",
        "ErrorLink",
        "BrowserAuthErrorMessages",
        "BrowserAuthError",
        "createBrowserAuthError",
        "BrowserConstants",
        "NativeConstants",
        "NativeExtensionMethod",
        "BrowserCacheLocation",
        "HTTP_REQUEST_TYPE",
        "TemporaryCacheKeys",
        "StaticCacheKeys",
        "InMemoryCacheKeys",
        "ApiId",
        "InteractionType",
        "InteractionStatus",
        "DEFAULT_REQUEST",
        "DB_NAME",
        "DB_TABLE_NAME",
        "CacheLookupPolicy",
        "iFrameRenewalPolicies",
        "isInIframe",
        "parent",
        "getCurrentUri",
        "location",
        "href",
        "blockReloadInHiddenIframes",
        "blockAcquireTokenInPopups",
        "opener",
        "blockAPICallsBeforeInitialize",
        "initialized",
        "preconnect",
        "link",
        "document",
        "createElement",
        "rel",
        "URL",
        "origin",
        "crossOrigin",
        "head",
        "appendChild",
        "removeChild",
        "NavigationClient",
        "navigateInternal",
        "defaultNavigateWindow",
        "navigateExternal",
        "noHistory",
        "timeout",
        "FetchClient",
        "fetch",
        "method",
        "getFetchHeaders",
        "navigator",
        "onLine",
        "getHeaderDict",
        "reqBody",
        "Headers",
        "optionsHeaders",
        "append",
        "headerDict",
        "DEFAULT_IFRAME_TIMEOUT_MS",
        "version$3",
        "BaseOperatingContext",
        "debug",
        "sessionStorage",
        "browserEnvironment",
        "auth",
        "userInputAuth",
        "userInputCache",
        "system",
        "userInputSystem",
        "userInputTelemetry",
        "isBrowserEnvironment",
        "DEFAULT_AUTH_OPTIONS",
        "navigateToLoginRequestUrl",
        "serverResponseType",
        "supportsNestedAppAuth",
        "cacheLocation",
        "temporaryCacheLocation",
        "storeAuthStateInCookie",
        "secureCookies",
        "cacheMigrationEnabled",
        "DEFAULT_LOGGER_OPTIONS",
        "providedSystemOptions",
        "navigationClient",
        "loadFrameTimeout",
        "windowHashTimeout",
        "iframeHashTimeout",
        "navigateFrameWait",
        "redirectNavigationTimeout",
        "asyncPopups",
        "allowRedirectInIframe",
        "allowNativeBroker",
        "nativeBrokerHandshakeTimeout",
        "pollIntervalMilliseconds",
        "client",
        "buildConfiguration",
        "logLevelKey",
        "piiLoggingKey",
        "available",
        "getConfig",
        "getLogger",
        "isAvailable",
        "StandardOperatingContext",
        "getModuleName",
        "MODULE_NAME",
        "getId",
        "ID",
        "initialize",
        "urlEncode",
        "urlEncodeArr",
        "inputArr",
        "base64EncArr",
        "TextEncoder",
        "aBytes",
        "binString",
        "fromCodePoint",
        "btoa",
        "TextDecoder",
        "base64String",
        "encodedString",
        "atob",
        "codePointAt",
        "base64DecToArr",
        "S256_HASH_ALG",
        "PUBLIC_EXPONENT",
        "keygenAlgorithmOptions",
        "modulusLength",
        "publicExponent",
        "async",
        "sha256Digest",
        "dataString",
        "subtle",
        "digest",
        "getRandomValues$1",
        "dataBuffer",
        "randomUUID",
        "exportJwk",
        "exportKey",
        "DatabaseStorage",
        "dbName",
        "tableName",
        "dbOpen",
        "open",
        "openDB",
        "indexedDB",
        "addEventListener",
        "createObjectStore",
        "db",
        "closeConnection",
        "close",
        "validateDbIsOpen",
        "dbGet",
        "transaction",
        "objectStore",
        "dbPut",
        "put",
        "dbDelete",
        "dbGetKeys",
        "dbContainsKey",
        "count",
        "deleteDatabase",
        "deleteDbRequest",
        "MemoryStorage",
        "cacheKeys",
        "AsyncMemoryStorage",
        "storeName",
        "inMemoryCache",
        "indexedDBCache",
        "handleDatabaseAccessError",
        "clearInMemory",
        "clearPersistent",
        "dbDeleted",
        "CryptoKeyStoreNames",
        "CryptoKeyStore",
        "asymmetricKeys",
        "symmetricKeys",
        "CryptoOps",
        "validateCryptoAvailable",
        "publicKeyThumbMeasurement",
        "keyPair",
        "extractable",
        "usages",
        "generateKey",
        "generateKeyPair",
        "EXTRACTABLE",
        "POP_KEY_USAGES",
        "publicKeyJwk",
        "publicKey",
        "publicJwkString",
        "getSortedObjectString",
        "kty",
        "publicJwkHash",
        "privateKeyJwk",
        "privateKey",
        "unextractablePrivateKey",
        "importKey",
        "importJwk",
        "requestMethod",
        "requestUri",
        "signJwtMeasurement",
        "cachedKeyPair",
        "publicKeyJwkString",
        "encodedKeyIdThumbprint",
        "encodedShrHeader",
        "header",
        "jwk",
        "tokenString",
        "tokenBuffer",
        "signatureBuffer",
        "sign",
        "signedJwt",
        "plainText",
        "hashBuffer",
        "storageNotSupported",
        "stubbedPublicClientApplicationCalled",
        "inMemRedirectUnavailable",
        "BrowserConfigurationAuthErrorMessages",
        "BrowserConfigurationAuthError",
        "createBrowserConfigurationAuthError",
        "BrowserStorage",
        "validateWindowStorage",
        "windowStorage",
        "extractBrowserRequestState",
        "browserCrypto",
        "BrowserCacheManager",
        "cacheConfig",
        "COOKIE_LIFE_MULTIPLIER",
        "internalStorage",
        "browserStorage",
        "setupBrowserStorage",
        "temporaryCacheStorage",
        "setupTemporaryCacheStorage",
        "migrateCacheEntries",
        "createKeyMaps",
        "idTokenKey",
        "clientInfoKey",
        "errorKey",
        "errorDescKey",
        "migrateCacheEntry",
        "newKey",
        "setTemporaryCache",
        "accountKeys",
        "credObj",
        "validateAndParseJson",
        "addTokenKey",
        "accountObj",
        "addAccountKeyToMap",
        "jsonValue",
        "parsedJson",
        "serializedAccount",
        "removeAccountKeyFromMap",
        "parsedAccount",
        "removalIndex",
        "removeTokenKey",
        "idRemoval",
        "accessRemoval",
        "refreshRemoval",
        "parsedIdToken",
        "accessTokenKey",
        "parsedAccessToken",
        "refreshTokenKey",
        "parsedRefreshToken",
        "appMetadataKey",
        "parsedMetadata",
        "generateAppMetadataKey",
        "serverTelemetryKey",
        "parsedEntity",
        "validateKey",
        "validateEntity",
        "isServerTelemetryEntity",
        "serverTelemetry",
        "isAuthorityMetadataEntity",
        "setWrapperMetadata",
        "wrapperVersion",
        "getWrapperMetadata",
        "getActiveAccount",
        "activeAccountKeyFilters",
        "generateCacheKey",
        "activeAccountValueFilters",
        "activeAccountKeyLocal",
        "activeAccountValueLocal",
        "activeAccount",
        "setActiveAccount",
        "activeAccountValueObj",
        "activeAccountKey",
        "activeAccountValue",
        "throttlingCacheKey",
        "parsedThrottlingCache",
        "isThrottlingEntity",
        "throttlingCache",
        "getTemporaryCache",
        "itemCookie",
        "getItemCookie",
        "setItemCookie",
        "clearItemCookie",
        "clearTokensAndKeysWithClaims",
        "cookieName",
        "cookieValue",
        "expires",
        "cookieStr",
        "getCookieExpirationTime",
        "cookie",
        "cookieList",
        "clearMsalCookies",
        "cookiePrefix",
        "cookieKey",
        "cookieLifeDays",
        "today",
        "getCache",
        "setCache",
        "generateAuthorityKey",
        "stateId",
        "generateNonceKey",
        "generateStateKey",
        "getCachedAuthority",
        "stateCacheKey",
        "authorityCacheKey",
        "updateCacheEntries",
        "authorityInstance",
        "nonceCacheKey",
        "resetRequestCache",
        "setInteractionInProgress",
        "cleanRequestByState",
        "stateKey",
        "cleanRequestByInteractionType",
        "interactionType",
        "stateValue",
        "parsedState",
        "cacheCodeRequest",
        "authCodeRequest",
        "encodedValue",
        "getCachedRequest",
        "encodedTokenRequest",
        "parsedRequest",
        "cachedAuthority",
        "getCachedNativeRequest",
        "cachedRequest",
        "isInteractionInProgress",
        "getInteractionInProgress",
        "inProgress",
        "getLegacyLoginHint",
        "adalIdTokenString",
        "msalIdTokenString",
        "cachedIdTokenString",
        "currentCacheKey",
        "updatedCacheKey",
        "cacheItem",
        "getRedirectRequestContext",
        "setRedirectRequestContext",
        "hydrateCache",
        "claimsHash",
        "EventType",
        "EventHandler",
        "eventCallbacks",
        "listeningToStorageEvents",
        "handleAccountCacheChange",
        "addEventCallback",
        "callbackId",
        "removeEventCallback",
        "enableAccountStorageEvents",
        "disableAccountStorageEvents",
        "removeEventListener",
        "emitEvent",
        "eventType",
        "cacheValue",
        "newValue",
        "oldValue",
        "parsedValue",
        "BaseInteractionClient",
        "storageImpl",
        "eventHandler",
        "nativeMessageHandler",
        "clearCacheOnLogout",
        "initializeBaseRequest",
        "validateRequestAuthority",
        "validatedRequest",
        "getRedirectUri",
        "requestRedirectUri",
        "getDiscoveredAuthority",
        "initializeServerTelemetryManager",
        "telemetryPayload",
        "requestAuthority",
        "generatePkceCodes",
        "generateCodeVerifier",
        "verifier",
        "challenge",
        "generateCodeChallengeFromVerifier",
        "buffer",
        "pkceCodeVerifier",
        "pkceHashedCodeVerifier",
        "StandardInteractionClient",
        "initializeAuthorizationCodeRequest",
        "generatedPkceParams",
        "initializeLogoutRequest",
        "validLogoutRequest",
        "getLogoutHintFromIdTokenClaims",
        "createAuthCodeClient",
        "requestAzureCloudOptions",
        "clientConfig",
        "getClientConfiguration",
        "discoveredAuthority",
        "userAuthority",
        "builtAuthority",
        "initializeAuthorizationRequest",
        "browserState",
        "legacyLoginHint",
        "userSwitch",
        "NativeAuthErrorMessages",
        "NativeAuthError",
        "description",
        "ext",
        "isFatalNativeAuthError",
        "createNativeAuthError",
        "SilentCacheClient",
        "silentRequest",
        "silentAuthClient",
        "createSilentFlowClient",
        "logout",
        "initializeSilentRequest",
        "baseRequest",
        "BrokerServerParamKeys",
        "NativeInteractionClient",
        "provider",
        "nativeStorageImpl",
        "nativeStorageManager",
        "silentCacheClient",
        "nativeATMeasurement",
        "nativeRequest",
        "initializeNativeRequest",
        "acquireTokensFromCache",
        "isNativeBroker",
        "messageBody",
        "sendMessage",
        "validatedResponse",
        "validateNativeResponse",
        "handleNativeResponse",
        "subErrorCode",
        "createSilentCacheRequest",
        "fullAccount",
        "acquireTokenRedirect",
        "navigationOptions",
        "handleRedirectPromise",
        "createHomeAccountIdentifier",
        "cacheAccount",
        "cacheNativeTokens",
        "generateScopes",
        "generatePopAccessToken",
        "shr",
        "shrParameters",
        "mats",
        "addTelemetryFromNativeResponse",
        "accountProperties",
        "responseAccessToken",
        "isResponseFromCache",
        "nativeCacheRecord",
        "getMATSFromResponse",
        "extensionId",
        "getExtensionId",
        "extensionVersion",
        "getExtensionVersion",
        "matsBrokerVersion",
        "broker_version",
        "matsAccountJoinOnStart",
        "account_join_on_start",
        "matsAccountJoinOnEnd",
        "account_join_on_end",
        "matsDeviceJoin",
        "device_join",
        "matsPromptBehavior",
        "prompt_behavior",
        "matsApiErrorCode",
        "api_error_code",
        "matsUiVisible",
        "ui_visible",
        "matsSilentCode",
        "silent_code",
        "matsSilentBiSubCode",
        "silent_bi_sub_code",
        "matsSilentMessage",
        "silent_message",
        "matsSilentStatus",
        "silent_status",
        "matsHttpStatus",
        "http_status",
        "matsHttpEventCount",
        "http_event_count",
        "MATS",
        "is_cached",
        "remainingProperties",
        "getPrompt",
        "windowTitleSubstring",
        "title",
        "extraParameters",
        "extendedExpiryToken",
        "handleExtraBrokerParams",
        "child_client_id",
        "child_redirect_uri",
        "brk_redirect_uri",
        "NativeMessageHandler",
        "handshakeTimeoutMs",
        "resolvers",
        "handshakeResolvers",
        "messageChannel",
        "MessageChannel",
        "windowListener",
        "onWindowMessage",
        "handshakeEvent",
        "req",
        "channel",
        "responseId",
        "port1",
        "postMessage",
        "createProvider",
        "preferredProvider",
        "sendHandshakeRequest",
        "backupProvider",
        "extensionHandshakeTimeoutMs",
        "onmessage",
        "onChannelMessage",
        "port2",
        "timeoutId",
        "extensionHandshakeTimedOut",
        "handshakeResolver",
        "clearTimeout",
        "extensionInstalled",
        "resolver",
        "isNativeAvailable",
        "nativeExtensionProvider",
        "InteractionHandler",
        "authCodeModule",
        "authModule",
        "handleCodeResponse",
        "authCodeResponse",
        "handleCodeResponseFromServer",
        "validateNonce",
        "cloud_instance_host_name",
        "createCcsCredentials",
        "deserializeResponse",
        "responseLocation",
        "PopupClient",
        "unloadWindow",
        "nativeStorage",
        "popupName",
        "generatePopupName",
        "popupWindowAttributes",
        "acquireTokenPopupAsync",
        "popup",
        "openSizedPopup",
        "generateLogoutPopupName",
        "mainWindowRedirectUri",
        "logoutPopupAsync",
        "validRequest",
        "Popup",
        "authClient",
        "fetchNativeAccountIdMeasurement",
        "navigateUrl",
        "interactionHandler",
        "popupParameters",
        "popupWindow",
        "initiateAuthRequest",
        "monitorPopupForHash",
        "nativeInteractionClient",
        "absoluteUrl",
        "logoutUri",
        "openPopup",
        "requestUrl",
        "intervalId",
        "setInterval",
        "closed",
        "clearInterval",
        "responseType",
        "finally",
        "cleanPopup",
        "urlNavigate",
        "popupParams",
        "focus",
        "currentWindow",
        "winLeft",
        "screenLeft",
        "screenX",
        "winTop",
        "screenTop",
        "screenY",
        "winWidth",
        "innerWidth",
        "documentElement",
        "clientWidth",
        "winHeight",
        "innerHeight",
        "clientHeight",
        "width",
        "popupSize",
        "height",
        "top",
        "popupPosition",
        "left",
        "preventDefault",
        "RedirectHandler",
        "redirectStartPage",
        "redirectTimeout",
        "onRedirectNavigate",
        "nonceKey",
        "cachedNonce",
        "cachedCcsCred",
        "checkCcsCredentials",
        "tokenResponse",
        "RedirectClient",
        "Redirect",
        "handleBackButton",
        "persisted",
        "getRedirectStartPage",
        "getRedirectResponse",
        "loginRequestUrl",
        "loginRequestUrlNormalized",
        "urlParts",
        "replaceHash",
        "handleResponse",
        "processHashOnRedirect",
        "homepage",
        "getHomepage",
        "userProvidedResponse",
        "platformStateObj",
        "validateInteractionType",
        "contentWindow",
        "history",
        "replaceState",
        "pathname",
        "cachedHash",
        "currentAuthority",
        "requestStartPage",
        "loadFrame",
        "loadFrameSync",
        "monitorIframeForHash",
        "iframe",
        "removeHiddenIframe",
        "frameHandle",
        "createHiddenIframe",
        "src",
        "authFrame",
        "style",
        "visibility",
        "border",
        "setAttribute",
        "parentNode",
        "SilentIframeClient",
        "Silent",
        "silentTokenHelper",
        "msalFrame",
        "SilentRefreshClient",
        "refreshTokenClient",
        "createRefreshTokenClient",
        "TokenCache",
        "loadExternalTokens",
        "cacheRecordAccount",
        "loadIdToken",
        "loadAccessToken",
        "loadRefreshToken",
        "loadAccount",
        "requestHomeAccountId",
        "HybridSpaAuthorizationCodeClient",
        "SilentAuthCodeClient",
        "cloudInstanceHostName",
        "StandardController",
        "operatingContext",
        "atsAsyncMeasurement",
        "redirectResponse",
        "hybridAuthCodeResponses",
        "rawCloudDiscoveryMetadata",
        "buildStaticAuthorityOptions",
        "DEFAULT_BROWSER_CACHE_MANAGER",
        "nativeCacheOptions",
        "nativeInternalStorage",
        "activeSilentTokenRequests",
        "trackPageVisibility",
        "trackPageVisibilityWithMeasurement",
        "createController",
        "controller",
        "visibilityChangeCount",
        "initMeasurement",
        "loggedInAccounts",
        "redirectResponseKey",
        "createRedirectClient",
        "getRequestCorrelationId",
        "preflightBrowserEnvironmentCheck",
        "isLoggedIn",
        "canUseNative",
        "getNativeAccountId",
        "getBrowserStorage",
        "acquireTokenPopup",
        "atPopupMeasurement",
        "acquireTokenNative",
        "createPopupClient",
        "accessTokenSize",
        "idTokenSize",
        "ssoSilentMeasurement",
        "acquireTokenByCodeAsyncMeasurement",
        "ssoSilent",
        "createSilentIframeClient",
        "acquireTokenByCode",
        "atbcMeasurement",
        "hybridAuthCode",
        "acquireTokenByCodeAsync",
        "silentAuthCodeClient",
        "createSilentAuthCodeClient",
        "tokenRenewalError",
        "acquireTokenFromCache",
        "commonRequest",
        "cacheLookupPolicy",
        "silentRefreshClient",
        "createSilentRefreshClient",
        "acquireTokenBySilentIframe",
        "silentIframeClient",
        "logoutRedirect",
        "logoutPopup",
        "clearCache",
        "createSilentCacheClient",
        "getAccountByUsername",
        "getAccountByHomeId",
        "getAccountByLocalId",
        "isAppEmbedded",
        "blockNonBrowserEnvironment",
        "isIframedApp",
        "blockRedirectInIframe",
        "preflightInteractiveRequest",
        "getTokenCache",
        "setLogger",
        "initializeWrapperLibrary",
        "setNavigationClient",
        "getConfiguration",
        "getPerformanceClient",
        "isBrowserEnv",
        "getEventHandler",
        "loginRedirect",
        "loginPopup",
        "acquireTokenSilent",
        "atsMeasurement",
        "silentRequestKey",
        "cachedResponse",
        "acquireTokenSilentAsync",
        "cacheError",
        "refreshTokenError",
        "shouldTryToResolveSilently",
        "noInteractionRequired",
        "refreshTokenRefreshRequired",
        "isSilentlyResolvable",
        "tryIframeRenewal",
        "checkIfRefreshTokenErrorCanBeResolvedSilently",
        "StandardController$1",
        "freeze",
        "__proto__",
        "PublicClientApplication",
        "createPublicClientApplication",
        "standard",
        "createV3Controller",
        "standardOperatingContext",
        "localId",
        "userName",
        "stubbedPublicClientApplication",
        "fn",
        "thisArg",
        "getPrototypeOf",
        "kindOf",
        "thing",
        "kindOfTest",
        "typeOfTest",
        "isArray",
        "isArray$2",
        "isUndefined$1",
        "isArrayBuffer$1",
        "isString$1",
        "isFunction",
        "isNumber$1",
        "isObject",
        "isPlainObject$2",
        "iterator",
        "isDate$2",
        "isFile",
        "isBlob",
        "isFileList",
        "isURLSearchParams",
        "isReadableStream",
        "isRequest",
        "isResponse",
        "isHeaders",
        "forEach$1",
        "allOwnKeys",
        "l",
        "getOwnPropertyNames",
        "len",
        "findKey$1",
        "_global",
        "isContextDefined",
        "context",
        "isTypedArray$1",
        "TypedArray",
        "isHTMLForm",
        "isRegExp$1",
        "reduceDescriptors",
        "reducer",
        "descriptors",
        "getOwnPropertyDescriptors",
        "reducedDescriptors",
        "descriptor",
        "ret",
        "defineProperties",
        "ALPHA",
        "DIGIT",
        "ALPHABET",
        "ALPHA_DIGIT",
        "isAsyncFn",
        "_setImmediate",
        "setImmediateSupported",
        "setImmediate",
        "postMessageSupported",
        "token",
        "callbacks",
        "cb",
        "asap",
        "queueMicrotask",
        "nextTick",
        "utils$1",
        "isArrayBuffer",
        "isBuffer",
        "isFormData",
        "kind",
        "FormData",
        "isArrayBufferView",
        "ArrayBuffer",
        "isView",
        "isString",
        "isNumber",
        "isBoolean",
        "isPlainObject",
        "isUndefined",
        "isDate",
        "isRegExp",
        "isStream",
        "pipe",
        "isTypedArray",
        "merge",
        "caseless",
        "assignValue",
        "targetKey",
        "stripBOM",
        "content",
        "inherits",
        "superConstructor",
        "props",
        "toFlatObject",
        "sourceObj",
        "destObj",
        "propFilter",
        "merged",
        "searchString",
        "lastIndex",
        "toArray",
        "forEachEntry",
        "done",
        "matchAll",
        "regExp",
        "hasOwnProp",
        "freezeMethods",
        "writable",
        "toObjectSet",
        "arrayOrString",
        "delimiter",
        "define",
        "toCamelCase",
        "p1",
        "p2",
        "noop",
        "noop$1",
        "toFiniteNumber",
        "defaultValue",
        "isFinite",
        "findKey",
        "generateString",
        "isSpecCompliantForm",
        "toJSONObject",
        "stack",
        "visit",
        "reducedValue",
        "isThenable",
        "AxiosError",
        "captureStackTrace",
        "toJSON",
        "number",
        "fileName",
        "lineNumber",
        "columnNumber",
        "prototype$1",
        "customProps",
        "axiosError",
        "cause",
        "isVisitable",
        "removeBrackets",
        "renderKey",
        "path",
        "dots",
        "predicates",
        "toFormData",
        "formData",
        "TypeError",
        "metaTokens",
        "indexes",
        "option",
        "visitor",
        "defaultVisitor",
        "useBlob",
        "Blob",
        "convertValue",
        "toISOString",
        "Buffer",
        "isFlatArray",
        "el",
        "exposedHelpers",
        "build",
        "pop",
        "encode$1",
        "charMap",
        "AxiosURLSearchParams",
        "_pairs",
        "buildURL",
        "_encode",
        "serializeFn",
        "serialize",
        "serializedParams",
        "hashmarkIndex",
        "InterceptorManager",
        "handlers",
        "use",
        "fulfilled",
        "rejected",
        "synchronous",
        "runWhen",
        "eject",
        "transitionalDefaults",
        "silentJSONParsing",
        "forcedJSONParsing",
        "clarifyTimeoutError",
        "platform$1",
        "isBrowser",
        "classes",
        "protocols",
        "hasBrowserEnv",
        "_navigator",
        "hasStandardBrowserEnv",
        "product",
        "hasStandardBrowserWebWorkerEnv",
        "WorkerGlobalScope",
        "importScripts",
        "platform",
        "formDataToJSON",
        "buildPath",
        "isNumericKey",
        "isLast",
        "arrayToObject",
        "parsePropPath",
        "defaults",
        "transitional",
        "adapter",
        "transformRequest",
        "contentType",
        "getContentType",
        "hasJSONContentType",
        "isObjectPayload",
        "setContentType",
        "helpers",
        "isNode",
        "toURLEncodedForm",
        "formSerializer",
        "_FormData",
        "rawValue",
        "parser",
        "stringifySafely",
        "transformResponse",
        "JSONRequested",
        "strictJSONParsing",
        "ERR_BAD_RESPONSE",
        "xsrfCookieName",
        "xsrfHeaderName",
        "maxContentLength",
        "maxBodyLength",
        "validateStatus",
        "common",
        "ignoreDuplicateOf",
        "$internals",
        "normalizeHeader",
        "normalizeValue",
        "matchHeaderValue",
        "isHeaderNameFilter",
        "AxiosHeaders",
        "valueOrRewrite",
        "rewrite",
        "setHeader",
        "_header",
        "_rewrite",
        "lHeader",
        "setHeaders",
        "rawHeaders",
        "parsed",
        "line",
        "parseHeaders",
        "tokens",
        "tokensRE",
        "parseTokens",
        "matcher",
        "deleted",
        "deleteHeader",
        "normalize",
        "normalized",
        "char",
        "formatHeader",
        "targets",
        "asStrings",
        "first",
        "computed",
        "accessor",
        "accessors",
        "defineAccessor",
        "accessorName",
        "methodName",
        "arg1",
        "arg2",
        "arg3",
        "configurable",
        "buildAccessors",
        "transformData",
        "fns",
        "isCancel",
        "__CANCEL__",
        "CanceledError",
        "ERR_CANCELED",
        "settle",
        "ERR_BAD_REQUEST",
        "mapped",
        "headerValue",
        "progressEventReducer",
        "listener",
        "isDownloadStream",
        "freq",
        "bytesNotified",
        "_speedometer",
        "samplesCount",
        "timestamps",
        "firstSampleTS",
        "tail",
        "chunkLength",
        "startedAt",
        "bytesCount",
        "passed",
        "speedometer",
        "lastArgs",
        "timer",
        "threshold",
        "throttled",
        "flush",
        "throttle",
        "loaded",
        "total",
        "lengthComputable",
        "progressBytes",
        "rate",
        "progress",
        "estimated",
        "progressEventDecorator",
        "asyncDecorator",
        "isURLSameOrigin",
        "msie",
        "userAgent",
        "urlParsingNode",
        "originURL",
        "resolveURL",
        "protocol",
        "hostname",
        "port",
        "requestURL",
        "cookies",
        "write",
        "domain",
        "toGMTString",
        "read",
        "buildFullPath",
        "baseURL",
        "requestedURL",
        "relativeURL",
        "combineURLs",
        "headersToObject",
        "mergeConfig",
        "config1",
        "config2",
        "getMergedValue",
        "mergeDeepProperties",
        "valueFromConfig2",
        "defaultToConfig2",
        "mergeDirectKeys",
        "mergeMap",
        "paramsSerializer",
        "timeoutMessage",
        "withCredentials",
        "withXSRFToken",
        "onUploadProgress",
        "onDownloadProgress",
        "beforeRedirect",
        "transport",
        "httpAgent",
        "httpsAgent",
        "cancelToken",
        "socketPath",
        "responseEncoding",
        "configValue",
        "resolveConfig",
        "newConfig",
        "Boolean",
        "xsrfValue",
        "xhrAdapter",
        "XMLHttpRequest",
        "_config",
        "requestData",
        "requestHeaders",
        "onCanceled",
        "uploadThrottled",
        "downloadThrottled",
        "flushUpload",
        "flushDownload",
        "unsubscribe",
        "signal",
        "onloadend",
        "responseHeaders",
        "getAllResponseHeaders",
        "responseText",
        "statusText",
        "onreadystatechange",
        "readyState",
        "responseURL",
        "onabort",
        "ECONNABORTED",
        "onerror",
        "ERR_NETWORK",
        "ontimeout",
        "timeoutErrorMessage",
        "ETIMEDOUT",
        "setRequestHeader",
        "upload",
        "cancel",
        "abort",
        "subscribe",
        "aborted",
        "parseProtocol",
        "send",
        "composeSignals",
        "signals",
        "AbortController",
        "streamChunk",
        "chunk",
        "chunkSize",
        "byteLength",
        "pos",
        "readStream",
        "stream",
        "asyncIterator",
        "reader",
        "getReader",
        "trackStream",
        "onProgress",
        "onFinish",
        "iterable",
        "readBytes",
        "_onFinish",
        "ReadableStream",
        "pull",
        "loadedBytes",
        "enqueue",
        "return",
        "highWaterMark",
        "isFetchSupported",
        "Request",
        "Response",
        "isReadableStreamSupported",
        "encodeText",
        "arrayBuffer",
        "supportsRequestStream",
        "duplexAccessed",
        "hasContentType",
        "duplex",
        "supportsResponseStream",
        "_",
        "ERR_NOT_SUPPORT",
        "resolveBodyLength",
        "getContentLength",
        "_request",
        "getBodyLength",
        "fetchAdapter",
        "fetchOptions",
        "composedSignal",
        "toAbortSignal",
        "requestContentLength",
        "contentTypeHeader",
        "isCredentialsSupported",
        "credentials",
        "isStreamResponse",
        "responseContentLength",
        "responseData",
        "knownAdapters",
        "http",
        "xhr",
        "renderReason",
        "isResolvedHandle",
        "adapters",
        "nameOrAdapter",
        "rejectedReasons",
        "reasons",
        "throwIfCancellationRequested",
        "throwIfRequested",
        "dispatchRequest",
        "VERSION",
        "validators$1",
        "deprecatedWarnings",
        "validator",
        "formatMessage",
        "opt",
        "desc",
        "opts",
        "ERR_DEPRECATED",
        "assertOptions",
        "schema",
        "allowUnknown",
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "validators",
        "Axios",
        "instanceConfig",
        "interceptors",
        "configOrUrl",
        "dummy",
        "boolean",
        "function",
        "contextHeaders",
        "requestInterceptorChain",
        "synchronousRequestInterceptors",
        "interceptor",
        "unshift",
        "responseInterceptorChain",
        "promise",
        "chain",
        "onFulfilled",
        "onRejected",
        "getUri",
        "generateHTTPMethod",
        "isForm",
        "CancelToken",
        "executor",
        "resolvePromise",
        "_listeners",
        "onfulfilled",
        "_resolve",
        "HttpStatusCode",
        "Continue",
        "SwitchingProtocols",
        "Processing",
        "EarlyHints",
        "Ok",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultiStatus",
        "AlreadyReported",
        "ImUsed",
        "MultipleChoices",
        "MovedPermanently",
        "Found",
        "SeeOther",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "PermanentRedirect",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "PayloadTooLarge",
        "UriTooLong",
        "UnsupportedMediaType",
        "RangeNotSatisfiable",
        "ExpectationFailed",
        "ImATeapot",
        "MisdirectedRequest",
        "UnprocessableEntity",
        "Locked",
        "FailedDependency",
        "TooEarly",
        "UpgradeRequired",
        "PreconditionRequired",
        "TooManyRequests",
        "RequestHeaderFieldsTooLarge",
        "UnavailableForLegalReasons",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported",
        "VariantAlsoNegotiates",
        "InsufficientStorage",
        "LoopDetected",
        "NotExtended",
        "NetworkAuthenticationRequired",
        "axios",
        "Cancel",
        "promises",
        "spread",
        "isAxiosError",
        "formToJSON",
        "getAdapter",
        "InvalidTokenError",
        "defaultMsalContext",
        "accounts",
        "MsalContext",
        "React",
        "Consumer",
        "msalConfig",
        "msalInstance$1",
        "buildFormatLongFn",
        "defaultWidth",
        "formats",
        "full",
        "long",
        "medium",
        "short",
        "buildLocalizeFn",
        "dirtyIndex",
        "valuesArray",
        "formattingValues",
        "defaultFormattingWidth",
        "_defaultWidth",
        "_width",
        "argumentCallback",
        "narrow",
        "abbreviated",
        "wide",
        "quarter",
        "am",
        "pm",
        "midnight",
        "noon",
        "morning",
        "afternoon",
        "evening",
        "night",
        "buildMatchFn",
        "string",
        "matchPatterns",
        "defaultMatchWidth",
        "matchResult",
        "matchedString",
        "parsePatterns",
        "defaultParseWidth",
        "predicate",
        "object",
        "valueCallback",
        "rest",
        "parsePattern",
        "any",
        "getHttpHandlerExtensionConfiguration",
        "runtimeConfig",
        "httpHandler",
        "setHttpHandler",
        "handler",
        "updateHttpClientConfig",
        "httpHandlerConfigs",
        "HttpAuthLocation",
        "HttpApiKeyAuthLocation",
        "EndpointURLScheme",
        "AlgorithmId",
        "FieldPosition",
        "SMITHY_CONTEXT_KEY",
        "IniSectionType",
        "RequestHandlerProtocol",
        "HttpRequest",
        "fragment",
        "cloned",
        "reduce",
        "carry",
        "paramName",
        "param",
        "isInstance",
        "HttpResponse",
        "statusCode",
        "resp",
        "hostHeaderMiddlewareOptions",
        "step",
        "priority",
        "tags",
        "override",
        "getHostHeaderPlugin",
        "applyToStack",
        "clientStack",
        "handlerProtocol",
        "requestHandler",
        "hostHeaderMiddleware",
        "loggerMiddlewareOptions",
        "TRACE_ID_HEADER_NAME",
        "addRecursionDetectionMiddlewareOptions",
        "getRecursionDetectionPlugin",
        "runtime",
        "nonEmptyString",
        "recursionDetectionMiddleware",
        "getSmithyContext",
        "normalizeProvider$1",
        "promisified",
        "httpAuthSchemeMiddleware",
        "mwOptions",
        "httpAuthSchemeProvider",
        "httpAuthSchemeParametersProvider",
        "authSchemes",
        "httpAuthSchemes",
        "scheme",
        "schemeId",
        "convertHttpAuthSchemesToMap",
        "smithyContext",
        "failureReasons",
        "identityProvider",
        "identityProviderConfigProvider",
        "identityProperties",
        "signingProperties",
        "propertiesExtractor",
        "selectedHttpAuthScheme",
        "httpAuthOption",
        "identity",
        "signer",
        "httpAuthSchemeEndpointRuleSetMiddlewareOptions",
        "relation",
        "toMiddleware",
        "deserializerMiddlewareOption",
        "serializerMiddlewareOption",
        "getSerdePlugin",
        "serializer",
        "deserializer",
        "commandStack",
        "deserializerMiddleware",
        "output",
        "hint",
        "$responseBodyText",
        "$response",
        "serializerMiddleware",
        "endpointV2",
        "urlParser",
        "defaultErrorHandler",
        "defaultSuccessHandler",
        "httpResponse",
        "httpSigningMiddlewareOptions",
        "getHttpSigningPlugin",
        "addRelativeTo",
        "errorHandler",
        "successHandler",
        "normalizeProvider",
        "alphabetByEncoding",
        "alphabetByValue",
        "start",
        "limit",
        "fromBase64",
        "totalByteLength",
        "out",
        "dataView",
        "DataView",
        "bitLength",
        "chunkOffset",
        "setUint8",
        "fromUtf8$2",
        "toUint8Array",
        "byteOffset",
        "BYTES_PER_ELEMENT",
        "toUtf8",
        "toBase64",
        "_input",
        "isArrayLike",
        "isUint8Array",
        "bitClusterCount",
        "Uint8ArrayBlobAdapter",
        "encoding",
        "mutate",
        "transformFromString",
        "transformToString",
        "escapeUri",
        "uri",
        "hexEncode",
        "requestTimeout",
        "timeoutInMs",
        "timeoutError",
        "keepAliveSupport",
        "supported",
        "FetchHttpHandler",
        "instanceOrOptions",
        "handle",
        "configProvider",
        "destroy",
        "abortSignal",
        "requestTimeoutInMs",
        "keepAlive",
        "abortError",
        "parts",
        "iLen",
        "qsEntry",
        "buildQueryString",
        "requestOptions",
        "keepalive",
        "requestInit",
        "removeSignalEventListener",
        "fetchRequest",
        "raceOfPromises",
        "fetchHeaders",
        "transformedHeaders",
        "blob",
        "onAbort",
        "once",
        "race",
        "streamCollector",
        "chunks",
        "isDone",
        "collected",
        "collectStream",
        "SHORT_TO_HEX",
        "HEX_TO_SHORT",
        "encodedByte",
        "toHex",
        "DefaultIdentityProviderConfig",
        "getIdentityProvider",
        "isIdentityExpired",
        "expirationMs",
        "doesIdentityRequireRefresh",
        "expiration",
        "IP_V4_REGEX",
        "isIpAddress",
        "VALID_HOST_LABEL_REGEX",
        "isValidHostLabel",
        "allowSubDomains",
        "labels",
        "label",
        "customEndpointFunctions",
        "debugId",
        "toDebugString",
        "ref",
        "argv",
        "EndpointError",
        "getAttr",
        "pathList",
        "part",
        "squareBracketIndex",
        "arrayIndex",
        "getAttrPathList",
        "acc",
        "DEFAULT_PORTS",
        "HTTP",
        "HTTPS",
        "endpointFunctions",
        "booleanEquals",
        "value1",
        "value2",
        "isSet",
        "not",
        "parseURL",
        "whatwgURL",
        "v",
        "isIp",
        "normalizedPath",
        "stringEquals",
        "stop",
        "reverse",
        "uriEncode",
        "evaluateTemplate",
        "template",
        "evaluatedTemplateArr",
        "templateContext",
        "endpointParams",
        "referenceRecord",
        "currentIndex",
        "openingBraceIndex",
        "closingBraceIndex",
        "parameterName",
        "refName",
        "attrName",
        "evaluateExpression",
        "keyName",
        "callFunction",
        "getReferenceValue",
        "evaluatedArgs",
        "arg",
        "fnSegments",
        "evaluateCondition",
        "fnArgs",
        "toAssign",
        "evaluateConditions",
        "conditions",
        "conditionsReferenceRecord",
        "condition",
        "getEndpointHeaders",
        "headerKey",
        "headerVal",
        "headerValEntry",
        "processedExpr",
        "getEndpointProperty",
        "property",
        "propertyEntry",
        "getEndpointProperties",
        "propertyKey",
        "propertyVal",
        "getEndpointUrl",
        "endpointUrl",
        "expression",
        "evaluateEndpointRule",
        "endpointRule",
        "endpointRuleOptions",
        "evaluateErrorRule",
        "errorRule",
        "evaluateTreeRule",
        "treeRule",
        "rules",
        "evaluateRules",
        "rule",
        "endpointOrUndefined",
        "isVirtualHostableS3Bucket",
        "selectedPartitionsInfo",
        "partitions",
        "outputs",
        "dnsSuffix",
        "dualStackDnsSuffix",
        "implicitGlobalRegion",
        "supportsDualStack",
        "supportsFIPS",
        "regionRegex",
        "regions",
        "awsEndpointFunctions",
        "parseArn",
        "segments",
        "arn",
        "partition",
        "service",
        "resourcePath",
        "resourceId",
        "resource",
        "flat",
        "regionData",
        "DEFAULT_PARTITION",
        "setFeature",
        "feature",
        "__aws_sdk_context",
        "features",
        "aws",
        "getDateHeader",
        "date",
        "getSkewCorrectedDate",
        "systemClockOffset",
        "getUpdatedSystemClockOffset",
        "clockTime",
        "currentSystemClockOffset",
        "clockTimeInMs",
        "isClockSkewed",
        "throwSigningPropertyError",
        "AwsSdkSigV4Signer",
        "httpRequest",
        "validatedProps",
        "signerFunction",
        "signingRegion",
        "signingRegionSet",
        "signingName",
        "validateSigningProperties",
        "handlerExecutionContext",
        "second",
        "signingDate",
        "signingService",
        "serverTime",
        "ServerTime",
        "initialSystemClockOffset",
        "$metadata",
        "clockSkewCorrected",
        "dateHeader",
        "memoize",
        "isExpired",
        "requiresRefresh",
        "resolved",
        "pending",
        "hasResult",
        "isConstant",
        "coalesceProvider",
        "AMZ_DATE_QUERY_PARAM",
        "SIGNATURE_QUERY_PARAM",
        "TOKEN_QUERY_PARAM",
        "AUTH_HEADER",
        "AMZ_DATE_HEADER",
        "GENERATED_HEADERS",
        "SIGNATURE_HEADER",
        "SHA256_HEADER",
        "TOKEN_HEADER",
        "ALWAYS_UNSIGNABLE_HEADERS",
        "authorization",
        "connection",
        "expect",
        "pragma",
        "referer",
        "te",
        "trailer",
        "upgrade",
        "PROXY_HEADER_PATTERN",
        "SEC_HEADER_PATTERN",
        "ALGORITHM_IDENTIFIER",
        "EVENT_ALGORITHM_IDENTIFIER",
        "KEY_TYPE_IDENTIFIER",
        "signingKeyCache",
        "cacheQueue",
        "createScope",
        "shortDate",
        "ctor",
        "getCanonicalHeaders",
        "unsignableHeaders",
        "signableHeaders",
        "canonical",
        "headerName",
        "canonicalHeaderName",
        "getPayloadHash",
        "hashConstructor",
        "hashCtor",
        "HeaderFormatter",
        "formatHeaderValue",
        "shortView",
        "setInt16",
        "intView",
        "setInt32",
        "longBytes",
        "binView",
        "setUint16",
        "binBytes",
        "utf8Bytes",
        "strView",
        "strBytes",
        "tsBytes",
        "Int64",
        "fromNumber",
        "valueOf",
        "UUID_PATTERN",
        "uuidBytes",
        "encoded",
        "fromHex",
        "HEADER_VALUE_TYPE",
        "remaining",
        "negate",
        "negative",
        "prepareRequest",
        "toDate",
        "SignatureV4",
        "applyChecksum",
        "sha256",
        "uriEscapePath",
        "headerFormatter",
        "regionProvider",
        "credentialProvider",
        "presign",
        "originalRequest",
        "unhoistableHeaders",
        "hoistableHeaders",
        "validateResolvedCredentials",
        "longDate",
        "formatDate",
        "moveHeadersToQuery",
        "lname",
        "sessionToken",
        "accessKeyId",
        "canonicalHeaders",
        "getCanonicalHeaderList",
        "getSignature",
        "getSigningKey",
        "createCanonicalRequest",
        "toSign",
        "signString",
        "signEvent",
        "signMessage",
        "signRequest",
        "priorSignature",
        "hashedPayload",
        "hashedHeaders",
        "stringToSign",
        "signableMessage",
        "signature",
        "requestToSign",
        "payloadHash",
        "hasHeader",
        "soughtHeader",
        "sortedHeaders",
        "getCanonicalPath",
        "getCanonicalQuery",
        "serialized",
        "encodedKey",
        "createStringToSign",
        "credentialScope",
        "canonicalRequest",
        "hashedRequest",
        "normalizedPathSegments",
        "pathSegment",
        "keyPromise",
        "sha256Constructor",
        "secretAccessKey",
        "signable",
        "resolveAwsSdkSigV4Config",
        "normalizedCreds",
        "isUserSupplied",
        "memoizeIdentityProvider",
        "normalizedProvider",
        "credentialDefaultProvider",
        "parentClientConfig",
        "signingEscapePath",
        "regionInfoProvider",
        "useFipsEndpoint",
        "useDualstackEndpoint",
        "regionInfo",
        "serviceId",
        "signerConstructor",
        "defaultSigningName",
        "creds",
        "setCredentialFeature",
        "$source",
        "getAllAliases",
        "_aliases",
        "getMiddlewareNameWithAliases",
        "constructStack",
        "absoluteEntries",
        "relativeEntries",
        "identifyOnResolve",
        "entriesNameSet",
        "cloneTo",
        "toStack",
        "middleware",
        "expandRelativeMiddlewareList",
        "expandedMiddlewareList",
        "before",
        "after",
        "getMiddlewareList",
        "normalizedAbsoluteEntries",
        "normalizedRelativeEntries",
        "normalizedEntriesNameMap",
        "normalizedEntry",
        "mainChain",
        "stepWeights",
        "priorityWeights",
        "wholeList",
        "toOverrideIndex",
        "toOverride",
        "plugin",
        "toRemove",
        "isRemoved",
        "filterCb",
        "removeByName",
        "removeByReference",
        "removeByTag",
        "identify",
        "toggle",
        "finalizeRequest",
        "deserialize",
        "high",
        "normal",
        "low",
        "Client",
        "middlewareStack",
        "command",
        "optionsOrCb",
        "cacheMiddleware",
        "WeakMap",
        "resolveMiddleware",
        "Command",
        "classBuilder",
        "ClassBuilder",
        "resolveMiddlewareWithContext",
        "middlewareFn",
        "clientName",
        "commandName",
        "inputFilterSensitiveLog",
        "outputFilterSensitiveLog",
        "additionalContext",
        "CommandCtor",
        "commandInstance",
        "_init",
        "_ep",
        "_middlewareFn",
        "_commandName",
        "_clientName",
        "_additionalContext",
        "_smithyContext",
        "_inputFilterSensitiveLog",
        "_outputFilterSensitiveLog",
        "_serializer",
        "_deserializer",
        "ep",
        "endpointParameterInstructions",
        "middlewareSupplier",
        "operation",
        "inputFilter",
        "outputFilter",
        "ser",
        "de",
        "closure",
        "CommandRef",
        "getEndpointParameterInstructions",
        "SENSITIVE_STRING",
        "expectNumber",
        "parseFloat",
        "stackTraceWarning",
        "expectString",
        "NUMBER_REGEX",
        "parseNumber",
        "parseEpochTimestamp",
        "valueAsDouble",
        "strictParseDouble",
        "tag",
        "Infinity",
        "ServiceException",
        "$fault",
        "decorateServiceException",
        "exception",
        "additions",
        "Message",
        "deserializeMetadata$1",
        "httpStatusCode",
        "extendedRequestId",
        "cfId",
        "loadConfigsForDefaultMode",
        "retryMode",
        "connectionTimeout",
        "getChecksumConfiguration",
        "checksumAlgorithms",
        "algorithmId",
        "checksumConstructor",
        "_checksumAlgorithms",
        "addChecksumAlgorithm",
        "resolveChecksumRuntimeConfig",
        "checksumAlgorithm",
        "getRetryConfiguration",
        "_retryStrategy",
        "retryStrategy",
        "setRetryStrategy",
        "resolveRetryRuntimeConfig",
        "retryStrategyConfiguration",
        "getDefaultExtensionConfiguration",
        "resolveDefaultRuntimeConfig",
        "StringWrapper",
        "Class",
        "NoOpLogger",
        "applyInstruction",
        "instructions",
        "instruction",
        "nonNullish",
        "valueFn",
        "pass",
        "sourceKey",
        "defaultFilterPassed",
        "customFilterPassed",
        "_json",
        "collectBodyString",
        "streamBody",
        "fromContext",
        "collectBody",
        "utf8Encoder",
        "parseJsonBody",
        "parseJsonErrorBody",
        "errorBody",
        "ACCOUNT_ID_ENDPOINT_REGEX",
        "USER_AGENT",
        "X_AMZ_USER_AGENT",
        "UA_NAME_ESCAPE_REGEX",
        "UA_VALUE_ESCAPE_REGEX",
        "userAgentMiddleware",
        "escapeUserAgent",
        "defaultUserAgent",
        "defaultUserAgentProvider",
        "acquireInitialRetryToken",
        "accountIdEndpointMode",
        "__smithy_context",
        "checkFeatures",
        "awsContext",
        "encodeFeatures",
        "customUserAgent",
        "appId",
        "userAgentAppId",
        "sdkUserAgentValue",
        "normalUAValue",
        "section",
        "userAgentPair",
        "prefixSeparatorIndex",
        "prefix",
        "uaName",
        "getUserAgentMiddlewareOptions",
        "SelectorType",
        "isFipsRegion",
        "getRealRegion",
        "CONTENT_LENGTH_HEADER",
        "contentLengthMiddlewareOptions",
        "getContentLengthPlugin",
        "bodyLengthChecker",
        "DOMAIN_PATTERN",
        "IP_ADDRESS_PATTERN",
        "DOTS_PATTERN",
        "isDnsCompatibleBucketName",
        "bucketName",
        "isArnBucketName",
        "bucket",
        "isArn",
        "isValidArn",
        "createConfigValueProvider",
        "configKey",
        "canonicalEndpointParamKey",
        "CredentialScope",
        "AccountId",
        "getEndpointFromConfig",
        "parseUrl",
        "querystring",
        "parseQueryString",
        "toEndpointV1",
        "resolveParams",
        "commandInput",
        "instructionsSupplier",
        "Bucket",
        "ForcePathStyle",
        "Endpoint",
        "DisableMultiRegionAccessPoints",
        "disableMultiRegionAccessPoints",
        "DisableMRAP",
        "resolveParamsForS3",
        "endpointMiddleware",
        "setFeature$1",
        "endpointFromConfig",
        "serviceConfiguredEndpoint",
        "endpointProvider",
        "getEndpointFromInstructions",
        "signing_region",
        "signing_service",
        "endpointMiddlewareOptions",
        "getEndpointPlugin",
        "RETRY_MODES",
        "DEFAULT_RETRY_MODE",
        "STANDARD",
        "THROTTLING_ERROR_CODES",
        "TRANSIENT_ERROR_CODES",
        "TRANSIENT_ERROR_STATUS_CODES",
        "NODEJS_TIMEOUT_ERROR_CODES",
        "isThrottlingError",
        "$retryable",
        "throttling",
        "isTransientError",
        "isClockSkewCorrectedError",
        "DefaultRateLimiter",
        "currentCapacity",
        "enabled",
        "lastMaxRate",
        "measuredTxRate",
        "requestCount",
        "lastTimestamp",
        "timeWindow",
        "beta",
        "minCapacity",
        "minFillRate",
        "scaleConstant",
        "smooth",
        "currentTimeInSeconds",
        "getCurrentTimeInSeconds",
        "lastThrottleTime",
        "lastTxRateBucket",
        "fillRate",
        "maxCapacity",
        "getSendToken",
        "acquireTokenBucket",
        "amount",
        "refillTokenBucket",
        "fillAmount",
        "updateClientSendingRate",
        "calculatedRate",
        "updateMeasuredRate",
        "rateToUse",
        "calculateTimeWindow",
        "cubicThrottle",
        "enableTokenBucket",
        "cubicSuccess",
        "newRate",
        "updateTokenBucketRate",
        "getPrecise",
        "timeBucket",
        "currentRate",
        "num",
        "toFixed",
        "createDefaultRetryToken",
        "retryDelay",
        "retryCount",
        "retryCost",
        "getRetryCount",
        "getRetryDelay",
        "getRetryCost",
        "StandardRetryStrategy",
        "maxAttempts",
        "capacity",
        "retryBackoffStrategy",
        "getDefaultRetryBackoffStrategy",
        "delayBase",
        "computeNextBackoffDelay",
        "attempts",
        "setDelayBase",
        "maxAttemptsProvider",
        "retryTokenScope",
        "refreshRetryTokenForRetry",
        "errorInfo",
        "getMaxAttempts",
        "shouldRetry",
        "errorType",
        "delayFromErrorType",
        "retryAfterHint",
        "capacityCost",
        "getCapacityCost",
        "recordSuccess",
        "getCapacity",
        "tokenToRenew",
        "isRetryableError",
        "AdaptiveRetryStrategy",
        "ADAPTIVE",
        "rateLimiter",
        "standardRetryStrategy",
        "rnds8",
        "rng",
        "byteToHex",
        "native",
        "v4",
        "rnds",
        "unsafeStringify",
        "isStreamingPayload",
        "isRetryStrategyV2",
        "getRetryErrorInfo",
        "getRetryErrorType",
        "getRetryAfterHint",
        "isServerError",
        "retryMiddlewareOptions",
        "getRetryPlugin",
        "retry",
        "retryToken",
        "lastError",
        "totalRetryDelay",
        "retryErrorInfo",
        "refreshError",
        "retryMiddleware",
        "retryAfterHeaderName",
        "retryAfter",
        "retryAfterSeconds",
        "defaultSecretsManagerHttpAuthSchemeParametersProvider",
        "defaultSecretsManagerHttpAuthSchemeProvider",
        "authParameters",
        "createAwsAuthSigv4HttpAuthOption",
        "commonParams",
        "UseFIPS",
        "Region",
        "UseDualStack",
        "packageInfo",
        "fromUtf8",
        "convertToBuffer",
        "isEmptyData",
        "SHA_256_HASH",
        "SHA_256_HMAC_ALGO",
        "EMPTY_DATA_SHA_256",
        "fallbackWindow",
        "locateWindow",
        "Sha256$2",
        "Sha256",
        "toHash",
        "typedArray",
        "_this",
        "__awaiter",
        "_arguments",
        "P",
        "generator",
        "__generator",
        "y",
        "sent",
        "trys",
        "ops",
        "Iterator",
        "verb",
        "op",
        "SuppressedError",
        "BLOCK_SIZE",
        "KEY",
        "INIT",
        "MAX_HASHABLE_LENGTH",
        "RawSha256",
        "Int32Array",
        "temp",
        "bufferLength",
        "bytesHashed",
        "finished",
        "bitsHashed",
        "bufferView",
        "undecoratedLength",
        "setUint32",
        "state0",
        "state1",
        "state2",
        "state3",
        "state4",
        "state5",
        "state6",
        "state7",
        "t1_1",
        "t2_1",
        "Sha256$1",
        "digestSync",
        "outer",
        "_a",
        "inner",
        "bufferHash",
        "bufferFromSecret",
        "subtleCryptoMethods",
        "supportsWebCrypto",
        "supportsSecureRandom",
        "supportsSubtleCrypto",
        "es5",
        "getFirstMatch",
        "getSecondMatch",
        "matchAndReturnConst",
        "getWindowsVersionName",
        "getMacOSVersionName",
        "getAndroidVersionName",
        "getVersionPrecision",
        "compareVersions",
        "getBrowserAlias",
        "BROWSER_ALIASES_MAP",
        "getBrowserTypeByAlias",
        "BROWSER_MAP",
        "ENGINE_MAP",
        "OS_MAP",
        "PLATFORMS_MAP",
        "Bada",
        "BlackBerry",
        "Chrome",
        "Chromium",
        "Electron",
        "Epiphany",
        "Firefox",
        "Focus",
        "Generic",
        "Googlebot",
        "Maxthon",
        "Opera",
        "PhantomJS",
        "Puffin",
        "QupZilla",
        "QQ",
        "QQLite",
        "Safari",
        "Sailfish",
        "SeaMonkey",
        "Sleipnir",
        "Swing",
        "Tizen",
        "Vivaldi",
        "WeChat",
        "Roku",
        "amazon_silk",
        "android",
        "bada",
        "blackberry",
        "chrome",
        "chromium",
        "electron",
        "epiphany",
        "firefox",
        "generic",
        "googlebot",
        "google_search",
        "ie",
        "k_meleon",
        "maxthon",
        "edge",
        "naver",
        "opera",
        "opera_coast",
        "phantomjs",
        "puffin",
        "qupzilla",
        "qq",
        "qqlite",
        "safari",
        "sailfish",
        "samsung_internet",
        "seamonkey",
        "sleipnir",
        "swing",
        "tizen",
        "uc",
        "vivaldi",
        "webos",
        "wechat",
        "yandex",
        "tablet",
        "mobile",
        "desktop",
        "tv",
        "WindowsPhone",
        "Windows",
        "MacOS",
        "iOS",
        "Android",
        "WebOS",
        "Linux",
        "ChromeOS",
        "PlayStation4",
        "EdgeHTML",
        "Blink",
        "Trident",
        "Presto",
        "Gecko",
        "WebKit",
        "getParser",
        "getResult",
        "_ua",
        "parsedResult",
        "getUA",
        "parseBrowser",
        "browser",
        "describe",
        "getBrowser",
        "getBrowserName",
        "getBrowserVersion",
        "getOS",
        "parseOS",
        "getOSName",
        "getOSVersion",
        "getPlatform",
        "parsePlatform",
        "getPlatformType",
        "getEngine",
        "engine",
        "parseEngine",
        "getEngineName",
        "satisfies",
        "isOS",
        "isPlatform",
        "compareVersion",
        "isEngine",
        "versionName",
        "vendor",
        "model",
        "bowser",
        "createDefaultUserAgentProvider",
        "clientVersion",
        "parsedUA",
        "sections",
        "TEXT_ENCODER",
        "calculateBodyLength",
        "z",
        "A",
        "B",
        "D",
        "ruleSet",
        "defaultEndpointResolver",
        "resolveEndpoint",
        "ruleSetObject",
        "paramsWithDefault",
        "paramKey",
        "paramDefaultValue",
        "requiredParams",
        "required",
        "requiredParam",
        "DEFAULTS_MODE_OPTIONS",
        "isMobileBrowser",
        "getRuntimeConfig",
        "defaultsMode",
        "resolveDefaultsModeConfig",
        "toLocaleLowerCase",
        "defaultConfigProvider",
        "clientSharedValues",
        "apiVersion",
        "base64Decoder",
        "base64Encoder",
        "disableHostPrefix",
        "extensions",
        "ipc",
        "utf8Decoder",
        "getRuntimeConfig$1",
        "getAwsRegionExtensionConfiguration",
        "runtimeConfigRegion",
        "setRegion",
        "getHttpAuthExtensionConfiguration",
        "_httpAuthSchemes",
        "_httpAuthSchemeProvider",
        "_credentials",
        "setHttpAuthScheme",
        "httpAuthScheme",
        "setHttpAuthSchemeProvider",
        "setCredentials",
        "resolveHttpAuthRuntimeConfig",
        "SecretsManagerServiceException",
        "DecryptionFailure",
        "InternalServiceError",
        "InvalidNextTokenException",
        "InvalidParameterException",
        "InvalidRequestException",
        "ResourceNotFoundException",
        "EncryptionFailure",
        "LimitExceededException",
        "MalformedPolicyDocumentException",
        "PreconditionNotMetException",
        "ResourceExistsException",
        "PublicPolicyException",
        "GetSecretValueResponseFilterSensitiveLog",
        "SecretBinary",
        "SecretString",
        "se_GetSecretValueCommand",
        "buildHttpRpcRequest",
        "de_GetSecretValueCommand",
        "de_CommandError",
        "contents",
        "de_GetSecretValueResponse",
        "deserializeMetadata",
        "parsedOutput",
        "loadRestJsonErrorCode",
        "sanitizeErrorCode",
        "cleanValue",
        "de_DecryptionFailureRes",
        "de_InternalServiceErrorRes",
        "de_InvalidNextTokenExceptionRes",
        "de_InvalidParameterExceptionRes",
        "de_InvalidRequestExceptionRes",
        "de_ResourceNotFoundExceptionRes",
        "de_EncryptionFailureRes",
        "de_LimitExceededExceptionRes",
        "de_MalformedPolicyDocumentExceptionRes",
        "de_PreconditionNotMetExceptionRes",
        "de_ResourceExistsExceptionRes",
        "de_PublicPolicyExceptionRes",
        "parsedBody",
        "throwDefaultError",
        "deserialized",
        "take",
        "ARN",
        "CreatedDate",
        "expectNonNull",
        "Name",
        "VersionId",
        "VersionStages",
        "ExceptionCtor",
        "throwDefaultError$1",
        "exceptionCtor",
        "Code",
        "resolvedHostname",
        "basePath",
        "cs",
        "_config_1",
        "resolveClientEndpointParameters",
        "_config_2",
        "normalizedAppIdProvider",
        "isValidUserAgentAppId",
        "resolveUserAgentConfig",
        "_config_7",
        "resolveHttpAuthSchemeConfig",
        "tls",
        "customEndpointProvider",
        "isCustomEndpoint",
        "resolvedConfig",
        "configuredEndpointPromise",
        "resolveEndpointConfig",
        "providedRegion",
        "resolveRegionConfig",
        "resolveRetryConfig",
        "_config_8",
        "resolveRuntimeExtensions",
        "extensionConfiguration",
        "extension",
        "configure",
        "awsRegionExtensionConfiguration",
        "httpHandlerExtensionConfiguration",
        "getUserAgentPlugin",
        "dynamoDbDocumentClientOptions",
        "overrideInputFilterSensitiveLog",
        "overrideOutputFilterSensitiveLog",
        "outputWithoutMetadata",
        "getHttpAuthSchemeEndpointRuleSetPlugin",
        "AWS_ACCESS_KEY",
        "AWS_SECRET_KEY",
        "AWS_REGION",
        "skillCategory",
        "createContext",
        "isOnboarded",
        "setUserInfo",
        "userInfo",
        "signIn",
        "signOut",
        "firstName",
        "lastName",
        "mobileNumber",
        "role",
        "characterMap",
        "À",
        "Á",
        "Â",
        "Ã",
        "Ä",
        "Å",
        "Ấ",
        "Ắ",
        "Ẳ",
        "Ẵ",
        "Ặ",
        "Æ",
        "Ầ",
        "Ằ",
        "Ȃ",
        "Ç",
        "Ḉ",
        "È",
        "É",
        "Ê",
        "Ë",
        "Ế",
        "Ḗ",
        "Ề",
        "Ḕ",
        "Ḝ",
        "Ȇ",
        "Ì",
        "Í",
        "Î",
        "Ï",
        "Ḯ",
        "Ȋ",
        "Ð",
        "Ñ",
        "Ò",
        "Ó",
        "Ô",
        "Õ",
        "Ö",
        "Ø",
        "Ố",
        "Ṍ",
        "Ṓ",
        "Ȏ",
        "Ù",
        "Ú",
        "Û",
        "Ü",
        "Ý",
        "à",
        "á",
        "â",
        "ã",
        "ä",
        "å",
        "ấ",
        "ắ",
        "ẳ",
        "ẵ",
        "ặ",
        "æ",
        "ầ",
        "ằ",
        "ȃ",
        "ç",
        "ḉ",
        "è",
        "é",
        "ê",
        "ë",
        "ế",
        "ḗ",
        "ề",
        "ḕ",
        "ḝ",
        "ȇ",
        "ì",
        "í",
        "î",
        "ï",
        "ḯ",
        "ȋ",
        "ð",
        "ñ",
        "ò",
        "ó",
        "ô",
        "õ",
        "ö",
        "ø",
        "ố",
        "ṍ",
        "ṓ",
        "ȏ",
        "ù",
        "ú",
        "û",
        "ü",
        "ý",
        "ÿ",
        "Ā",
        "ā",
        "Ă",
        "ă",
        "Ą",
        "ą",
        "Ć",
        "ć",
        "Ĉ",
        "ĉ",
        "Ċ",
        "ċ",
        "Č",
        "č",
        "C̆",
        "c̆",
        "Ď",
        "ď",
        "Đ",
        "đ",
        "Ē",
        "ē",
        "Ĕ",
        "ĕ",
        "Ė",
        "ė",
        "Ę",
        "ę",
        "Ě",
        "ě",
        "Ĝ",
        "Ǵ",
        "ĝ",
        "ǵ",
        "Ğ",
        "ğ",
        "Ġ",
        "ġ",
        "Ģ",
        "ģ",
        "Ĥ",
        "ĥ",
        "Ħ",
        "ħ",
        "Ḫ",
        "ḫ",
        "Ĩ",
        "ĩ",
        "Ī",
        "ī",
        "Ĭ",
        "ĭ",
        "Į",
        "į",
        "İ",
        "ı",
        "Ĳ",
        "ĳ",
        "Ĵ",
        "ĵ",
        "Ķ",
        "ķ",
        "Ḱ",
        "ḱ",
        "K̆",
        "k̆",
        "Ĺ",
        "ĺ",
        "Ļ",
        "ļ",
        "Ľ",
        "ľ",
        "Ŀ",
        "ŀ",
        "Ł",
        "ł",
        "Ḿ",
        "ḿ",
        "M̆",
        "m̆",
        "Ń",
        "ń",
        "Ņ",
        "ņ",
        "Ň",
        "ň",
        "ŉ",
        "N̆",
        "n̆",
        "Ō",
        "ō",
        "Ŏ",
        "ŏ",
        "Ő",
        "ő",
        "Œ",
        "œ",
        "P̆",
        "p̆",
        "Ŕ",
        "ŕ",
        "Ŗ",
        "ŗ",
        "Ř",
        "ř",
        "R̆",
        "r̆",
        "Ȓ",
        "ȓ",
        "Ś",
        "ś",
        "Ŝ",
        "ŝ",
        "Ş",
        "Ș",
        "ș",
        "ş",
        "Š",
        "š",
        "Ţ",
        "ţ",
        "ț",
        "Ț",
        "Ť",
        "ť",
        "Ŧ",
        "ŧ",
        "T̆",
        "t̆",
        "Ũ",
        "ũ",
        "Ū",
        "ū",
        "Ŭ",
        "ŭ",
        "Ů",
        "ů",
        "Ű",
        "ű",
        "Ų",
        "ų",
        "Ȗ",
        "ȗ",
        "V̆",
        "v̆",
        "Ŵ",
        "ŵ",
        "Ẃ",
        "ẃ",
        "X̆",
        "x̆",
        "Ŷ",
        "ŷ",
        "Ÿ",
        "Y̆",
        "y̆",
        "Ź",
        "ź",
        "Ż",
        "ż",
        "Ž",
        "ž",
        "ſ",
        "ƒ",
        "Ơ",
        "ơ",
        "Ư",
        "ư",
        "Ǎ",
        "ǎ",
        "Ǐ",
        "ǐ",
        "Ǒ",
        "ǒ",
        "Ǔ",
        "ǔ",
        "Ǖ",
        "ǖ",
        "Ǘ",
        "ǘ",
        "Ǚ",
        "ǚ",
        "Ǜ",
        "ǜ",
        "Ứ",
        "ứ",
        "Ṹ",
        "ṹ",
        "Ǻ",
        "ǻ",
        "Ǽ",
        "ǽ",
        "Ǿ",
        "ǿ",
        "Þ",
        "þ",
        "Ṕ",
        "ṕ",
        "Ṥ",
        "ṥ",
        "X́",
        "x́",
        "Ѓ",
        "ѓ",
        "Ќ",
        "ќ",
        "A̋",
        "a̋",
        "E̋",
        "e̋",
        "I̋",
        "i̋",
        "Ǹ",
        "ǹ",
        "Ồ",
        "ồ",
        "Ṑ",
        "ṑ",
        "Ừ",
        "ừ",
        "Ẁ",
        "ẁ",
        "Ỳ",
        "ỳ",
        "Ȁ",
        "ȁ",
        "Ȅ",
        "ȅ",
        "Ȉ",
        "ȉ",
        "Ȍ",
        "ȍ",
        "Ȑ",
        "ȑ",
        "Ȕ",
        "ȕ",
        "B̌",
        "b̌",
        "Č̣",
        "č̣",
        "Ê̌",
        "ê̌",
        "F̌",
        "f̌",
        "Ǧ",
        "ǧ",
        "Ȟ",
        "ȟ",
        "J̌",
        "ǰ",
        "Ǩ",
        "ǩ",
        "M̌",
        "m̌",
        "P̌",
        "p̌",
        "Q̌",
        "q̌",
        "Ř̩",
        "ř̩",
        "Ṧ",
        "ṧ",
        "V̌",
        "v̌",
        "W̌",
        "w̌",
        "X̌",
        "x̌",
        "Y̌",
        "y̌",
        "A̧",
        "a̧",
        "B̧",
        "b̧",
        "Ḑ",
        "ḑ",
        "Ȩ",
        "ȩ",
        "Ɛ̧",
        "ɛ̧",
        "Ḩ",
        "ḩ",
        "I̧",
        "i̧",
        "Ɨ̧",
        "ɨ̧",
        "M̧",
        "m̧",
        "O̧",
        "o̧",
        "Q̧",
        "q̧",
        "U̧",
        "u̧",
        "X̧",
        "x̧",
        "Z̧",
        "z̧",
        "chars",
        "extendStatics",
        "DoubleIndexedKV",
        "keyToValue",
        "valueToKey",
        "getByKey",
        "getByValue",
        "Registry",
        "generateIdentifier",
        "register",
        "identifier",
        "getIdentifier",
        "getValue",
        "__extends",
        "__",
        "ClassRegistry",
        "_super",
        "classToAllowedProps",
        "allowProps",
        "getAllowedProps",
        "__read$3",
        "ar",
        "record",
        "valuesOfObj",
        "valuesNotNever",
        "run",
        "findArr",
        "CustomTransformerRegistry",
        "transfomers",
        "transformer",
        "findApplicable",
        "isApplicable",
        "findByName",
        "isPlainObject$1",
        "isEmptyObject",
        "isArray$1",
        "isMap",
        "isSymbol",
        "getType$1",
        "isNaNValue",
        "isPrimitive",
        "isNull",
        "escapeKey",
        "stringifyPath",
        "parsePath",
        "segment",
        "lastSegment",
        "__assign$1",
        "__read$2",
        "__spreadArray$2",
        "to",
        "il",
        "simpleTransformation",
        "annotation",
        "transform",
        "untransform",
        "simpleRules",
        "BigInt",
        "superJson",
        "baseError",
        "allowedErrorProps",
        "regex",
        "flags",
        "compositeTransformation",
        "symbolRule",
        "symbolRegistry",
        "constructorToName",
        "Int8Array",
        "Int16Array",
        "Uint16Array",
        "Float32Array",
        "Float64Array",
        "Uint8ClampedArray",
        "typedArrayRule",
        "isInstanceOfRegisteredClass",
        "potentialClass",
        "classRegistry",
        "classRule",
        "clazz",
        "allowedProps",
        "customRule",
        "customTransformerRegistry",
        "compositeRules",
        "transformValue",
        "applicableCompositeRule",
        "applicableSimpleRule",
        "simpleRulesByAnnotation",
        "getNthKey",
        "validatePath",
        "setDeep",
        "mapper",
        "row",
        "keyOfRow",
        "lastKey",
        "keyToRow",
        "__read$1",
        "__spreadArray$1",
        "traverse",
        "tree",
        "walker",
        "nodeValue",
        "children",
        "child",
        "subtree",
        "applyValueAnnotations",
        "plain",
        "annotations",
        "transformation",
        "untransformValue",
        "applyReferentialEqualityAnnotations",
        "identicalPaths",
        "getDeep",
        "identicalObjectPath",
        "root",
        "other",
        "identicalPath",
        "identities",
        "dedupe",
        "objectsInThisPath",
        "seenObjects",
        "primitive",
        "existingSet",
        "addIdentity",
        "seen",
        "transformedValue",
        "isDeep",
        "transformed_1",
        "result_1",
        "transformationResult",
        "transformed",
        "innerAnnotations",
        "recursiveResult",
        "getType",
        "copy",
        "getOwnPropertySymbols",
        "newVal",
        "originalObject",
        "includeNonenumerable",
        "propType",
        "propertyIsEnumerable",
        "assignProp",
        "nonenumerable",
        "__assign",
        "__read",
        "__spreadArray",
        "SuperJSON",
        "_c",
        "identitites",
        "rootEqualityPaths",
        "equalityAnnotations",
        "paths",
        "representativePath",
        "referentialEqualities",
        "registerClass",
        "registerSymbol",
        "registerCustom",
        "allowErrorProps",
        "defaultInstance",
        "defaultTheme",
        "background",
        "backgroundAlt",
        "foreground",
        "gray",
        "grayAlt",
        "inputBackgroundColor",
        "inputTextColor",
        "danger",
        "active",
        "paused",
        "ThemeContext",
        "getQueryStatusColor",
        "queryState",
        "observerCount",
        "isStale",
        "theme",
        "fetchStatus",
        "styled",
        "newStyles",
        "queries",
        "mediaStyles",
        "current",
        "isMatch",
        "setIsMatch",
        "matchMedia",
        "onChange",
        "addListener",
        "removeListener",
        "useMediaQuery",
        "_props",
        "fontSize",
        "fontFamily",
        "display",
        "backgroundColor",
        "color",
        "flexDirection",
        "flex",
        "overflow",
        "(max-width: 700px)",
        "borderTop",
        "appearance",
        "fontWeight",
        "borderRadius",
        "opacity",
        "disabled",
        "cursor",
        "flexWrap",
        "gap",
        "alignItems",
        "textShadow",
        "lineHeight",
        "WebkitAppearance",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundPosition",
        "backgroundSize",
        "outline",
        "wordBreak",
        "font",
        "marginLeft",
        "paddingLeft",
        "borderLeft",
        "hasRequiredUseSyncExternalStoreShim_production_min",
        "shim",
        "useSyncExternalStoreShim_production_min",
        "React__default",
        "useState",
        "useEffect",
        "useLayoutEffect",
        "useDebugValue",
        "getSnapshot",
        "inst",
        "useSyncExternalStore",
        "requireUseSyncExternalStoreShim_production_min",
        "shimExports",
        "useSubscribeToQueryCache",
        "queryCache",
        "skip",
        "onStoreChange",
        "notifyManager",
        "batchCalls",
        "QueryRow",
        "queryKey",
        "setActiveQueryHash",
        "activeQueryHash",
        "_useSubscribeToQueryC3",
        "_useSubscribeToQueryC4",
        "_useSubscribeToQueryC5",
        "_useSubscribeToQueryC6",
        "queryHash",
        "_queryCache$find",
        "_queryCache$find2",
        "_queryCache$find3",
        "isDisabled",
        "_queryCache$find4",
        "_queryCache$find5",
        "getObserversCount",
        "onClick",
        "borderBottom",
        "justifyContent",
        "displayName",
        "ReactQueryDevtools",
        "Reports",
        "_jsx",
        "AppRouter",
        "Routes",
        "Route",
        "element",
        "queryClient",
        "QueryClient",
        "_jsxs",
        "QueryClientProvider",
        "UIThemeProvider",
        "I18nextProvider",
        "i18n",
        "initialIsOpen",
        "___CSS_LOADER_EXPORT___"
    ],
    "sourceRoot": ""
}